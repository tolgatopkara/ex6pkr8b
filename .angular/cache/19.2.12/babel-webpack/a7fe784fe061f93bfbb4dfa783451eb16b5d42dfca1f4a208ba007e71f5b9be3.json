{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst theme = ({\n  dt\n}) => `\n.p-iftalabel {\n    display: block;\n    position: relative;\n}\n\n.p-iftalabel label {\n    position: absolute;\n    pointer-events: none;\n    top: ${dt('iftalabel.top')};\n    transition-property: all;\n    transition-timing-function: ease;\n    line-height: 1;\n    font-size: ${dt('iftalabel.font.size')};\n    font-weight: ${dt('iftalabel.font.weight')};\n    inset-inline-start: ${dt('iftalabel.position.x')};\n    color: ${dt('iftalabel.color')};\n    transition-duration: ${dt('iftalabel.transition.duration')};\n}\n\n.p-iftalabel .p-inputtext,\n.p-iftalabel .p-textarea,\n.p-iftalabel .p-select-label,\n.p-iftalabel .p-multiselect-label-container,\n.p-iftalabel .p-autocomplete-input-multiple,\n.p-iftalabel .p-cascadeselect-label,\n.p-iftalabel .p-treeselect-label,\n.p-iftalabel .p-datepicker-input,\n.p-iftalabel .p-inputmask,\n.p-iftalabel .p-autocomplete .p-inputtext,\n.p-iftalabel .p-inputnumber .p-inputtext,\n.p-iftalabel .p-password .p-inputtext,\n.p-iftalabel > .p-iconfield .p-inputtext {\n    padding-top: ${dt('iftalabel.input.padding.top')};\n}\n\n.p-iftalabel:has(.ng-invalid.ng-dirty) label {\n    color: ${dt('iftalabel.invalid.color')};\n}\n\n.p-iftalabel:has(input:focus) label,\n.p-iftalabel:has(input:-webkit-autofill) label,\n.p-iftalabel:has(textarea:focus) label,\n.p-iftalabel:has(.p-inputwrapper-focus) label {\n    color: ${dt('iftalabel.focus.color')};\n}\n\n.p-iftalabel .p-inputicon {\n    top: ${dt('iftalabel.input.padding.top')};\n    transform: translateY(25%);\n    margin-top: 0;\n}\n\n/*.p-iftalabel .p-placeholder,\n.p-iftalabel input::placeholder,\n.p-iftalabel .p-inputtext::placeholder {\n    opacity: 0;\n    transition-property: all;\n    transition-timing-function: ease;\n}\n\n.p-iftalabel .p-focus .p-placeholder,\n.p-iftalabel input:focus::placeholder,\n.p-iftalabel .p-inputtext:focus::placeholder {\n    opacity: 1;\n    transition-property: all;\n    transition-timing-function: ease;\n}*/\n`;\nconst classes = {\n  root: 'p-iftalabel'\n};\nclass IftaLabelStyle extends BaseStyle {\n  name = 'iftalabel';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵIftaLabelStyle_BaseFactory;\n    return function IftaLabelStyle_Factory(__ngFactoryType__) {\n      return (ɵIftaLabelStyle_BaseFactory || (ɵIftaLabelStyle_BaseFactory = i0.ɵɵgetInheritedFactory(IftaLabelStyle)))(__ngFactoryType__ || IftaLabelStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: IftaLabelStyle,\n    factory: IftaLabelStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IftaLabelStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * IftaLabel visually integrates a label within its form element.\n *\n * [Live Demo](https://www.primeng.org/iftalabel/)\n *\n * @module iftalabelstyle\n *\n */\nvar IftaLabelClasses;\n(function (IftaLabelClasses) {\n  /**\n   * Class name of the root element\n   */\n  IftaLabelClasses[\"root\"] = \"p-iftalabel\";\n})(IftaLabelClasses || (IftaLabelClasses = {}));\n\n/**\n * IftaLabel is used to create infield top aligned labels.\n * @group Components\n */\nclass IftaLabel extends BaseComponent {\n  _componentStyle = inject(IftaLabelStyle);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵIftaLabel_BaseFactory;\n    return function IftaLabel_Factory(__ngFactoryType__) {\n      return (ɵIftaLabel_BaseFactory || (ɵIftaLabel_BaseFactory = i0.ɵɵgetInheritedFactory(IftaLabel)))(__ngFactoryType__ || IftaLabel);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: IftaLabel,\n    selectors: [[\"p-iftalabel\"], [\"p-iftaLabel\"], [\"p-ifta-label\"]],\n    hostAttrs: [1, \"p-iftalabel\"],\n    features: [i0.ɵɵProvidersFeature([IftaLabelStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function IftaLabel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IftaLabel, [{\n    type: Component,\n    args: [{\n      selector: 'p-iftalabel, p-iftaLabel, p-ifta-label',\n      standalone: true,\n      template: ` <ng-content></ng-content> `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [IftaLabelStyle],\n      host: {\n        class: 'p-iftalabel'\n      }\n    }]\n  }], null, null);\n})();\nclass IftaLabelModule {\n  static ɵfac = function IftaLabelModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || IftaLabelModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: IftaLabelModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule, RouterModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IftaLabelModule, [{\n    type: NgModule,\n    args: [{\n      imports: [IftaLabel, CommonModule, SharedModule, RouterModule],\n      exports: [IftaLabel, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IftaLabel, IftaLabelClasses, IftaLabelModule, IftaLabelStyle };","map":{"version":3,"names":["CommonModule","i0","Injectable","inject","ViewEncapsulation","ChangeDetectionStrategy","Component","NgModule","RouterModule","SharedModule","BaseComponent","BaseStyle","_c0","theme","dt","classes","root","IftaLabelStyle","name","ɵfac","ɵIftaLabelStyle_BaseFactory","IftaLabelStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","IftaLabelClasses","IftaLabel","_componentStyle","ɵIftaLabel_BaseFactory","IftaLabel_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostAttrs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","IftaLabel_Template","rf","ctx","ɵɵprojectionDef","ɵɵprojection","encapsulation","changeDetection","args","selector","standalone","OnPush","None","providers","host","class","IftaLabelModule","IftaLabelModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-iftalabel.mjs"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-iftalabel {\n    display: block;\n    position: relative;\n}\n\n.p-iftalabel label {\n    position: absolute;\n    pointer-events: none;\n    top: ${dt('iftalabel.top')};\n    transition-property: all;\n    transition-timing-function: ease;\n    line-height: 1;\n    font-size: ${dt('iftalabel.font.size')};\n    font-weight: ${dt('iftalabel.font.weight')};\n    inset-inline-start: ${dt('iftalabel.position.x')};\n    color: ${dt('iftalabel.color')};\n    transition-duration: ${dt('iftalabel.transition.duration')};\n}\n\n.p-iftalabel .p-inputtext,\n.p-iftalabel .p-textarea,\n.p-iftalabel .p-select-label,\n.p-iftalabel .p-multiselect-label-container,\n.p-iftalabel .p-autocomplete-input-multiple,\n.p-iftalabel .p-cascadeselect-label,\n.p-iftalabel .p-treeselect-label,\n.p-iftalabel .p-datepicker-input,\n.p-iftalabel .p-inputmask,\n.p-iftalabel .p-autocomplete .p-inputtext,\n.p-iftalabel .p-inputnumber .p-inputtext,\n.p-iftalabel .p-password .p-inputtext,\n.p-iftalabel > .p-iconfield .p-inputtext {\n    padding-top: ${dt('iftalabel.input.padding.top')};\n}\n\n.p-iftalabel:has(.ng-invalid.ng-dirty) label {\n    color: ${dt('iftalabel.invalid.color')};\n}\n\n.p-iftalabel:has(input:focus) label,\n.p-iftalabel:has(input:-webkit-autofill) label,\n.p-iftalabel:has(textarea:focus) label,\n.p-iftalabel:has(.p-inputwrapper-focus) label {\n    color: ${dt('iftalabel.focus.color')};\n}\n\n.p-iftalabel .p-inputicon {\n    top: ${dt('iftalabel.input.padding.top')};\n    transform: translateY(25%);\n    margin-top: 0;\n}\n\n/*.p-iftalabel .p-placeholder,\n.p-iftalabel input::placeholder,\n.p-iftalabel .p-inputtext::placeholder {\n    opacity: 0;\n    transition-property: all;\n    transition-timing-function: ease;\n}\n\n.p-iftalabel .p-focus .p-placeholder,\n.p-iftalabel input:focus::placeholder,\n.p-iftalabel .p-inputtext:focus::placeholder {\n    opacity: 1;\n    transition-property: all;\n    transition-timing-function: ease;\n}*/\n`;\nconst classes = {\n    root: 'p-iftalabel'\n};\nclass IftaLabelStyle extends BaseStyle {\n    name = 'iftalabel';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabelStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabelStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabelStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * IftaLabel visually integrates a label within its form element.\n *\n * [Live Demo](https://www.primeng.org/iftalabel/)\n *\n * @module iftalabelstyle\n *\n */\nvar IftaLabelClasses;\n(function (IftaLabelClasses) {\n    /**\n     * Class name of the root element\n     */\n    IftaLabelClasses[\"root\"] = \"p-iftalabel\";\n})(IftaLabelClasses || (IftaLabelClasses = {}));\n\n/**\n * IftaLabel is used to create infield top aligned labels.\n * @group Components\n */\nclass IftaLabel extends BaseComponent {\n    _componentStyle = inject(IftaLabelStyle);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabel, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.10\", type: IftaLabel, isStandalone: true, selector: \"p-iftalabel, p-iftaLabel, p-ifta-label\", host: { classAttribute: \"p-iftalabel\" }, providers: [IftaLabelStyle], usesInheritance: true, ngImport: i0, template: ` <ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-iftalabel, p-iftaLabel, p-ifta-label',\n                    standalone: true,\n                    template: ` <ng-content></ng-content> `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [IftaLabelStyle],\n                    host: {\n                        class: 'p-iftalabel'\n                    }\n                }]\n        }] });\nclass IftaLabelModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabelModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabelModule, imports: [IftaLabel, CommonModule, SharedModule, RouterModule], exports: [IftaLabel, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabelModule, imports: [CommonModule, SharedModule, RouterModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: IftaLabelModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [IftaLabel, CommonModule, SharedModule, RouterModule],\n                    exports: [IftaLabel, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IftaLabel, IftaLabelClasses, IftaLabelModule, IftaLabelStyle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}