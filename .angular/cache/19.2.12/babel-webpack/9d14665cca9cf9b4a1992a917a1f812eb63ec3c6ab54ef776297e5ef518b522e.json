{"ast":null,"code":"import { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, TemplateRef, booleanAttribute, numberAttribute, Input, Directive, NgModule } from '@angular/core';\nimport { uuid, hasClass, appendChild, fadeIn, getWindowScrollLeft, getWindowScrollTop, findSingle, getOuterWidth, getOuterHeight, getViewport, removeChild } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\nconst theme = ({\n  dt\n}) => `\n.p-tooltip {\n    position: absolute;\n    display: none;\n    max-width: ${dt('tooltip.max.width')};\n}\n\n.p-tooltip-right,\n.p-tooltip-left {\n    padding: 0 ${dt('tooltip.gutter')};\n}\n\n.p-tooltip-top,\n.p-tooltip-bottom {\n    padding: ${dt('tooltip.gutter')} 0;\n}\n\n.p-tooltip-text {\n    white-space: pre-line;\n    word-break: break-word;\n    background: ${dt('tooltip.background')};\n    color: ${dt('tooltip.color')};\n    padding: ${dt('tooltip.padding')};\n    box-shadow: ${dt('tooltip.shadow')};\n    border-radius: ${dt('tooltip.border.radius')};\n}\n\n.p-tooltip-arrow {\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-color: transparent;\n    border-style: solid;\n    scale: 2;\n}\n\n.p-tooltip-right .p-tooltip-arrow {\n    top: 50%;\n    left: 0;\n    margin-top: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0;\n    border-right-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-left .p-tooltip-arrow {\n    top: 50%;\n    right: 0;\n    margin-top: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};\n    border-left-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-top .p-tooltip-arrow {\n    bottom: 0;\n    left: 50%;\n    margin-left: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')};\n    border-top-color: ${dt('tooltip.background')};\n    border-bottom-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-bottom .p-tooltip-arrow {\n    top: 0;\n    left: 50%;\n    margin-left: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};\n    border-top-color: ${dt('tooltip.background')};\n    border-bottom-color: ${dt('tooltip.background')};\n}\n`;\nconst classes = {\n  root: 'p-tooltip p-component',\n  arrow: 'p-tooltip-arrow',\n  text: 'p-tooltip-text'\n};\nclass TooltipStyle extends BaseStyle {\n  name = 'tooltip';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTooltipStyle_BaseFactory;\n    return function TooltipStyle_Factory(__ngFactoryType__) {\n      return (ɵTooltipStyle_BaseFactory || (ɵTooltipStyle_BaseFactory = i0.ɵɵgetInheritedFactory(TooltipStyle)))(__ngFactoryType__ || TooltipStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TooltipStyle,\n    factory: TooltipStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Tooltip directive provides advisory information for a component.\n *\n * [Live Demo](https://www.primeng.org/tooltip)\n *\n * @module tooltipstyle\n *\n */\nvar TooltipClasses;\n(function (TooltipClasses) {\n  /**\n   * Class name of the root element\n   */\n  TooltipClasses[\"root\"] = \"p-tooltip\";\n  /**\n   * Class name of the arrow element\n   */\n  TooltipClasses[\"arrow\"] = \"p-tooltip-arrow\";\n  /**\n   * Class name of the text element\n   */\n  TooltipClasses[\"text\"] = \"p-tooltip-text\";\n})(TooltipClasses || (TooltipClasses = {}));\n\n/**\n * Tooltip directive provides advisory information for a component.\n * @group Components\n */\nclass Tooltip extends BaseComponent {\n  zone;\n  viewContainer;\n  /**\n   * Position of the tooltip.\n   * @group Props\n   */\n  tooltipPosition;\n  /**\n   * Event to show the tooltip.\n   * @group Props\n   */\n  tooltipEvent = 'hover';\n  /**\n   *  Target element to attach the overlay, valid values are \"body\", \"target\" or a local ng-F variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  appendTo;\n  /**\n   * Type of CSS position.\n   * @group Props\n   */\n  positionStyle;\n  /**\n   * Style class of the tooltip.\n   * @group Props\n   */\n  tooltipStyleClass;\n  /**\n   * Whether the z-index should be managed automatically to always go on top or have a fixed value.\n   * @group Props\n   */\n  tooltipZIndex;\n  /**\n   * By default the tooltip contents are rendered as text. Set to false to support html tags in the content.\n   * @group Props\n   */\n  escape = true;\n  /**\n   * Delay to show the tooltip in milliseconds.\n   * @group Props\n   */\n  showDelay;\n  /**\n   * Delay to hide the tooltip in milliseconds.\n   * @group Props\n   */\n  hideDelay;\n  /**\n   * Time to wait in milliseconds to hide the tooltip even it is active.\n   * @group Props\n   */\n  life;\n  /**\n   * Specifies the additional vertical offset of the tooltip from its default position.\n   * @group Props\n   */\n  positionTop;\n  /**\n   * Specifies the additional horizontal offset of the tooltip from its default position.\n   * @group Props\n   */\n  positionLeft;\n  /**\n   * Whether to hide tooltip when hovering over tooltip content.\n   * @group Props\n   */\n  autoHide = true;\n  /**\n   * Automatically adjusts the element position when there is not enough space on the selected position.\n   * @group Props\n   */\n  fitContent = true;\n  /**\n   * Whether to hide tooltip on escape key press.\n   * @group Props\n   */\n  hideOnEscape = true;\n  /**\n   * Content of the tooltip.\n   * @group Props\n   */\n  content;\n  /**\n   * When present, it specifies that the component should be disabled.\n   * @defaultValue false\n   * @group Props\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(val) {\n    this._disabled = val;\n    this.deactivate();\n  }\n  /**\n   * Specifies the tooltip configuration options for the component.\n   * @group Props\n   */\n  tooltipOptions;\n  _tooltipOptions = {\n    tooltipLabel: null,\n    tooltipPosition: 'right',\n    tooltipEvent: 'hover',\n    appendTo: 'body',\n    positionStyle: null,\n    tooltipStyleClass: null,\n    tooltipZIndex: 'auto',\n    escape: true,\n    disabled: null,\n    showDelay: null,\n    hideDelay: null,\n    positionTop: null,\n    positionLeft: null,\n    life: null,\n    autoHide: true,\n    hideOnEscape: true,\n    id: uuid('pn_id_') + '_tooltip'\n  };\n  _disabled;\n  container;\n  styleClass;\n  tooltipText;\n  showTimeout;\n  hideTimeout;\n  active;\n  mouseEnterListener;\n  mouseLeaveListener;\n  containerMouseleaveListener;\n  clickListener;\n  focusListener;\n  blurListener;\n  documentEscapeListener;\n  scrollHandler;\n  resizeListener;\n  _componentStyle = inject(TooltipStyle);\n  interactionInProgress = false;\n  constructor(zone, viewContainer) {\n    super();\n    this.zone = zone;\n    this.viewContainer = viewContainer;\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        const tooltipEvent = this.getOption('tooltipEvent');\n        if (tooltipEvent === 'hover' || tooltipEvent === 'both') {\n          this.mouseEnterListener = this.onMouseEnter.bind(this);\n          this.mouseLeaveListener = this.onMouseLeave.bind(this);\n          this.clickListener = this.onInputClick.bind(this);\n          this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n          this.el.nativeElement.addEventListener('click', this.clickListener);\n          this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n        }\n        if (tooltipEvent === 'focus' || tooltipEvent === 'both') {\n          this.focusListener = this.onFocus.bind(this);\n          this.blurListener = this.onBlur.bind(this);\n          let target = this.el.nativeElement.querySelector('.p-component');\n          if (!target) {\n            target = this.getTarget(this.el.nativeElement);\n          }\n          target.addEventListener('focus', this.focusListener);\n          target.addEventListener('blur', this.blurListener);\n        }\n      });\n    }\n  }\n  ngOnChanges(simpleChange) {\n    super.ngOnChanges(simpleChange);\n    if (simpleChange.tooltipPosition) {\n      this.setOption({\n        tooltipPosition: simpleChange.tooltipPosition.currentValue\n      });\n    }\n    if (simpleChange.tooltipEvent) {\n      this.setOption({\n        tooltipEvent: simpleChange.tooltipEvent.currentValue\n      });\n    }\n    if (simpleChange.appendTo) {\n      this.setOption({\n        appendTo: simpleChange.appendTo.currentValue\n      });\n    }\n    if (simpleChange.positionStyle) {\n      this.setOption({\n        positionStyle: simpleChange.positionStyle.currentValue\n      });\n    }\n    if (simpleChange.tooltipStyleClass) {\n      this.setOption({\n        tooltipStyleClass: simpleChange.tooltipStyleClass.currentValue\n      });\n    }\n    if (simpleChange.tooltipZIndex) {\n      this.setOption({\n        tooltipZIndex: simpleChange.tooltipZIndex.currentValue\n      });\n    }\n    if (simpleChange.escape) {\n      this.setOption({\n        escape: simpleChange.escape.currentValue\n      });\n    }\n    if (simpleChange.showDelay) {\n      this.setOption({\n        showDelay: simpleChange.showDelay.currentValue\n      });\n    }\n    if (simpleChange.hideDelay) {\n      this.setOption({\n        hideDelay: simpleChange.hideDelay.currentValue\n      });\n    }\n    if (simpleChange.life) {\n      this.setOption({\n        life: simpleChange.life.currentValue\n      });\n    }\n    if (simpleChange.positionTop) {\n      this.setOption({\n        positionTop: simpleChange.positionTop.currentValue\n      });\n    }\n    if (simpleChange.positionLeft) {\n      this.setOption({\n        positionLeft: simpleChange.positionLeft.currentValue\n      });\n    }\n    if (simpleChange.disabled) {\n      this.setOption({\n        disabled: simpleChange.disabled.currentValue\n      });\n    }\n    if (simpleChange.content) {\n      this.setOption({\n        tooltipLabel: simpleChange.content.currentValue\n      });\n      if (this.active) {\n        if (simpleChange.content.currentValue) {\n          if (this.container && this.container.offsetParent) {\n            this.updateText();\n            this.align();\n          } else {\n            this.show();\n          }\n        } else {\n          this.hide();\n        }\n      }\n    }\n    if (simpleChange.autoHide) {\n      this.setOption({\n        autoHide: simpleChange.autoHide.currentValue\n      });\n    }\n    if (simpleChange.id) {\n      this.setOption({\n        id: simpleChange.id.currentValue\n      });\n    }\n    if (simpleChange.tooltipOptions) {\n      this._tooltipOptions = {\n        ...this._tooltipOptions,\n        ...simpleChange.tooltipOptions.currentValue\n      };\n      this.deactivate();\n      if (this.active) {\n        if (this.getOption('tooltipLabel')) {\n          if (this.container && this.container.offsetParent) {\n            this.updateText();\n            this.align();\n          } else {\n            this.show();\n          }\n        } else {\n          this.hide();\n        }\n      }\n    }\n  }\n  isAutoHide() {\n    return this.getOption('autoHide');\n  }\n  onMouseEnter(e) {\n    if (!this.container && !this.showTimeout) {\n      this.activate();\n    }\n  }\n  onMouseLeave(e) {\n    if (!this.isAutoHide()) {\n      const valid = hasClass(e.relatedTarget, 'p-tooltip') || hasClass(e.relatedTarget, 'p-tooltip-text') || hasClass(e.relatedTarget, 'p-tooltip-arrow');\n      !valid && this.deactivate();\n    } else {\n      this.deactivate();\n    }\n  }\n  onFocus(e) {\n    this.activate();\n  }\n  onBlur(e) {\n    this.deactivate();\n  }\n  onInputClick(e) {\n    this.deactivate();\n  }\n  activate() {\n    if (!this.interactionInProgress) {\n      this.active = true;\n      this.clearHideTimeout();\n      if (this.getOption('showDelay')) this.showTimeout = setTimeout(() => {\n        this.show();\n      }, this.getOption('showDelay'));else this.show();\n      if (this.getOption('life')) {\n        let duration = this.getOption('showDelay') ? this.getOption('life') + this.getOption('showDelay') : this.getOption('life');\n        this.hideTimeout = setTimeout(() => {\n          this.hide();\n        }, duration);\n      }\n      if (this.getOption('hideOnEscape')) {\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown.escape', () => {\n          this.deactivate();\n          this.documentEscapeListener();\n        });\n      }\n      this.interactionInProgress = true;\n    }\n  }\n  deactivate() {\n    this.interactionInProgress = false;\n    this.active = false;\n    this.clearShowTimeout();\n    if (this.getOption('hideDelay')) {\n      this.clearHideTimeout(); //life timeout\n      this.hideTimeout = setTimeout(() => {\n        this.hide();\n      }, this.getOption('hideDelay'));\n    } else {\n      this.hide();\n    }\n    if (this.documentEscapeListener) {\n      this.documentEscapeListener();\n    }\n  }\n  create() {\n    if (this.container) {\n      this.clearHideTimeout();\n      this.remove();\n    }\n    this.container = document.createElement('div');\n    this.container.setAttribute('id', this.getOption('id'));\n    this.container.setAttribute('role', 'tooltip');\n    let tooltipArrow = document.createElement('div');\n    tooltipArrow.className = 'p-tooltip-arrow';\n    this.container.appendChild(tooltipArrow);\n    this.tooltipText = document.createElement('div');\n    this.tooltipText.className = 'p-tooltip-text';\n    this.updateText();\n    if (this.getOption('positionStyle')) {\n      this.container.style.position = this.getOption('positionStyle');\n    }\n    this.container.appendChild(this.tooltipText);\n    if (this.getOption('appendTo') === 'body') document.body.appendChild(this.container);else if (this.getOption('appendTo') === 'target') appendChild(this.container, this.el.nativeElement);else appendChild(this.getOption('appendTo'), this.container);\n    this.container.style.display = 'none';\n    if (this.fitContent) {\n      this.container.style.width = 'fit-content';\n    }\n    if (this.isAutoHide()) {\n      this.container.style.pointerEvents = 'none';\n    } else {\n      this.container.style.pointerEvents = 'unset';\n      this.bindContainerMouseleaveListener();\n    }\n  }\n  bindContainerMouseleaveListener() {\n    if (!this.containerMouseleaveListener) {\n      const targetEl = this.container ?? this.container.nativeElement;\n      this.containerMouseleaveListener = this.renderer.listen(targetEl, 'mouseleave', e => {\n        this.deactivate();\n      });\n    }\n  }\n  unbindContainerMouseleaveListener() {\n    if (this.containerMouseleaveListener) {\n      this.bindContainerMouseleaveListener();\n      this.containerMouseleaveListener = null;\n    }\n  }\n  show() {\n    if (!this.getOption('tooltipLabel') || this.getOption('disabled')) {\n      return;\n    }\n    this.create();\n    const nativeElement = this.el.nativeElement;\n    const pDialogWrapper = nativeElement.closest('p-dialog');\n    if (pDialogWrapper) {\n      setTimeout(() => {\n        this.container && (this.container.style.display = 'inline-block');\n        this.container && this.align();\n      }, 100);\n    } else {\n      this.container.style.display = 'inline-block';\n      this.align();\n    }\n    fadeIn(this.container, 250);\n    if (this.getOption('tooltipZIndex') === 'auto') ZIndexUtils.set('tooltip', this.container, this.config.zIndex.tooltip);else this.container.style.zIndex = this.getOption('tooltipZIndex');\n    this.bindDocumentResizeListener();\n    this.bindScrollListener();\n  }\n  hide() {\n    if (this.getOption('tooltipZIndex') === 'auto') {\n      ZIndexUtils.clear(this.container);\n    }\n    this.remove();\n  }\n  updateText() {\n    const content = this.getOption('tooltipLabel');\n    if (content instanceof TemplateRef) {\n      const embeddedViewRef = this.viewContainer.createEmbeddedView(content);\n      embeddedViewRef.detectChanges();\n      embeddedViewRef.rootNodes.forEach(node => this.tooltipText.appendChild(node));\n    } else if (this.getOption('escape')) {\n      this.tooltipText.innerHTML = '';\n      this.tooltipText.appendChild(document.createTextNode(content));\n    } else {\n      this.tooltipText.innerHTML = content;\n    }\n  }\n  align() {\n    let position = this.getOption('tooltipPosition');\n    const positionPriority = {\n      top: [this.alignTop, this.alignBottom, this.alignRight, this.alignLeft],\n      bottom: [this.alignBottom, this.alignTop, this.alignRight, this.alignLeft],\n      left: [this.alignLeft, this.alignRight, this.alignTop, this.alignBottom],\n      right: [this.alignRight, this.alignLeft, this.alignTop, this.alignBottom]\n    };\n    for (let [index, alignmentFn] of positionPriority[position].entries()) {\n      if (index === 0) alignmentFn.call(this);else if (this.isOutOfBounds()) alignmentFn.call(this);else break;\n    }\n  }\n  getHostOffset() {\n    if (this.getOption('appendTo') === 'body' || this.getOption('appendTo') === 'target') {\n      let offset = this.el.nativeElement.getBoundingClientRect();\n      let targetLeft = offset.left + getWindowScrollLeft();\n      let targetTop = offset.top + getWindowScrollTop();\n      return {\n        left: targetLeft,\n        top: targetTop\n      };\n    } else {\n      return {\n        left: 0,\n        top: 0\n      };\n    }\n  }\n  get activeElement() {\n    return this.el.nativeElement.nodeName.startsWith('P-') ? findSingle(this.el.nativeElement, '.p-component') : this.el.nativeElement;\n  }\n  alignRight() {\n    this.preAlign('right');\n    const el = this.activeElement;\n    const offsetLeft = getOuterWidth(el);\n    const offsetTop = (getOuterHeight(el) - getOuterHeight(this.container)) / 2;\n    this.alignTooltip(offsetLeft, offsetTop);\n  }\n  alignLeft() {\n    this.preAlign('left');\n    let offsetLeft = getOuterWidth(this.container);\n    let offsetTop = (getOuterHeight(this.el.nativeElement) - getOuterHeight(this.container)) / 2;\n    this.alignTooltip(-offsetLeft, offsetTop);\n  }\n  alignTop() {\n    this.preAlign('top');\n    let offsetLeft = (getOuterWidth(this.el.nativeElement) - getOuterWidth(this.container)) / 2;\n    let offsetTop = getOuterHeight(this.container);\n    this.alignTooltip(offsetLeft, -offsetTop);\n  }\n  alignBottom() {\n    this.preAlign('bottom');\n    let offsetLeft = (getOuterWidth(this.el.nativeElement) - getOuterWidth(this.container)) / 2;\n    let offsetTop = getOuterHeight(this.el.nativeElement);\n    this.alignTooltip(offsetLeft, offsetTop);\n  }\n  alignTooltip(offsetLeft, offsetTop) {\n    let hostOffset = this.getHostOffset();\n    let left = hostOffset.left + offsetLeft;\n    let top = hostOffset.top + offsetTop;\n    this.container.style.left = left + this.getOption('positionLeft') + 'px';\n    this.container.style.top = top + this.getOption('positionTop') + 'px';\n  }\n  setOption(option) {\n    this._tooltipOptions = {\n      ...this._tooltipOptions,\n      ...option\n    };\n  }\n  getOption(option) {\n    return this._tooltipOptions[option];\n  }\n  getTarget(el) {\n    return hasClass(el, 'p-inputwrapper') ? findSingle(el, 'input') : el;\n  }\n  preAlign(position) {\n    this.container.style.left = -999 + 'px';\n    this.container.style.top = -999 + 'px';\n    let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n    this.container.className = this.getOption('tooltipStyleClass') ? defaultClassName + ' ' + this.getOption('tooltipStyleClass') : defaultClassName;\n  }\n  isOutOfBounds() {\n    let offset = this.container.getBoundingClientRect();\n    let targetTop = offset.top;\n    let targetLeft = offset.left;\n    let width = getOuterWidth(this.container);\n    let height = getOuterHeight(this.container);\n    let viewport = getViewport();\n    return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n  }\n  onWindowResize(e) {\n    this.hide();\n  }\n  bindDocumentResizeListener() {\n    this.zone.runOutsideAngular(() => {\n      this.resizeListener = this.onWindowResize.bind(this);\n      window.addEventListener('resize', this.resizeListener);\n    });\n  }\n  unbindDocumentResizeListener() {\n    if (this.resizeListener) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.resizeListener = null;\n    }\n  }\n  bindScrollListener() {\n    if (!this.scrollHandler) {\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n        if (this.container) {\n          this.hide();\n        }\n      });\n    }\n    this.scrollHandler.bindScrollListener();\n  }\n  unbindScrollListener() {\n    if (this.scrollHandler) {\n      this.scrollHandler.unbindScrollListener();\n    }\n  }\n  unbindEvents() {\n    const tooltipEvent = this.getOption('tooltipEvent');\n    if (tooltipEvent === 'hover' || tooltipEvent === 'both') {\n      this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n      this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n      this.el.nativeElement.removeEventListener('click', this.clickListener);\n    }\n    if (tooltipEvent === 'focus' || tooltipEvent === 'both') {\n      let target = this.el.nativeElement.querySelector('.p-component');\n      if (!target) {\n        target = this.getTarget(this.el.nativeElement);\n      }\n      target.removeEventListener('focus', this.focusListener);\n      target.removeEventListener('blur', this.blurListener);\n    }\n    this.unbindDocumentResizeListener();\n  }\n  remove() {\n    if (this.container && this.container.parentElement) {\n      if (this.getOption('appendTo') === 'body') document.body.removeChild(this.container);else if (this.getOption('appendTo') === 'target') this.el.nativeElement.removeChild(this.container);else removeChild(this.getOption('appendTo'), this.container);\n    }\n    this.unbindDocumentResizeListener();\n    this.unbindScrollListener();\n    this.unbindContainerMouseleaveListener();\n    this.clearTimeouts();\n    this.container = null;\n    this.scrollHandler = null;\n  }\n  clearShowTimeout() {\n    if (this.showTimeout) {\n      clearTimeout(this.showTimeout);\n      this.showTimeout = null;\n    }\n  }\n  clearHideTimeout() {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n      this.hideTimeout = null;\n    }\n  }\n  clearTimeouts() {\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    super.ngOnDestroy();\n    if (this.container) {\n      ZIndexUtils.clear(this.container);\n    }\n    this.remove();\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n    if (this.documentEscapeListener) {\n      this.documentEscapeListener();\n    }\n  }\n  static ɵfac = function Tooltip_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Tooltip)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: Tooltip,\n    selectors: [[\"\", \"pTooltip\", \"\"]],\n    inputs: {\n      tooltipPosition: \"tooltipPosition\",\n      tooltipEvent: \"tooltipEvent\",\n      appendTo: \"appendTo\",\n      positionStyle: \"positionStyle\",\n      tooltipStyleClass: \"tooltipStyleClass\",\n      tooltipZIndex: \"tooltipZIndex\",\n      escape: [2, \"escape\", \"escape\", booleanAttribute],\n      showDelay: [2, \"showDelay\", \"showDelay\", numberAttribute],\n      hideDelay: [2, \"hideDelay\", \"hideDelay\", numberAttribute],\n      life: [2, \"life\", \"life\", numberAttribute],\n      positionTop: [2, \"positionTop\", \"positionTop\", numberAttribute],\n      positionLeft: [2, \"positionLeft\", \"positionLeft\", numberAttribute],\n      autoHide: [2, \"autoHide\", \"autoHide\", booleanAttribute],\n      fitContent: [2, \"fitContent\", \"fitContent\", booleanAttribute],\n      hideOnEscape: [2, \"hideOnEscape\", \"hideOnEscape\", booleanAttribute],\n      content: [0, \"pTooltip\", \"content\"],\n      disabled: [0, \"tooltipDisabled\", \"disabled\"],\n      tooltipOptions: \"tooltipOptions\"\n    },\n    features: [i0.ɵɵProvidersFeature([TooltipStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Tooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[pTooltip]',\n      standalone: true,\n      providers: [TooltipStyle]\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ViewContainerRef\n  }], {\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipEvent: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    positionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    tooltipZIndex: [{\n      type: Input\n    }],\n    escape: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    hideDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    life: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    positionTop: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    positionLeft: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    autoHide: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    fitContent: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideOnEscape: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    content: [{\n      type: Input,\n      args: ['pTooltip']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['tooltipDisabled']\n    }],\n    tooltipOptions: [{\n      type: Input\n    }]\n  });\n})();\nclass TooltipModule {\n  static ɵfac = function TooltipModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TooltipModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TooltipModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Tooltip],\n      exports: [Tooltip]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipClasses, TooltipModule, TooltipStyle };","map":{"version":3,"names":["isPlatformBrowser","i0","Injectable","inject","TemplateRef","booleanAttribute","numberAttribute","Input","Directive","NgModule","uuid","hasClass","appendChild","fadeIn","getWindowScrollLeft","getWindowScrollTop","findSingle","getOuterWidth","getOuterHeight","getViewport","removeChild","BaseComponent","ConnectedOverlayScrollHandler","ZIndexUtils","BaseStyle","theme","dt","classes","root","arrow","text","TooltipStyle","name","ɵfac","ɵTooltipStyle_BaseFactory","TooltipStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","TooltipClasses","Tooltip","zone","viewContainer","tooltipPosition","tooltipEvent","appendTo","positionStyle","tooltipStyleClass","tooltipZIndex","escape","showDelay","hideDelay","life","positionTop","positionLeft","autoHide","fitContent","hideOnEscape","content","disabled","_disabled","val","deactivate","tooltipOptions","_tooltipOptions","tooltipLabel","id","container","styleClass","tooltipText","showTimeout","hideTimeout","active","mouseEnterListener","mouseLeaveListener","containerMouseleaveListener","clickListener","focusListener","blurListener","documentEscapeListener","scrollHandler","resizeListener","_componentStyle","interactionInProgress","constructor","ngAfterViewInit","platformId","runOutsideAngular","getOption","onMouseEnter","bind","onMouseLeave","onInputClick","el","nativeElement","addEventListener","onFocus","onBlur","target","querySelector","getTarget","ngOnChanges","simpleChange","setOption","currentValue","offsetParent","updateText","align","show","hide","isAutoHide","e","activate","valid","relatedTarget","clearHideTimeout","setTimeout","duration","renderer","listen","clearShowTimeout","create","remove","document","createElement","setAttribute","tooltipArrow","className","style","position","body","display","width","pointerEvents","bindContainerMouseleaveListener","targetEl","unbindContainerMouseleaveListener","pDialogWrapper","closest","set","config","zIndex","tooltip","bindDocumentResizeListener","bindScrollListener","clear","embeddedViewRef","createEmbeddedView","detectChanges","rootNodes","forEach","node","innerHTML","createTextNode","positionPriority","top","alignTop","alignBottom","alignRight","alignLeft","bottom","left","right","index","alignmentFn","entries","call","isOutOfBounds","getHostOffset","offset","getBoundingClientRect","targetLeft","targetTop","activeElement","nodeName","startsWith","preAlign","offsetLeft","offsetTop","alignTooltip","hostOffset","option","defaultClassName","height","viewport","onWindowResize","window","unbindDocumentResizeListener","removeEventListener","unbindScrollListener","unbindEvents","parentElement","clearTimeouts","clearTimeout","ngOnDestroy","destroy","Tooltip_Factory","ɵɵdirectiveInject","NgZone","ViewContainerRef","ɵdir","ɵɵdefineDirective","selectors","inputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","args","selector","standalone","providers","transform","TooltipModule","TooltipModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-tooltip.mjs"],"sourcesContent":["import { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, TemplateRef, booleanAttribute, numberAttribute, Input, Directive, NgModule } from '@angular/core';\nimport { uuid, hasClass, appendChild, fadeIn, getWindowScrollLeft, getWindowScrollTop, findSingle, getOuterWidth, getOuterHeight, getViewport, removeChild } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-tooltip {\n    position: absolute;\n    display: none;\n    max-width: ${dt('tooltip.max.width')};\n}\n\n.p-tooltip-right,\n.p-tooltip-left {\n    padding: 0 ${dt('tooltip.gutter')};\n}\n\n.p-tooltip-top,\n.p-tooltip-bottom {\n    padding: ${dt('tooltip.gutter')} 0;\n}\n\n.p-tooltip-text {\n    white-space: pre-line;\n    word-break: break-word;\n    background: ${dt('tooltip.background')};\n    color: ${dt('tooltip.color')};\n    padding: ${dt('tooltip.padding')};\n    box-shadow: ${dt('tooltip.shadow')};\n    border-radius: ${dt('tooltip.border.radius')};\n}\n\n.p-tooltip-arrow {\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-color: transparent;\n    border-style: solid;\n    scale: 2;\n}\n\n.p-tooltip-right .p-tooltip-arrow {\n    top: 50%;\n    left: 0;\n    margin-top: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0;\n    border-right-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-left .p-tooltip-arrow {\n    top: 50%;\n    right: 0;\n    margin-top: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};\n    border-left-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-top .p-tooltip-arrow {\n    bottom: 0;\n    left: 50%;\n    margin-left: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')};\n    border-top-color: ${dt('tooltip.background')};\n    border-bottom-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-bottom .p-tooltip-arrow {\n    top: 0;\n    left: 50%;\n    margin-left: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};\n    border-top-color: ${dt('tooltip.background')};\n    border-bottom-color: ${dt('tooltip.background')};\n}\n`;\nconst classes = {\n    root: 'p-tooltip p-component',\n    arrow: 'p-tooltip-arrow',\n    text: 'p-tooltip-text'\n};\nclass TooltipStyle extends BaseStyle {\n    name = 'tooltip';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TooltipStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TooltipStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TooltipStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Tooltip directive provides advisory information for a component.\n *\n * [Live Demo](https://www.primeng.org/tooltip)\n *\n * @module tooltipstyle\n *\n */\nvar TooltipClasses;\n(function (TooltipClasses) {\n    /**\n     * Class name of the root element\n     */\n    TooltipClasses[\"root\"] = \"p-tooltip\";\n    /**\n     * Class name of the arrow element\n     */\n    TooltipClasses[\"arrow\"] = \"p-tooltip-arrow\";\n    /**\n     * Class name of the text element\n     */\n    TooltipClasses[\"text\"] = \"p-tooltip-text\";\n})(TooltipClasses || (TooltipClasses = {}));\n\n/**\n * Tooltip directive provides advisory information for a component.\n * @group Components\n */\nclass Tooltip extends BaseComponent {\n    zone;\n    viewContainer;\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    tooltipPosition;\n    /**\n     * Event to show the tooltip.\n     * @group Props\n     */\n    tooltipEvent = 'hover';\n    /**\n     *  Target element to attach the overlay, valid values are \"body\", \"target\" or a local ng-F variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    positionStyle;\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    tooltipStyleClass;\n    /**\n     * Whether the z-index should be managed automatically to always go on top or have a fixed value.\n     * @group Props\n     */\n    tooltipZIndex;\n    /**\n     * By default the tooltip contents are rendered as text. Set to false to support html tags in the content.\n     * @group Props\n     */\n    escape = true;\n    /**\n     * Delay to show the tooltip in milliseconds.\n     * @group Props\n     */\n    showDelay;\n    /**\n     * Delay to hide the tooltip in milliseconds.\n     * @group Props\n     */\n    hideDelay;\n    /**\n     * Time to wait in milliseconds to hide the tooltip even it is active.\n     * @group Props\n     */\n    life;\n    /**\n     * Specifies the additional vertical offset of the tooltip from its default position.\n     * @group Props\n     */\n    positionTop;\n    /**\n     * Specifies the additional horizontal offset of the tooltip from its default position.\n     * @group Props\n     */\n    positionLeft;\n    /**\n     * Whether to hide tooltip when hovering over tooltip content.\n     * @group Props\n     */\n    autoHide = true;\n    /**\n     * Automatically adjusts the element position when there is not enough space on the selected position.\n     * @group Props\n     */\n    fitContent = true;\n    /**\n     * Whether to hide tooltip on escape key press.\n     * @group Props\n     */\n    hideOnEscape = true;\n    /**\n     * Content of the tooltip.\n     * @group Props\n     */\n    content;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @defaultValue false\n     * @group Props\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(val) {\n        this._disabled = val;\n        this.deactivate();\n    }\n    /**\n     * Specifies the tooltip configuration options for the component.\n     * @group Props\n     */\n    tooltipOptions;\n    _tooltipOptions = {\n        tooltipLabel: null,\n        tooltipPosition: 'right',\n        tooltipEvent: 'hover',\n        appendTo: 'body',\n        positionStyle: null,\n        tooltipStyleClass: null,\n        tooltipZIndex: 'auto',\n        escape: true,\n        disabled: null,\n        showDelay: null,\n        hideDelay: null,\n        positionTop: null,\n        positionLeft: null,\n        life: null,\n        autoHide: true,\n        hideOnEscape: true,\n        id: uuid('pn_id_') + '_tooltip'\n    };\n    _disabled;\n    container;\n    styleClass;\n    tooltipText;\n    showTimeout;\n    hideTimeout;\n    active;\n    mouseEnterListener;\n    mouseLeaveListener;\n    containerMouseleaveListener;\n    clickListener;\n    focusListener;\n    blurListener;\n    documentEscapeListener;\n    scrollHandler;\n    resizeListener;\n    _componentStyle = inject(TooltipStyle);\n    interactionInProgress = false;\n    constructor(zone, viewContainer) {\n        super();\n        this.zone = zone;\n        this.viewContainer = viewContainer;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (isPlatformBrowser(this.platformId)) {\n            this.zone.runOutsideAngular(() => {\n                const tooltipEvent = this.getOption('tooltipEvent');\n                if (tooltipEvent === 'hover' || tooltipEvent === 'both') {\n                    this.mouseEnterListener = this.onMouseEnter.bind(this);\n                    this.mouseLeaveListener = this.onMouseLeave.bind(this);\n                    this.clickListener = this.onInputClick.bind(this);\n                    this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n                    this.el.nativeElement.addEventListener('click', this.clickListener);\n                    this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n                }\n                if (tooltipEvent === 'focus' || tooltipEvent === 'both') {\n                    this.focusListener = this.onFocus.bind(this);\n                    this.blurListener = this.onBlur.bind(this);\n                    let target = this.el.nativeElement.querySelector('.p-component');\n                    if (!target) {\n                        target = this.getTarget(this.el.nativeElement);\n                    }\n                    target.addEventListener('focus', this.focusListener);\n                    target.addEventListener('blur', this.blurListener);\n                }\n            });\n        }\n    }\n    ngOnChanges(simpleChange) {\n        super.ngOnChanges(simpleChange);\n        if (simpleChange.tooltipPosition) {\n            this.setOption({ tooltipPosition: simpleChange.tooltipPosition.currentValue });\n        }\n        if (simpleChange.tooltipEvent) {\n            this.setOption({ tooltipEvent: simpleChange.tooltipEvent.currentValue });\n        }\n        if (simpleChange.appendTo) {\n            this.setOption({ appendTo: simpleChange.appendTo.currentValue });\n        }\n        if (simpleChange.positionStyle) {\n            this.setOption({ positionStyle: simpleChange.positionStyle.currentValue });\n        }\n        if (simpleChange.tooltipStyleClass) {\n            this.setOption({ tooltipStyleClass: simpleChange.tooltipStyleClass.currentValue });\n        }\n        if (simpleChange.tooltipZIndex) {\n            this.setOption({ tooltipZIndex: simpleChange.tooltipZIndex.currentValue });\n        }\n        if (simpleChange.escape) {\n            this.setOption({ escape: simpleChange.escape.currentValue });\n        }\n        if (simpleChange.showDelay) {\n            this.setOption({ showDelay: simpleChange.showDelay.currentValue });\n        }\n        if (simpleChange.hideDelay) {\n            this.setOption({ hideDelay: simpleChange.hideDelay.currentValue });\n        }\n        if (simpleChange.life) {\n            this.setOption({ life: simpleChange.life.currentValue });\n        }\n        if (simpleChange.positionTop) {\n            this.setOption({ positionTop: simpleChange.positionTop.currentValue });\n        }\n        if (simpleChange.positionLeft) {\n            this.setOption({ positionLeft: simpleChange.positionLeft.currentValue });\n        }\n        if (simpleChange.disabled) {\n            this.setOption({ disabled: simpleChange.disabled.currentValue });\n        }\n        if (simpleChange.content) {\n            this.setOption({ tooltipLabel: simpleChange.content.currentValue });\n            if (this.active) {\n                if (simpleChange.content.currentValue) {\n                    if (this.container && this.container.offsetParent) {\n                        this.updateText();\n                        this.align();\n                    }\n                    else {\n                        this.show();\n                    }\n                }\n                else {\n                    this.hide();\n                }\n            }\n        }\n        if (simpleChange.autoHide) {\n            this.setOption({ autoHide: simpleChange.autoHide.currentValue });\n        }\n        if (simpleChange.id) {\n            this.setOption({ id: simpleChange.id.currentValue });\n        }\n        if (simpleChange.tooltipOptions) {\n            this._tooltipOptions = { ...this._tooltipOptions, ...simpleChange.tooltipOptions.currentValue };\n            this.deactivate();\n            if (this.active) {\n                if (this.getOption('tooltipLabel')) {\n                    if (this.container && this.container.offsetParent) {\n                        this.updateText();\n                        this.align();\n                    }\n                    else {\n                        this.show();\n                    }\n                }\n                else {\n                    this.hide();\n                }\n            }\n        }\n    }\n    isAutoHide() {\n        return this.getOption('autoHide');\n    }\n    onMouseEnter(e) {\n        if (!this.container && !this.showTimeout) {\n            this.activate();\n        }\n    }\n    onMouseLeave(e) {\n        if (!this.isAutoHide()) {\n            const valid = hasClass(e.relatedTarget, 'p-tooltip') || hasClass(e.relatedTarget, 'p-tooltip-text') || hasClass(e.relatedTarget, 'p-tooltip-arrow');\n            !valid && this.deactivate();\n        }\n        else {\n            this.deactivate();\n        }\n    }\n    onFocus(e) {\n        this.activate();\n    }\n    onBlur(e) {\n        this.deactivate();\n    }\n    onInputClick(e) {\n        this.deactivate();\n    }\n    activate() {\n        if (!this.interactionInProgress) {\n            this.active = true;\n            this.clearHideTimeout();\n            if (this.getOption('showDelay'))\n                this.showTimeout = setTimeout(() => {\n                    this.show();\n                }, this.getOption('showDelay'));\n            else\n                this.show();\n            if (this.getOption('life')) {\n                let duration = this.getOption('showDelay') ? this.getOption('life') + this.getOption('showDelay') : this.getOption('life');\n                this.hideTimeout = setTimeout(() => {\n                    this.hide();\n                }, duration);\n            }\n            if (this.getOption('hideOnEscape')) {\n                this.documentEscapeListener = this.renderer.listen('document', 'keydown.escape', () => {\n                    this.deactivate();\n                    this.documentEscapeListener();\n                });\n            }\n            this.interactionInProgress = true;\n        }\n    }\n    deactivate() {\n        this.interactionInProgress = false;\n        this.active = false;\n        this.clearShowTimeout();\n        if (this.getOption('hideDelay')) {\n            this.clearHideTimeout(); //life timeout\n            this.hideTimeout = setTimeout(() => {\n                this.hide();\n            }, this.getOption('hideDelay'));\n        }\n        else {\n            this.hide();\n        }\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n        }\n    }\n    create() {\n        if (this.container) {\n            this.clearHideTimeout();\n            this.remove();\n        }\n        this.container = document.createElement('div');\n        this.container.setAttribute('id', this.getOption('id'));\n        this.container.setAttribute('role', 'tooltip');\n        let tooltipArrow = document.createElement('div');\n        tooltipArrow.className = 'p-tooltip-arrow';\n        this.container.appendChild(tooltipArrow);\n        this.tooltipText = document.createElement('div');\n        this.tooltipText.className = 'p-tooltip-text';\n        this.updateText();\n        if (this.getOption('positionStyle')) {\n            this.container.style.position = this.getOption('positionStyle');\n        }\n        this.container.appendChild(this.tooltipText);\n        if (this.getOption('appendTo') === 'body')\n            document.body.appendChild(this.container);\n        else if (this.getOption('appendTo') === 'target')\n            appendChild(this.container, this.el.nativeElement);\n        else\n            appendChild(this.getOption('appendTo'), this.container);\n        this.container.style.display = 'none';\n        if (this.fitContent) {\n            this.container.style.width = 'fit-content';\n        }\n        if (this.isAutoHide()) {\n            this.container.style.pointerEvents = 'none';\n        }\n        else {\n            this.container.style.pointerEvents = 'unset';\n            this.bindContainerMouseleaveListener();\n        }\n    }\n    bindContainerMouseleaveListener() {\n        if (!this.containerMouseleaveListener) {\n            const targetEl = this.container ?? this.container.nativeElement;\n            this.containerMouseleaveListener = this.renderer.listen(targetEl, 'mouseleave', (e) => {\n                this.deactivate();\n            });\n        }\n    }\n    unbindContainerMouseleaveListener() {\n        if (this.containerMouseleaveListener) {\n            this.bindContainerMouseleaveListener();\n            this.containerMouseleaveListener = null;\n        }\n    }\n    show() {\n        if (!this.getOption('tooltipLabel') || this.getOption('disabled')) {\n            return;\n        }\n        this.create();\n        const nativeElement = this.el.nativeElement;\n        const pDialogWrapper = nativeElement.closest('p-dialog');\n        if (pDialogWrapper) {\n            setTimeout(() => {\n                this.container && (this.container.style.display = 'inline-block');\n                this.container && this.align();\n            }, 100);\n        }\n        else {\n            this.container.style.display = 'inline-block';\n            this.align();\n        }\n        fadeIn(this.container, 250);\n        if (this.getOption('tooltipZIndex') === 'auto')\n            ZIndexUtils.set('tooltip', this.container, this.config.zIndex.tooltip);\n        else\n            this.container.style.zIndex = this.getOption('tooltipZIndex');\n        this.bindDocumentResizeListener();\n        this.bindScrollListener();\n    }\n    hide() {\n        if (this.getOption('tooltipZIndex') === 'auto') {\n            ZIndexUtils.clear(this.container);\n        }\n        this.remove();\n    }\n    updateText() {\n        const content = this.getOption('tooltipLabel');\n        if (content instanceof TemplateRef) {\n            const embeddedViewRef = this.viewContainer.createEmbeddedView(content);\n            embeddedViewRef.detectChanges();\n            embeddedViewRef.rootNodes.forEach((node) => this.tooltipText.appendChild(node));\n        }\n        else if (this.getOption('escape')) {\n            this.tooltipText.innerHTML = '';\n            this.tooltipText.appendChild(document.createTextNode(content));\n        }\n        else {\n            this.tooltipText.innerHTML = content;\n        }\n    }\n    align() {\n        let position = this.getOption('tooltipPosition');\n        const positionPriority = {\n            top: [this.alignTop, this.alignBottom, this.alignRight, this.alignLeft],\n            bottom: [this.alignBottom, this.alignTop, this.alignRight, this.alignLeft],\n            left: [this.alignLeft, this.alignRight, this.alignTop, this.alignBottom],\n            right: [this.alignRight, this.alignLeft, this.alignTop, this.alignBottom]\n        };\n        for (let [index, alignmentFn] of positionPriority[position].entries()) {\n            if (index === 0)\n                alignmentFn.call(this);\n            else if (this.isOutOfBounds())\n                alignmentFn.call(this);\n            else\n                break;\n        }\n    }\n    getHostOffset() {\n        if (this.getOption('appendTo') === 'body' || this.getOption('appendTo') === 'target') {\n            let offset = this.el.nativeElement.getBoundingClientRect();\n            let targetLeft = offset.left + getWindowScrollLeft();\n            let targetTop = offset.top + getWindowScrollTop();\n            return { left: targetLeft, top: targetTop };\n        }\n        else {\n            return { left: 0, top: 0 };\n        }\n    }\n    get activeElement() {\n        return this.el.nativeElement.nodeName.startsWith('P-') ? findSingle(this.el.nativeElement, '.p-component') : this.el.nativeElement;\n    }\n    alignRight() {\n        this.preAlign('right');\n        const el = this.activeElement;\n        const offsetLeft = getOuterWidth(el);\n        const offsetTop = (getOuterHeight(el) - getOuterHeight(this.container)) / 2;\n        this.alignTooltip(offsetLeft, offsetTop);\n    }\n    alignLeft() {\n        this.preAlign('left');\n        let offsetLeft = getOuterWidth(this.container);\n        let offsetTop = (getOuterHeight(this.el.nativeElement) - getOuterHeight(this.container)) / 2;\n        this.alignTooltip(-offsetLeft, offsetTop);\n    }\n    alignTop() {\n        this.preAlign('top');\n        let offsetLeft = (getOuterWidth(this.el.nativeElement) - getOuterWidth(this.container)) / 2;\n        let offsetTop = getOuterHeight(this.container);\n        this.alignTooltip(offsetLeft, -offsetTop);\n    }\n    alignBottom() {\n        this.preAlign('bottom');\n        let offsetLeft = (getOuterWidth(this.el.nativeElement) - getOuterWidth(this.container)) / 2;\n        let offsetTop = getOuterHeight(this.el.nativeElement);\n        this.alignTooltip(offsetLeft, offsetTop);\n    }\n    alignTooltip(offsetLeft, offsetTop) {\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + offsetLeft;\n        let top = hostOffset.top + offsetTop;\n        this.container.style.left = left + this.getOption('positionLeft') + 'px';\n        this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    setOption(option) {\n        this._tooltipOptions = { ...this._tooltipOptions, ...option };\n    }\n    getOption(option) {\n        return this._tooltipOptions[option];\n    }\n    getTarget(el) {\n        return hasClass(el, 'p-inputwrapper') ? findSingle(el, 'input') : el;\n    }\n    preAlign(position) {\n        this.container.style.left = -999 + 'px';\n        this.container.style.top = -999 + 'px';\n        let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n        this.container.className = this.getOption('tooltipStyleClass') ? defaultClassName + ' ' + this.getOption('tooltipStyleClass') : defaultClassName;\n    }\n    isOutOfBounds() {\n        let offset = this.container.getBoundingClientRect();\n        let targetTop = offset.top;\n        let targetLeft = offset.left;\n        let width = getOuterWidth(this.container);\n        let height = getOuterHeight(this.container);\n        let viewport = getViewport();\n        return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n    }\n    onWindowResize(e) {\n        this.hide();\n    }\n    bindDocumentResizeListener() {\n        this.zone.runOutsideAngular(() => {\n            this.resizeListener = this.onWindowResize.bind(this);\n            window.addEventListener('resize', this.resizeListener);\n        });\n    }\n    unbindDocumentResizeListener() {\n        if (this.resizeListener) {\n            window.removeEventListener('resize', this.resizeListener);\n            this.resizeListener = null;\n        }\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n                if (this.container) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    unbindEvents() {\n        const tooltipEvent = this.getOption('tooltipEvent');\n        if (tooltipEvent === 'hover' || tooltipEvent === 'both') {\n            this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n            this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n            this.el.nativeElement.removeEventListener('click', this.clickListener);\n        }\n        if (tooltipEvent === 'focus' || tooltipEvent === 'both') {\n            let target = this.el.nativeElement.querySelector('.p-component');\n            if (!target) {\n                target = this.getTarget(this.el.nativeElement);\n            }\n            target.removeEventListener('focus', this.focusListener);\n            target.removeEventListener('blur', this.blurListener);\n        }\n        this.unbindDocumentResizeListener();\n    }\n    remove() {\n        if (this.container && this.container.parentElement) {\n            if (this.getOption('appendTo') === 'body')\n                document.body.removeChild(this.container);\n            else if (this.getOption('appendTo') === 'target')\n                this.el.nativeElement.removeChild(this.container);\n            else\n                removeChild(this.getOption('appendTo'), this.container);\n        }\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.unbindContainerMouseleaveListener();\n        this.clearTimeouts();\n        this.container = null;\n        this.scrollHandler = null;\n    }\n    clearShowTimeout() {\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n            this.showTimeout = null;\n        }\n    }\n    clearHideTimeout() {\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n    }\n    clearTimeouts() {\n        this.clearShowTimeout();\n        this.clearHideTimeout();\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        super.ngOnDestroy();\n        if (this.container) {\n            ZIndexUtils.clear(this.container);\n        }\n        this.remove();\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Tooltip, deps: [{ token: i0.NgZone }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: Tooltip, isStandalone: true, selector: \"[pTooltip]\", inputs: { tooltipPosition: \"tooltipPosition\", tooltipEvent: \"tooltipEvent\", appendTo: \"appendTo\", positionStyle: \"positionStyle\", tooltipStyleClass: \"tooltipStyleClass\", tooltipZIndex: \"tooltipZIndex\", escape: [\"escape\", \"escape\", booleanAttribute], showDelay: [\"showDelay\", \"showDelay\", numberAttribute], hideDelay: [\"hideDelay\", \"hideDelay\", numberAttribute], life: [\"life\", \"life\", numberAttribute], positionTop: [\"positionTop\", \"positionTop\", numberAttribute], positionLeft: [\"positionLeft\", \"positionLeft\", numberAttribute], autoHide: [\"autoHide\", \"autoHide\", booleanAttribute], fitContent: [\"fitContent\", \"fitContent\", booleanAttribute], hideOnEscape: [\"hideOnEscape\", \"hideOnEscape\", booleanAttribute], content: [\"pTooltip\", \"content\"], disabled: [\"tooltipDisabled\", \"disabled\"], tooltipOptions: \"tooltipOptions\" }, providers: [TooltipStyle], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Tooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pTooltip]',\n                    standalone: true,\n                    providers: [TooltipStyle]\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ViewContainerRef }], propDecorators: { tooltipPosition: [{\n                type: Input\n            }], tooltipEvent: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], positionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], tooltipZIndex: [{\n                type: Input\n            }], escape: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showDelay: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], hideDelay: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], life: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], positionTop: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], positionLeft: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], autoHide: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], fitContent: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideOnEscape: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], content: [{\n                type: Input,\n                args: ['pTooltip']\n            }], disabled: [{\n                type: Input,\n                args: ['tooltipDisabled']\n            }], tooltipOptions: [{\n                type: Input\n            }] } });\nclass TooltipModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: TooltipModule, imports: [Tooltip], exports: [Tooltip] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TooltipModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Tooltip],\n                    exports: [Tooltip]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipClasses, TooltipModule, TooltipStyle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}