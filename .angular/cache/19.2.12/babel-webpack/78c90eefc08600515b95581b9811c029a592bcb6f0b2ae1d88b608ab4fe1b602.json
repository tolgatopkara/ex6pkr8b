{"ast":null,"code":"import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { find } from '@primeuix/utils';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nimport { Subject } from 'rxjs';\nfunction Terminal_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.welcomeMessage);\n  }\n}\nfunction Terminal_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"span\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const command_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.prompt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(command_r4.text);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"aria-live\", \"polite\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(command_r4.response);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-terminal {\n    height: ${dt('terminal.height')};\n    overflow: auto;\n    background: ${dt('terminal.background')};\n    color: ${dt('terminal.color')};\n    border: 1px solid ${dt('terminal.border.color')};\n    padding: ${dt('terminal.padding')};\n    border-radius: ${dt('terminal.border.radius')};\n}\n\n.p-terminal-prompt {\n    display: flex;\n    align-items: center;\n}\n\n.p-terminal-prompt-value {\n    flex: 1 1 auto;\n    border: 0 none;\n    background: transparent;\n    color: inherit;\n    padding: 0;\n    outline: 0 none;\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n}\n\n.p-terminal-prompt-label {\n    margin-inline-end: ${dt('terminal.prompt.gap')};\n}\n\n.p-terminal-input::-ms-clear {\n    display: none;\n}\n\n.p-terminal-command-response {\n    margin: ${dt('terminal.command.response.margin')};\n}\n`;\nconst classes = {\n  root: 'p-terminal p-component',\n  welcomeMessage: 'p-terminal-welcome-message',\n  commandList: 'p-terminal-command-list',\n  command: 'p-terminal-command',\n  commandValue: 'p-terminal-command-value',\n  commandResponse: 'p-terminal-command-response',\n  prompt: 'p-terminal-prompt',\n  promptLabel: 'p-terminal-prompt-label',\n  promptValue: 'p-terminal-prompt-value'\n};\nclass TerminalStyle extends BaseStyle {\n  name = 'terminal';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTerminalStyle_BaseFactory;\n    return function TerminalStyle_Factory(__ngFactoryType__) {\n      return (ɵTerminalStyle_BaseFactory || (ɵTerminalStyle_BaseFactory = i0.ɵɵgetInheritedFactory(TerminalStyle)))(__ngFactoryType__ || TerminalStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TerminalStyle,\n    factory: TerminalStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TerminalStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Terminal is a text based user interface.\n *\n * [Live Demo](https://www.primeng.org/terminal)\n *\n * @module terminalstyle\n *\n */\nvar TerminalClasses;\n(function (TerminalClasses) {\n  /**\n   * Class name of the root element\n   */\n  TerminalClasses[\"root\"] = \"p-terminal\";\n  /**\n   * Class name of the welcome message element\n   */\n  TerminalClasses[\"welcomeMessage\"] = \"p-terminal-welcome-message\";\n  /**\n   * Class name of the command list element\n   */\n  TerminalClasses[\"commandList\"] = \"p-terminal-command-list\";\n  /**\n   * Class name of the command element\n   */\n  TerminalClasses[\"command\"] = \"p-terminal-command\";\n  /**\n   * Class name of the command value element\n   */\n  TerminalClasses[\"commandValue\"] = \"p-terminal-command-value\";\n  /**\n   * Class name of the command response element\n   */\n  TerminalClasses[\"commandResponse\"] = \"p-terminal-command-response\";\n  /**\n   * Class name of the prompt element\n   */\n  TerminalClasses[\"prompt\"] = \"p-terminal-prompt\";\n  /**\n   * Class name of the prompt label element\n   */\n  TerminalClasses[\"promptLabel\"] = \"p-terminal-prompt-label\";\n  /**\n   * Class name of the prompt value element\n   */\n  TerminalClasses[\"promptValue\"] = \"p-terminal-prompt-value\";\n})(TerminalClasses || (TerminalClasses = {}));\nclass TerminalService {\n  commandSource = new Subject();\n  responseSource = new Subject();\n  commandHandler = this.commandSource.asObservable();\n  responseHandler = this.responseSource.asObservable();\n  sendCommand(command) {\n    if (command) {\n      this.commandSource.next(command);\n    }\n  }\n  sendResponse(response) {\n    if (response) {\n      this.responseSource.next(response);\n    }\n  }\n  static ɵfac = function TerminalService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TerminalService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TerminalService,\n    factory: TerminalService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TerminalService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Terminal is a text based user interface.\n * @group Components\n */\nclass Terminal extends BaseComponent {\n  terminalService;\n  /**\n   * Initial text to display on terminal.\n   * @group Props\n   */\n  welcomeMessage;\n  /**\n   * Prompt text for each command.\n   * @group Props\n   */\n  prompt;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  commands = [];\n  command;\n  container;\n  commandProcessed;\n  subscription;\n  _componentStyle = inject(TerminalStyle);\n  constructor(terminalService) {\n    super();\n    this.terminalService = terminalService;\n    this.subscription = terminalService.responseHandler.subscribe(response => {\n      this.commands[this.commands.length - 1].response = response;\n      this.commandProcessed = true;\n    });\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.container = find(this.el.nativeElement, '.p-terminal')[0];\n  }\n  ngAfterViewChecked() {\n    if (this.commandProcessed) {\n      this.container.scrollTop = this.container.scrollHeight;\n      this.commandProcessed = false;\n    }\n  }\n  set response(value) {\n    if (value) {\n      this.commands[this.commands.length - 1].response = value;\n      this.commandProcessed = true;\n    }\n  }\n  handleCommand(event) {\n    if (event.keyCode == 13) {\n      this.commands.push({\n        text: this.command\n      });\n      this.terminalService.sendCommand(this.command);\n      this.command = '';\n    }\n  }\n  focus(element) {\n    element.focus();\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    super.ngOnDestroy();\n  }\n  static ɵfac = function Terminal_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Terminal)(i0.ɵɵdirectiveInject(TerminalService));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Terminal,\n    selectors: [[\"p-terminal\"]],\n    inputs: {\n      welcomeMessage: \"welcomeMessage\",\n      prompt: \"prompt\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      response: \"response\"\n    },\n    features: [i0.ɵɵProvidersFeature([TerminalStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 9,\n    vars: 8,\n    consts: [[\"in\", \"\"], [3, \"click\", \"ngClass\", \"ngStyle\"], [\"class\", \"p-terminal-welcome-message\", 4, \"ngIf\"], [1, \"p-terminal-command-list\"], [\"class\", \"p-terminal-command\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-terminal-prompt\"], [1, \"p-terminal-prompt-label\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"autofocus\", \"\", 1, \"p-terminal-prompt-value\", 3, \"ngModelChange\", \"keydown\", \"ngModel\"], [1, \"p-terminal-welcome-message\"], [1, \"p-terminal-command\"], [1, \"p-terminal-command-value\"], [1, \"p-terminal-command-response\"]],\n    template: function Terminal_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1);\n        i0.ɵɵlistener(\"click\", function Terminal_Template_div_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const in_r2 = i0.ɵɵreference(8);\n          return i0.ɵɵresetView(ctx.focus(in_r2));\n        });\n        i0.ɵɵtemplate(1, Terminal_div_1_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementStart(2, \"div\", 3);\n        i0.ɵɵtemplate(3, Terminal_div_3_Template, 7, 4, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 5)(5, \"span\", 6);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 7, 0);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function Terminal_Template_input_ngModelChange_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          i0.ɵɵtwoWayBindingSet(ctx.command, $event) || (ctx.command = $event);\n          return i0.ɵɵresetView($event);\n        });\n        i0.ɵɵlistener(\"keydown\", function Terminal_Template_input_keydown_7_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.handleCommand($event));\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", \"p-terminal p-component\")(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.welcomeMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.commands);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.prompt);\n        i0.ɵɵadvance();\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.command);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgStyle, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Terminal, [{\n    type: Component,\n    args: [{\n      selector: 'p-terminal',\n      standalone: true,\n      imports: [CommonModule, FormsModule, SharedModule],\n      template: `\n        <div [ngClass]=\"'p-terminal p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div class=\"p-terminal-welcome-message\" *ngIf=\"welcomeMessage\">{{ welcomeMessage }}</div>\n            <div class=\"p-terminal-command-list\">\n                <div class=\"p-terminal-command\" *ngFor=\"let command of commands\">\n                    <span class=\"p-terminal-prompt-label\">{{ prompt }}</span>\n                    <span class=\"p-terminal-command-value\">{{ command.text }}</span>\n                    <div class=\"p-terminal-command-response\" [attr.aria-live]=\"'polite'\">{{ command.response }}</div>\n                </div>\n            </div>\n            <div class=\"p-terminal-prompt\">\n                <span class=\"p-terminal-prompt-label\">{{ prompt }}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"p-terminal-prompt-value\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus />\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [TerminalStyle]\n    }]\n  }], () => [{\n    type: TerminalService\n  }], {\n    welcomeMessage: [{\n      type: Input\n    }],\n    prompt: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    response: [{\n      type: Input\n    }]\n  });\n})();\nclass TerminalModule {\n  static ɵfac = function TerminalModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TerminalModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TerminalModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Terminal, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TerminalModule, [{\n    type: NgModule,\n    args: [{\n      exports: [Terminal, SharedModule],\n      imports: [Terminal, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Terminal, TerminalClasses, TerminalModule, TerminalService, TerminalStyle };","map":{"version":3,"names":["i2","CommonModule","i0","Injectable","inject","Input","ViewEncapsulation","ChangeDetectionStrategy","Component","NgModule","i3","FormsModule","find","SharedModule","BaseComponent","BaseStyle","Subject","Terminal_div_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r2","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","welcomeMessage","Terminal_div_3_Template","command_r4","$implicit","prompt","text","ɵɵattribute","response","theme","dt","classes","root","commandList","command","commandValue","commandResponse","promptLabel","promptValue","TerminalStyle","name","ɵfac","ɵTerminalStyle_BaseFactory","TerminalStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","TerminalClasses","TerminalService","commandSource","responseSource","commandHandler","asObservable","responseHandler","sendCommand","next","sendResponse","TerminalService_Factory","Terminal","terminalService","style","styleClass","commands","container","commandProcessed","subscription","_componentStyle","constructor","subscribe","length","ngAfterViewInit","el","nativeElement","ngAfterViewChecked","scrollTop","scrollHeight","value","handleCommand","event","keyCode","push","focus","element","ngOnDestroy","unsubscribe","Terminal_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","inputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","Terminal_Template","_r1","ɵɵgetCurrentView","ɵɵlistener","Terminal_Template_div_click_0_listener","ɵɵrestoreView","in_r2","ɵɵreference","ɵɵresetView","ɵɵtemplate","ɵɵtwoWayListener","Terminal_Template_input_ngModelChange_7_listener","$event","ɵɵtwoWayBindingSet","Terminal_Template_input_keydown_7_listener","ɵɵclassMap","ɵɵproperty","ɵɵtwoWayProperty","dependencies","NgClass","NgForOf","NgIf","NgStyle","DefaultValueAccessor","NgControlStatus","NgModel","encapsulation","changeDetection","args","selector","standalone","imports","OnPush","None","providers","TerminalModule","TerminalModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-terminal.mjs"],"sourcesContent":["import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { find } from '@primeuix/utils';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nimport { Subject } from 'rxjs';\n\nconst theme = ({ dt }) => `\n.p-terminal {\n    height: ${dt('terminal.height')};\n    overflow: auto;\n    background: ${dt('terminal.background')};\n    color: ${dt('terminal.color')};\n    border: 1px solid ${dt('terminal.border.color')};\n    padding: ${dt('terminal.padding')};\n    border-radius: ${dt('terminal.border.radius')};\n}\n\n.p-terminal-prompt {\n    display: flex;\n    align-items: center;\n}\n\n.p-terminal-prompt-value {\n    flex: 1 1 auto;\n    border: 0 none;\n    background: transparent;\n    color: inherit;\n    padding: 0;\n    outline: 0 none;\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n}\n\n.p-terminal-prompt-label {\n    margin-inline-end: ${dt('terminal.prompt.gap')};\n}\n\n.p-terminal-input::-ms-clear {\n    display: none;\n}\n\n.p-terminal-command-response {\n    margin: ${dt('terminal.command.response.margin')};\n}\n`;\nconst classes = {\n    root: 'p-terminal p-component',\n    welcomeMessage: 'p-terminal-welcome-message',\n    commandList: 'p-terminal-command-list',\n    command: 'p-terminal-command',\n    commandValue: 'p-terminal-command-value',\n    commandResponse: 'p-terminal-command-response',\n    prompt: 'p-terminal-prompt',\n    promptLabel: 'p-terminal-prompt-label',\n    promptValue: 'p-terminal-prompt-value'\n};\nclass TerminalStyle extends BaseStyle {\n    name = 'terminal';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Terminal is a text based user interface.\n *\n * [Live Demo](https://www.primeng.org/terminal)\n *\n * @module terminalstyle\n *\n */\nvar TerminalClasses;\n(function (TerminalClasses) {\n    /**\n     * Class name of the root element\n     */\n    TerminalClasses[\"root\"] = \"p-terminal\";\n    /**\n     * Class name of the welcome message element\n     */\n    TerminalClasses[\"welcomeMessage\"] = \"p-terminal-welcome-message\";\n    /**\n     * Class name of the command list element\n     */\n    TerminalClasses[\"commandList\"] = \"p-terminal-command-list\";\n    /**\n     * Class name of the command element\n     */\n    TerminalClasses[\"command\"] = \"p-terminal-command\";\n    /**\n     * Class name of the command value element\n     */\n    TerminalClasses[\"commandValue\"] = \"p-terminal-command-value\";\n    /**\n     * Class name of the command response element\n     */\n    TerminalClasses[\"commandResponse\"] = \"p-terminal-command-response\";\n    /**\n     * Class name of the prompt element\n     */\n    TerminalClasses[\"prompt\"] = \"p-terminal-prompt\";\n    /**\n     * Class name of the prompt label element\n     */\n    TerminalClasses[\"promptLabel\"] = \"p-terminal-prompt-label\";\n    /**\n     * Class name of the prompt value element\n     */\n    TerminalClasses[\"promptValue\"] = \"p-terminal-prompt-value\";\n})(TerminalClasses || (TerminalClasses = {}));\n\nclass TerminalService {\n    commandSource = new Subject();\n    responseSource = new Subject();\n    commandHandler = this.commandSource.asObservable();\n    responseHandler = this.responseSource.asObservable();\n    sendCommand(command) {\n        if (command) {\n            this.commandSource.next(command);\n        }\n    }\n    sendResponse(response) {\n        if (response) {\n            this.responseSource.next(response);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Terminal is a text based user interface.\n * @group Components\n */\nclass Terminal extends BaseComponent {\n    terminalService;\n    /**\n     * Initial text to display on terminal.\n     * @group Props\n     */\n    welcomeMessage;\n    /**\n     * Prompt text for each command.\n     * @group Props\n     */\n    prompt;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    commands = [];\n    command;\n    container;\n    commandProcessed;\n    subscription;\n    _componentStyle = inject(TerminalStyle);\n    constructor(terminalService) {\n        super();\n        this.terminalService = terminalService;\n        this.subscription = terminalService.responseHandler.subscribe((response) => {\n            this.commands[this.commands.length - 1].response = response;\n            this.commandProcessed = true;\n        });\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this.container = find(this.el.nativeElement, '.p-terminal')[0];\n    }\n    ngAfterViewChecked() {\n        if (this.commandProcessed) {\n            this.container.scrollTop = this.container.scrollHeight;\n            this.commandProcessed = false;\n        }\n    }\n    set response(value) {\n        if (value) {\n            this.commands[this.commands.length - 1].response = value;\n            this.commandProcessed = true;\n        }\n    }\n    handleCommand(event) {\n        if (event.keyCode == 13) {\n            this.commands.push({ text: this.command });\n            this.terminalService.sendCommand(this.command);\n            this.command = '';\n        }\n    }\n    focus(element) {\n        element.focus();\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Terminal, deps: [{ token: TerminalService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.10\", type: Terminal, isStandalone: true, selector: \"p-terminal\", inputs: { welcomeMessage: \"welcomeMessage\", prompt: \"prompt\", style: \"style\", styleClass: \"styleClass\", response: \"response\" }, providers: [TerminalStyle], usesInheritance: true, ngImport: i0, template: `\n        <div [ngClass]=\"'p-terminal p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div class=\"p-terminal-welcome-message\" *ngIf=\"welcomeMessage\">{{ welcomeMessage }}</div>\n            <div class=\"p-terminal-command-list\">\n                <div class=\"p-terminal-command\" *ngFor=\"let command of commands\">\n                    <span class=\"p-terminal-prompt-label\">{{ prompt }}</span>\n                    <span class=\"p-terminal-command-value\">{{ command.text }}</span>\n                    <div class=\"p-terminal-command-response\" [attr.aria-live]=\"'polite'\">{{ command.response }}</div>\n                </div>\n            </div>\n            <div class=\"p-terminal-prompt\">\n                <span class=\"p-terminal-prompt-label\">{{ prompt }}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"p-terminal-prompt-value\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus />\n            </div>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"ngmodule\", type: FormsModule }, { kind: \"directive\", type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Terminal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-terminal',\n                    standalone: true,\n                    imports: [CommonModule, FormsModule, SharedModule],\n                    template: `\n        <div [ngClass]=\"'p-terminal p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div class=\"p-terminal-welcome-message\" *ngIf=\"welcomeMessage\">{{ welcomeMessage }}</div>\n            <div class=\"p-terminal-command-list\">\n                <div class=\"p-terminal-command\" *ngFor=\"let command of commands\">\n                    <span class=\"p-terminal-prompt-label\">{{ prompt }}</span>\n                    <span class=\"p-terminal-command-value\">{{ command.text }}</span>\n                    <div class=\"p-terminal-command-response\" [attr.aria-live]=\"'polite'\">{{ command.response }}</div>\n                </div>\n            </div>\n            <div class=\"p-terminal-prompt\">\n                <span class=\"p-terminal-prompt-label\">{{ prompt }}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"p-terminal-prompt-value\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus />\n            </div>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [TerminalStyle]\n                }]\n        }], ctorParameters: () => [{ type: TerminalService }], propDecorators: { welcomeMessage: [{\n                type: Input\n            }], prompt: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], response: [{\n                type: Input\n            }] } });\nclass TerminalModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalModule, imports: [Terminal, SharedModule], exports: [Terminal, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalModule, imports: [Terminal, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TerminalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Terminal, SharedModule],\n                    imports: [Terminal, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Terminal, TerminalClasses, TerminalModule, TerminalService, TerminalStyle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}