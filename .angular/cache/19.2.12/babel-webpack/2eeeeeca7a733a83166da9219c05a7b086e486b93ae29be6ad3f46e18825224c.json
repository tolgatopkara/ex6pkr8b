{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, inject, booleanAttribute, ContentChildren, ContentChild, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { TranslationKeys, SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { TimesCircleIcon } from 'primeng/icons';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"removeicon\"];\nconst _c1 = [\"*\"];\nfunction Chip_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 4);\n    i0.ɵɵlistener(\"error\", function Chip_img_1_Template_img_error_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.imageError($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.image, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r1.alt);\n  }\n}\nfunction Chip_ng_template_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r1.icon);\n    i0.ɵɵproperty(\"ngClass\", \"p-chip-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Chip_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Chip_ng_template_2_span_0_Template, 1, 4, \"span\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.icon);\n  }\n}\nfunction Chip_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.label);\n  }\n}\nfunction Chip_ng_container_5_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵlistener(\"click\", function Chip_ng_container_5_ng_container_1_span_1_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    })(\"keydown\", function Chip_ng_container_5_ng_container_1_span_1_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r1.removeIcon);\n    i0.ɵɵproperty(\"ngClass\", \"p-chip-remove-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"removeicon\")(\"aria-label\", ctx_r1.removeAriaLabel);\n  }\n}\nfunction Chip_ng_container_5_ng_container_1_TimesCircleIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesCircleIcon\", 12);\n    i0.ɵɵlistener(\"click\", function Chip_ng_container_5_ng_container_1_TimesCircleIcon_2_Template_TimesCircleIcon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    })(\"keydown\", function Chip_ng_container_5_ng_container_1_TimesCircleIcon_2_Template_TimesCircleIcon_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(\"p-chip-remove-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"removeicon\")(\"aria-label\", ctx_r1.removeAriaLabel);\n  }\n}\nfunction Chip_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Chip_ng_container_5_ng_container_1_span_1_Template, 1, 5, \"span\", 9)(2, Chip_ng_container_5_ng_container_1_TimesCircleIcon_2_Template, 1, 4, \"TimesCircleIcon\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.removeIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.removeIcon);\n  }\n}\nfunction Chip_ng_container_5_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Chip_ng_container_5_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Chip_ng_container_5_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Chip_ng_container_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function Chip_ng_container_5_span_2_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    })(\"keydown\", function Chip_ng_container_5_span_2_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onKeydown($event));\n    });\n    i0.ɵɵtemplate(1, Chip_ng_container_5_span_2_1_Template, 1, 0, null, 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"removeicon\")(\"aria-label\", ctx_r1.removeAriaLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.removeIconTemplate || ctx_r1._removeIconTemplate);\n  }\n}\nfunction Chip_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Chip_ng_container_5_ng_container_1_Template, 3, 2, \"ng-container\", 3)(2, Chip_ng_container_5_span_2_Template, 2, 3, \"span\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.removeIconTemplate && !ctx_r1._removeIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.removeIconTemplate || ctx_r1._removeIconTemplate);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-chip {\n    display: inline-flex;\n    align-items: center;\n    background: ${dt('chip.background')};\n    color: ${dt('chip.color')};\n    border-radius: ${dt('chip.border.radius')};\n    padding: ${dt('chip.padding.y')} ${dt('chip.padding.x')};\n    gap: ${dt('chip.gap')};\n}\n\n.p-chip-icon {\n    color: ${dt('chip.icon.color')};\n    font-size: ${dt('chip.icon.font.size')};\n    width: ${dt('chip.icon.size')};\n    height: ${dt('chip.icon.size')};\n}\n\n.p-chip-image {\n    border-radius: 50%;\n    width: ${dt('chip.image.width')};\n    height: ${dt('chip.image.height')};\n    margin-left: calc(-1 * ${dt('chip.padding.y')});\n}\n\n.p-chip:has(.p-chip-remove-icon) {\n    padding-inline-end: ${dt('chip.padding.y')};\n}\n\n.p-chip:has(.p-chip-image) {\n    padding-top: calc(${dt('chip.padding.y')} / 2);\n    padding-bottom: calc(${dt('chip.padding.y')} / 2);\n}\n\n.p-chip-remove-icon {\n    cursor: pointer;\n    font-size: ${dt('chip.remove.icon.font.size')};\n    width: ${dt('chip.remove.icon.size')};\n    height: ${dt('chip.remove.icon.size')};\n    color: ${dt('chip.remove.icon.color')};\n    border-radius: 50%;\n    transition: outline-color ${dt('chip.transition.duration')}, box-shadow ${dt('chip.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-chip-remove-icon:focus-visible {\n    box-shadow: ${dt('chip.remove.icon.focus.ring.shadow')};\n    outline: ${dt('chip.remove.icon.focus.ring.width')} ${dt('chip.remove.icon.focus.ring.style')} ${dt('chip.remove.icon.focus.ring.color')};\n    outline-offset: ${dt('chip.remove.icon.focus.ring.offset')};\n}\n`;\nconst classes = {\n  root: 'p-chip p-component',\n  image: 'p-chip-image',\n  icon: 'p-chip-icon',\n  label: 'p-chip-label',\n  removeIcon: 'p-chip-remove-icon'\n};\nclass ChipStyle extends BaseStyle {\n  name = 'chip';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵChipStyle_BaseFactory;\n    return function ChipStyle_Factory(__ngFactoryType__) {\n      return (ɵChipStyle_BaseFactory || (ɵChipStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ChipStyle)))(__ngFactoryType__ || ChipStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ChipStyle,\n    factory: ChipStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChipStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Chip represents people using icons, labels and images.\n *\n * [Live Demo](https://www.primeng.org/chip)\n *\n * @module chipstyle\n *\n */\nvar ChipClasses;\n(function (ChipClasses) {\n  /**\n   * Class name of the root element\n   */\n  ChipClasses[\"root\"] = \"p-chip\";\n  /**\n   * Class name of the image element\n   */\n  ChipClasses[\"image\"] = \"p-chip-image\";\n  /**\n   * Class name of the icon element\n   */\n  ChipClasses[\"icon\"] = \"p-chip-icon\";\n  /**\n   * Class name of the label element\n   */\n  ChipClasses[\"label\"] = \"p-chip-label\";\n  /**\n   * Class name of the remove icon element\n   */\n  ChipClasses[\"removeIcon\"] = \"p-chip-remove-icon\";\n})(ChipClasses || (ChipClasses = {}));\n\n/**\n * Chip represents people using icons, labels and images.\n * @group Components\n */\nclass Chip extends BaseComponent {\n  /**\n   * Defines the text to display.\n   * @group Props\n   */\n  label;\n  /**\n   * Defines the icon to display.\n   * @group Props\n   */\n  icon;\n  /**\n   * Defines the image to display.\n   * @group Props\n   */\n  image;\n  /**\n   * Alt attribute of the image.\n   * @group Props\n   */\n  alt;\n  /**\n   * Inline style of the element.\n   * @group Props\n   */\n  style;\n  /**\n   * Class of the element.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Whether to display a remove icon.\n   * @group Props\n   */\n  removable = false;\n  /**\n   * Icon of the remove element.\n   * @group Props\n   */\n  removeIcon;\n  /**\n   * Callback to invoke when a chip is removed.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Emits\n   */\n  onRemove = new EventEmitter();\n  /**\n   * This event is triggered if an error occurs while loading an image file.\n   * @param {Event} event - Browser event.\n   * @group Emits\n   */\n  onImageError = new EventEmitter();\n  visible = true;\n  get removeAriaLabel() {\n    return this.config.getTranslation(TranslationKeys.ARIA)['removeLabel'];\n  }\n  /**\n   * Used to pass all properties of the chipProps to the Chip component.\n   * @group Props\n   */\n  get chipProps() {\n    return this._chipProps;\n  }\n  set chipProps(val) {\n    this._chipProps = val;\n    if (val && typeof val === 'object') {\n      //@ts-ignore\n      Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n    }\n  }\n  _chipProps;\n  _componentStyle = inject(ChipStyle);\n  removeIconTemplate;\n  templates;\n  _removeIconTemplate;\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'removeicon':\n          this._removeIconTemplate = item.template;\n          break;\n        default:\n          this._removeIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngOnChanges(simpleChanges) {\n    super.ngOnChanges(simpleChanges);\n    if (simpleChanges.chipProps && simpleChanges.chipProps.currentValue) {\n      const {\n        currentValue\n      } = simpleChanges.chipProps;\n      if (currentValue.label !== undefined) {\n        this.label = currentValue.label;\n      }\n      if (currentValue.icon !== undefined) {\n        this.icon = currentValue.icon;\n      }\n      if (currentValue.image !== undefined) {\n        this.image = currentValue.image;\n      }\n      if (currentValue.alt !== undefined) {\n        this.alt = currentValue.alt;\n      }\n      if (currentValue.style !== undefined) {\n        this.style = currentValue.style;\n      }\n      if (currentValue.styleClass !== undefined) {\n        this.styleClass = currentValue.styleClass;\n      }\n      if (currentValue.removable !== undefined) {\n        this.removable = currentValue.removable;\n      }\n      if (currentValue.removeIcon !== undefined) {\n        this.removeIcon = currentValue.removeIcon;\n      }\n    }\n  }\n  containerClass() {\n    let classes = 'p-chip p-component';\n    if (this.styleClass) {\n      classes += ` ${this.styleClass}`;\n    }\n    return classes;\n  }\n  close(event) {\n    this.visible = false;\n    this.onRemove.emit(event);\n  }\n  onKeydown(event) {\n    if (event.key === 'Enter' || event.key === 'Backspace') {\n      this.close(event);\n    }\n  }\n  imageError(event) {\n    this.onImageError.emit(event);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵChip_BaseFactory;\n    return function Chip_Factory(__ngFactoryType__) {\n      return (ɵChip_BaseFactory || (ɵChip_BaseFactory = i0.ɵɵgetInheritedFactory(Chip)))(__ngFactoryType__ || Chip);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Chip,\n    selectors: [[\"p-chip\"]],\n    contentQueries: function Chip_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 9,\n    hostBindings: function Chip_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-pc-name\", \"chip\")(\"aria-label\", ctx.label)(\"data-pc-section\", \"root\");\n        i0.ɵɵstyleMap(ctx.style);\n        i0.ɵɵclassMap(ctx.containerClass());\n        i0.ɵɵstyleProp(\"display\", !ctx.visible && \"none\");\n      }\n    },\n    inputs: {\n      label: \"label\",\n      icon: \"icon\",\n      image: \"image\",\n      alt: \"alt\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      removable: [2, \"removable\", \"removable\", booleanAttribute],\n      removeIcon: \"removeIcon\",\n      chipProps: \"chipProps\"\n    },\n    outputs: {\n      onRemove: \"onRemove\",\n      onImageError: \"onImageError\"\n    },\n    features: [i0.ɵɵProvidersFeature([ChipStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c1,\n    decls: 6,\n    vars: 4,\n    consts: [[\"iconTemplate\", \"\"], [\"class\", \"p-chip-image\", 3, \"src\", \"alt\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"class\", \"p-chip-label\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"p-chip-image\", 3, \"error\", \"src\", \"alt\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-chip-label\"], [\"tabindex\", \"0\", \"class\", \"p-chip-remove-icon\", \"role\", \"button\", 3, \"click\", \"keydown\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"class\", \"ngClass\", \"click\", \"keydown\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"class\", \"click\", \"keydown\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"click\", \"keydown\", \"ngClass\"], [\"tabindex\", \"0\", \"role\", \"button\", 3, \"click\", \"keydown\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"p-chip-remove-icon\", 3, \"click\", \"keydown\"], [4, \"ngTemplateOutlet\"]],\n    template: function Chip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, Chip_img_1_Template, 1, 2, \"img\", 1)(2, Chip_ng_template_2_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(4, Chip_div_4_Template, 2, 2, \"div\", 2)(5, Chip_ng_container_5_Template, 3, 2, \"ng-container\", 3);\n      }\n      if (rf & 2) {\n        const iconTemplate_r6 = i0.ɵɵreference(3);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.image)(\"ngIfElse\", iconTemplate_r6);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.label);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.removable);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, TimesCircleIcon, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Chip, [{\n    type: Component,\n    args: [{\n      selector: 'p-chip',\n      standalone: true,\n      imports: [CommonModule, TimesCircleIcon, SharedModule],\n      template: `\n        <ng-content></ng-content>\n        <img class=\"p-chip-image\" [src]=\"image\" *ngIf=\"image; else iconTemplate\" (error)=\"imageError($event)\" [alt]=\"alt\" />\n        <ng-template #iconTemplate><span *ngIf=\"icon\" [class]=\"icon\" [ngClass]=\"'p-chip-icon'\" [attr.data-pc-section]=\"'icon'\"></span></ng-template>\n        <div class=\"p-chip-label\" *ngIf=\"label\" [attr.data-pc-section]=\"'label'\">{{ label }}</div>\n        <ng-container *ngIf=\"removable\">\n            <ng-container *ngIf=\"!removeIconTemplate && !_removeIconTemplate\">\n                <span\n                    tabindex=\"0\"\n                    *ngIf=\"removeIcon\"\n                    [class]=\"removeIcon\"\n                    [ngClass]=\"'p-chip-remove-icon'\"\n                    [attr.data-pc-section]=\"'removeicon'\"\n                    (click)=\"close($event)\"\n                    (keydown)=\"onKeydown($event)\"\n                    [attr.aria-label]=\"removeAriaLabel\"\n                    role=\"button\"\n                ></span>\n                <TimesCircleIcon tabindex=\"0\" *ngIf=\"!removeIcon\" [class]=\"'p-chip-remove-icon'\" [attr.data-pc-section]=\"'removeicon'\" (click)=\"close($event)\" (keydown)=\"onKeydown($event)\" [attr.aria-label]=\"removeAriaLabel\" role=\"button\" />\n            </ng-container>\n            <span *ngIf=\"removeIconTemplate || _removeIconTemplate\" tabindex=\"0\" [attr.data-pc-section]=\"'removeicon'\" class=\"p-chip-remove-icon\" (click)=\"close($event)\" (keydown)=\"onKeydown($event)\" [attr.aria-label]=\"removeAriaLabel\" role=\"button\">\n                <ng-template *ngTemplateOutlet=\"removeIconTemplate || _removeIconTemplate\"></ng-template>\n            </span>\n        </ng-container>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [ChipStyle],\n      host: {\n        '[class]': 'containerClass()',\n        '[style]': 'style',\n        '[style.display]': '!visible && \"none\"',\n        '[attr.data-pc-name]': \"'chip'\",\n        '[attr.aria-label]': 'label',\n        '[attr.data-pc-section]': \"'root'\"\n      }\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    image: [{\n      type: Input\n    }],\n    alt: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    removeIcon: [{\n      type: Input\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onImageError: [{\n      type: Output\n    }],\n    chipProps: [{\n      type: Input\n    }],\n    removeIconTemplate: [{\n      type: ContentChild,\n      args: ['removeicon', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ChipModule {\n  static ɵfac = function ChipModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ChipModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ChipModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Chip, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Chip, SharedModule],\n      exports: [Chip, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Chip, ChipClasses, ChipModule, ChipStyle };","map":{"version":3,"names":["i1","CommonModule","i0","Injectable","EventEmitter","inject","booleanAttribute","ContentChildren","ContentChild","Input","Output","ViewEncapsulation","ChangeDetectionStrategy","Component","NgModule","TranslationKeys","SharedModule","PrimeTemplate","BaseComponent","TimesCircleIcon","BaseStyle","_c0","_c1","Chip_img_1_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","Chip_img_1_Template_img_error_0_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","imageError","ɵɵelementEnd","ɵɵproperty","image","ɵɵsanitizeUrl","alt","Chip_ng_template_2_span_0_Template","ɵɵelement","ɵɵclassMap","icon","ɵɵattribute","Chip_ng_template_2_Template","ɵɵtemplate","Chip_div_4_Template","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","label","Chip_ng_container_5_ng_container_1_span_1_Template","_r3","Chip_ng_container_5_ng_container_1_span_1_Template_span_click_0_listener","close","Chip_ng_container_5_ng_container_1_span_1_Template_span_keydown_0_listener","onKeydown","removeIcon","removeAriaLabel","Chip_ng_container_5_ng_container_1_TimesCircleIcon_2_Template","_r4","Chip_ng_container_5_ng_container_1_TimesCircleIcon_2_Template_TimesCircleIcon_click_0_listener","Chip_ng_container_5_ng_container_1_TimesCircleIcon_2_Template_TimesCircleIcon_keydown_0_listener","Chip_ng_container_5_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","Chip_ng_container_5_span_2_1_ng_template_0_Template","Chip_ng_container_5_span_2_1_Template","Chip_ng_container_5_span_2_Template","_r5","Chip_ng_container_5_span_2_Template_span_click_0_listener","Chip_ng_container_5_span_2_Template_span_keydown_0_listener","removeIconTemplate","_removeIconTemplate","Chip_ng_container_5_Template","theme","dt","classes","root","ChipStyle","name","ɵfac","ɵChipStyle_BaseFactory","ChipStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","ChipClasses","Chip","style","styleClass","removable","onRemove","onImageError","visible","config","getTranslation","ARIA","chipProps","_chipProps","val","Object","entries","forEach","k","v","_componentStyle","templates","ngAfterContentInit","item","getType","template","ngOnChanges","simpleChanges","currentValue","undefined","containerClass","event","emit","key","ɵChip_BaseFactory","Chip_Factory","ɵcmp","ɵɵdefineComponent","selectors","contentQueries","Chip_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","Chip_HostBindings","ɵɵstyleMap","ɵɵstyleProp","inputs","outputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","consts","Chip_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵtemplateRefExtractor","iconTemplate_r6","ɵɵreference","dependencies","NgClass","NgIf","NgTemplateOutlet","encapsulation","changeDetection","args","selector","standalone","imports","OnPush","None","providers","host","transform","descendants","ChipModule","ChipModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-chip.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, inject, booleanAttribute, ContentChildren, ContentChild, Input, Output, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { TranslationKeys, SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { TimesCircleIcon } from 'primeng/icons';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-chip {\n    display: inline-flex;\n    align-items: center;\n    background: ${dt('chip.background')};\n    color: ${dt('chip.color')};\n    border-radius: ${dt('chip.border.radius')};\n    padding: ${dt('chip.padding.y')} ${dt('chip.padding.x')};\n    gap: ${dt('chip.gap')};\n}\n\n.p-chip-icon {\n    color: ${dt('chip.icon.color')};\n    font-size: ${dt('chip.icon.font.size')};\n    width: ${dt('chip.icon.size')};\n    height: ${dt('chip.icon.size')};\n}\n\n.p-chip-image {\n    border-radius: 50%;\n    width: ${dt('chip.image.width')};\n    height: ${dt('chip.image.height')};\n    margin-left: calc(-1 * ${dt('chip.padding.y')});\n}\n\n.p-chip:has(.p-chip-remove-icon) {\n    padding-inline-end: ${dt('chip.padding.y')};\n}\n\n.p-chip:has(.p-chip-image) {\n    padding-top: calc(${dt('chip.padding.y')} / 2);\n    padding-bottom: calc(${dt('chip.padding.y')} / 2);\n}\n\n.p-chip-remove-icon {\n    cursor: pointer;\n    font-size: ${dt('chip.remove.icon.font.size')};\n    width: ${dt('chip.remove.icon.size')};\n    height: ${dt('chip.remove.icon.size')};\n    color: ${dt('chip.remove.icon.color')};\n    border-radius: 50%;\n    transition: outline-color ${dt('chip.transition.duration')}, box-shadow ${dt('chip.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-chip-remove-icon:focus-visible {\n    box-shadow: ${dt('chip.remove.icon.focus.ring.shadow')};\n    outline: ${dt('chip.remove.icon.focus.ring.width')} ${dt('chip.remove.icon.focus.ring.style')} ${dt('chip.remove.icon.focus.ring.color')};\n    outline-offset: ${dt('chip.remove.icon.focus.ring.offset')};\n}\n`;\nconst classes = {\n    root: 'p-chip p-component',\n    image: 'p-chip-image',\n    icon: 'p-chip-icon',\n    label: 'p-chip-label',\n    removeIcon: 'p-chip-remove-icon'\n};\nclass ChipStyle extends BaseStyle {\n    name = 'chip';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: ChipStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: ChipStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: ChipStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Chip represents people using icons, labels and images.\n *\n * [Live Demo](https://www.primeng.org/chip)\n *\n * @module chipstyle\n *\n */\nvar ChipClasses;\n(function (ChipClasses) {\n    /**\n     * Class name of the root element\n     */\n    ChipClasses[\"root\"] = \"p-chip\";\n    /**\n     * Class name of the image element\n     */\n    ChipClasses[\"image\"] = \"p-chip-image\";\n    /**\n     * Class name of the icon element\n     */\n    ChipClasses[\"icon\"] = \"p-chip-icon\";\n    /**\n     * Class name of the label element\n     */\n    ChipClasses[\"label\"] = \"p-chip-label\";\n    /**\n     * Class name of the remove icon element\n     */\n    ChipClasses[\"removeIcon\"] = \"p-chip-remove-icon\";\n})(ChipClasses || (ChipClasses = {}));\n\n/**\n * Chip represents people using icons, labels and images.\n * @group Components\n */\nclass Chip extends BaseComponent {\n    /**\n     * Defines the text to display.\n     * @group Props\n     */\n    label;\n    /**\n     * Defines the icon to display.\n     * @group Props\n     */\n    icon;\n    /**\n     * Defines the image to display.\n     * @group Props\n     */\n    image;\n    /**\n     * Alt attribute of the image.\n     * @group Props\n     */\n    alt;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Whether to display a remove icon.\n     * @group Props\n     */\n    removable = false;\n    /**\n     * Icon of the remove element.\n     * @group Props\n     */\n    removeIcon;\n    /**\n     * Callback to invoke when a chip is removed.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onRemove = new EventEmitter();\n    /**\n     * This event is triggered if an error occurs while loading an image file.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onImageError = new EventEmitter();\n    visible = true;\n    get removeAriaLabel() {\n        return this.config.getTranslation(TranslationKeys.ARIA)['removeLabel'];\n    }\n    /**\n     * Used to pass all properties of the chipProps to the Chip component.\n     * @group Props\n     */\n    get chipProps() {\n        return this._chipProps;\n    }\n    set chipProps(val) {\n        this._chipProps = val;\n        if (val && typeof val === 'object') {\n            //@ts-ignore\n            Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n        }\n    }\n    _chipProps;\n    _componentStyle = inject(ChipStyle);\n    removeIconTemplate;\n    templates;\n    _removeIconTemplate;\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'removeicon':\n                    this._removeIconTemplate = item.template;\n                    break;\n                default:\n                    this._removeIconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngOnChanges(simpleChanges) {\n        super.ngOnChanges(simpleChanges);\n        if (simpleChanges.chipProps && simpleChanges.chipProps.currentValue) {\n            const { currentValue } = simpleChanges.chipProps;\n            if (currentValue.label !== undefined) {\n                this.label = currentValue.label;\n            }\n            if (currentValue.icon !== undefined) {\n                this.icon = currentValue.icon;\n            }\n            if (currentValue.image !== undefined) {\n                this.image = currentValue.image;\n            }\n            if (currentValue.alt !== undefined) {\n                this.alt = currentValue.alt;\n            }\n            if (currentValue.style !== undefined) {\n                this.style = currentValue.style;\n            }\n            if (currentValue.styleClass !== undefined) {\n                this.styleClass = currentValue.styleClass;\n            }\n            if (currentValue.removable !== undefined) {\n                this.removable = currentValue.removable;\n            }\n            if (currentValue.removeIcon !== undefined) {\n                this.removeIcon = currentValue.removeIcon;\n            }\n        }\n    }\n    containerClass() {\n        let classes = 'p-chip p-component';\n        if (this.styleClass) {\n            classes += ` ${this.styleClass}`;\n        }\n        return classes;\n    }\n    close(event) {\n        this.visible = false;\n        this.onRemove.emit(event);\n    }\n    onKeydown(event) {\n        if (event.key === 'Enter' || event.key === 'Backspace') {\n            this.close(event);\n        }\n    }\n    imageError(event) {\n        this.onImageError.emit(event);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Chip, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: Chip, isStandalone: true, selector: \"p-chip\", inputs: { label: \"label\", icon: \"icon\", image: \"image\", alt: \"alt\", style: \"style\", styleClass: \"styleClass\", removable: [\"removable\", \"removable\", booleanAttribute], removeIcon: \"removeIcon\", chipProps: \"chipProps\" }, outputs: { onRemove: \"onRemove\", onImageError: \"onImageError\" }, host: { properties: { \"class\": \"containerClass()\", \"style\": \"style\", \"style.display\": \"!visible && \\\"none\\\"\", \"attr.data-pc-name\": \"'chip'\", \"attr.aria-label\": \"label\", \"attr.data-pc-section\": \"'root'\" } }, providers: [ChipStyle], queries: [{ propertyName: \"removeIconTemplate\", first: true, predicate: [\"removeicon\"] }, { propertyName: \"templates\", predicate: PrimeTemplate }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n        <ng-content></ng-content>\n        <img class=\"p-chip-image\" [src]=\"image\" *ngIf=\"image; else iconTemplate\" (error)=\"imageError($event)\" [alt]=\"alt\" />\n        <ng-template #iconTemplate><span *ngIf=\"icon\" [class]=\"icon\" [ngClass]=\"'p-chip-icon'\" [attr.data-pc-section]=\"'icon'\"></span></ng-template>\n        <div class=\"p-chip-label\" *ngIf=\"label\" [attr.data-pc-section]=\"'label'\">{{ label }}</div>\n        <ng-container *ngIf=\"removable\">\n            <ng-container *ngIf=\"!removeIconTemplate && !_removeIconTemplate\">\n                <span\n                    tabindex=\"0\"\n                    *ngIf=\"removeIcon\"\n                    [class]=\"removeIcon\"\n                    [ngClass]=\"'p-chip-remove-icon'\"\n                    [attr.data-pc-section]=\"'removeicon'\"\n                    (click)=\"close($event)\"\n                    (keydown)=\"onKeydown($event)\"\n                    [attr.aria-label]=\"removeAriaLabel\"\n                    role=\"button\"\n                ></span>\n                <TimesCircleIcon tabindex=\"0\" *ngIf=\"!removeIcon\" [class]=\"'p-chip-remove-icon'\" [attr.data-pc-section]=\"'removeicon'\" (click)=\"close($event)\" (keydown)=\"onKeydown($event)\" [attr.aria-label]=\"removeAriaLabel\" role=\"button\" />\n            </ng-container>\n            <span *ngIf=\"removeIconTemplate || _removeIconTemplate\" tabindex=\"0\" [attr.data-pc-section]=\"'removeicon'\" class=\"p-chip-remove-icon\" (click)=\"close($event)\" (keydown)=\"onKeydown($event)\" [attr.aria-label]=\"removeAriaLabel\" role=\"button\">\n                <ng-template *ngTemplateOutlet=\"removeIconTemplate || _removeIconTemplate\"></ng-template>\n            </span>\n        </ng-container>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: TimesCircleIcon, selector: \"TimesCircleIcon\" }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Chip, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-chip',\n                    standalone: true,\n                    imports: [CommonModule, TimesCircleIcon, SharedModule],\n                    template: `\n        <ng-content></ng-content>\n        <img class=\"p-chip-image\" [src]=\"image\" *ngIf=\"image; else iconTemplate\" (error)=\"imageError($event)\" [alt]=\"alt\" />\n        <ng-template #iconTemplate><span *ngIf=\"icon\" [class]=\"icon\" [ngClass]=\"'p-chip-icon'\" [attr.data-pc-section]=\"'icon'\"></span></ng-template>\n        <div class=\"p-chip-label\" *ngIf=\"label\" [attr.data-pc-section]=\"'label'\">{{ label }}</div>\n        <ng-container *ngIf=\"removable\">\n            <ng-container *ngIf=\"!removeIconTemplate && !_removeIconTemplate\">\n                <span\n                    tabindex=\"0\"\n                    *ngIf=\"removeIcon\"\n                    [class]=\"removeIcon\"\n                    [ngClass]=\"'p-chip-remove-icon'\"\n                    [attr.data-pc-section]=\"'removeicon'\"\n                    (click)=\"close($event)\"\n                    (keydown)=\"onKeydown($event)\"\n                    [attr.aria-label]=\"removeAriaLabel\"\n                    role=\"button\"\n                ></span>\n                <TimesCircleIcon tabindex=\"0\" *ngIf=\"!removeIcon\" [class]=\"'p-chip-remove-icon'\" [attr.data-pc-section]=\"'removeicon'\" (click)=\"close($event)\" (keydown)=\"onKeydown($event)\" [attr.aria-label]=\"removeAriaLabel\" role=\"button\" />\n            </ng-container>\n            <span *ngIf=\"removeIconTemplate || _removeIconTemplate\" tabindex=\"0\" [attr.data-pc-section]=\"'removeicon'\" class=\"p-chip-remove-icon\" (click)=\"close($event)\" (keydown)=\"onKeydown($event)\" [attr.aria-label]=\"removeAriaLabel\" role=\"button\">\n                <ng-template *ngTemplateOutlet=\"removeIconTemplate || _removeIconTemplate\"></ng-template>\n            </span>\n        </ng-container>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [ChipStyle],\n                    host: {\n                        '[class]': 'containerClass()',\n                        '[style]': 'style',\n                        '[style.display]': '!visible && \"none\"',\n                        '[attr.data-pc-name]': \"'chip'\",\n                        '[attr.aria-label]': 'label',\n                        '[attr.data-pc-section]': \"'root'\"\n                    }\n                }]\n        }], propDecorators: { label: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], image: [{\n                type: Input\n            }], alt: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], removable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], removeIcon: [{\n                type: Input\n            }], onRemove: [{\n                type: Output\n            }], onImageError: [{\n                type: Output\n            }], chipProps: [{\n                type: Input\n            }], removeIconTemplate: [{\n                type: ContentChild,\n                args: ['removeicon', { descendants: false }]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ChipModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: ChipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: ChipModule, imports: [Chip, SharedModule], exports: [Chip, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: ChipModule, imports: [Chip, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: ChipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Chip, SharedModule],\n                    exports: [Chip, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Chip, ChipClasses, ChipModule, ChipStyle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}