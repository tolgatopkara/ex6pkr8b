{"ast":null,"code":"import { trigger, state, transition, style, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, forwardRef, booleanAttribute, Input, Inject, ChangeDetectionStrategy, ViewEncapsulation, Component, EventEmitter, inject, ContentChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport { hasClass } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ChevronDownIcon, ChevronUpIcon } from 'primeng/icons';\nimport { Subject } from 'rxjs';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"pOrganizationChartNode\", \"\"];\nconst _c1 = (a0, a1) => ({\n  \"p-organizationchart-node\": true,\n  \"p-organizationchart-node-selectable\": a0,\n  \"p-organizationchart-node-selected\": a1\n});\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nconst _c3 = a0 => ({\n  \"p-organizationchart-connector-top\": a0\n});\nfunction OrganizationChartNode_tbody_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.node.label);\n  }\n}\nfunction OrganizationChartNode_tbody_0_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction OrganizationChartNode_tbody_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_div_5_ng_container_1_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.chart.getTemplateForNode(ctx_r1.node))(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r1.node));\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_ChevronDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-organizationchart-node-toggle-button-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeTogglerIcon\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_ChevronUpIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronUpIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-organizationchart-node-toggle-button-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeTogglerIcon\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_ChevronDownIcon_1_Template, 1, 2, \"ChevronDownIcon\", 10)(2, OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_ChevronUpIcon_2_Template, 1, 2, \"ChevronUpIcon\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.node.expanded);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.node.expanded);\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_Template, 1, 0, null, 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeTogglerIcon\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.chart.togglerIconTemplate || ctx_r1.chart._togglerIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c2, ctx_r1.node.expanded));\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.toggleNode($event, ctx_r1.node));\n    })(\"keydown.enter\", function OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.toggleNode($event, ctx_r1.node));\n    })(\"keydown.space\", function OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_keydown_space_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.toggleNode($event, ctx_r1.node));\n    });\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_Template, 3, 2, \"ng-container\", 0)(2, OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_Template, 2, 5, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeToggler\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chart.togglerIconTemplate && !ctx_r1.chart._togglerIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chart.togglerIconTemplate || ctx_r1.chart._togglerIconTemplate);\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_6_a_1_Template, 3, 3, \"a\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.leaf);\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelement(2, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"lineCell\")(\"colspan\", ctx_r1.colspan);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"lineDown\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"td\", 15);\n    i0.ɵɵtext(3, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const first_r4 = ctx.first;\n    const last_r5 = ctx.last;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c3, !first_r4));\n    i0.ɵɵattribute(\"data-pc-section\", \"lineLeft\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c3, !last_r5));\n    i0.ɵɵattribute(\"data-pc-section\", \"lineRight\");\n  }\n}\nfunction OrganizationChartNode_tbody_0_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template, 4, 8, \"ng-template\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.node.children);\n  }\n}\nfunction OrganizationChartNode_tbody_0_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵelement(1, \"table\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const child_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"nodeCell\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"node\", child_r6)(\"collapsible\", ctx_r1.node.children && ctx_r1.node.children.length > 0 && ctx_r1.collapsible);\n  }\n}\nfunction OrganizationChartNode_tbody_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\")(3, \"div\", 1);\n    i0.ɵɵlistener(\"click\", function OrganizationChartNode_tbody_0_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onNodeClick($event, ctx_r1.node));\n    });\n    i0.ɵɵtemplate(4, OrganizationChartNode_tbody_0_div_4_Template, 2, 1, \"div\", 0)(5, OrganizationChartNode_tbody_0_div_5_Template, 2, 4, \"div\", 0)(6, OrganizationChartNode_tbody_0_ng_container_6_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tr\", 2)(8, \"td\");\n    i0.ɵɵelement(9, \"div\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"tr\", 2);\n    i0.ɵɵtemplate(11, OrganizationChartNode_tbody_0_ng_container_11_Template, 3, 3, \"ng-container\", 0)(12, OrganizationChartNode_tbody_0_ng_container_12_Template, 2, 1, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"tr\", 4);\n    i0.ɵɵtemplate(14, OrganizationChartNode_tbody_0_td_14_Template, 2, 3, \"td\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"body\");\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"row\");\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"colspan\", ctx_r1.colspan)(\"data-pc-section\", \"cell\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.node.styleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(26, _c1, ctx_r1.chart.selectionMode && ctx_r1.node.selectable !== false, ctx_r1.isSelected()));\n    i0.ɵɵattribute(\"data-pc-section\", \"node\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.chart.getTemplateForNode(ctx_r1.node));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.chart.getTemplateForNode(ctx_r1.node));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.collapsible);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.getChildStyle(ctx_r1.node))(\"@childState\", \"in\");\n    i0.ɵɵattribute(\"data-pc-section\", \"lines\");\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"lineCell\")(\"colspan\", ctx_r1.colspan);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"data-pc-section\", \"lineDown\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.getChildStyle(ctx_r1.node))(\"@childState\", \"in\");\n    i0.ɵɵattribute(\"data-pc-section\", \"lines\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.node.children && ctx_r1.node.children.length === 1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.node.children && ctx_r1.node.children.length > 1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r1.getChildStyle(ctx_r1.node))(\"@childState\", \"in\");\n    i0.ɵɵattribute(\"data-pc-section\", \"nodes\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.node.children);\n  }\n}\nconst _c4 = [\"togglericon\"];\nconst _c5 = a0 => ({\n  \"p-organizationchart p-component\": true,\n  \"p-organizationchart-preservespace\": a0\n});\nfunction OrganizationChart_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"table\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"collapsible\", ctx_r0.collapsible)(\"node\", ctx_r0.root);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-organizationchart-table {\n    border-spacing: 0;\n    border-collapse: separate;\n    margin: 0 auto;\n}\n\n.p-organizationchart-table > tbody > tr > td {\n    text-align: center;\n    vertical-align: top;\n    padding: 0 ${dt('organizationchart.gutter')};\n}\n\n.p-organizationchart-node {\n    display: inline-block;\n    position: relative;\n    border: 1px solid ${dt('organizationchart.node.border.color')};\n    background: ${dt('organizationchart.node.background')};\n    color: ${dt('organizationchart.node.color')};\n    padding: ${dt('organizationchart.node.padding')};\n    border-radius: ${dt('organizationchart.node.border.radius')};\n    transition: background ${dt('organizationchart.transition.duration')}, border-color ${dt('organizationchart.transition.duration')}, color ${dt('organizationchart.transition.duration')}, box-shadow ${dt('organizationchart.transition.duration')};\n}\n\n.p-organizationchart-node:has(.p-organizationchart-node-toggle-button) {\n    padding: ${dt('organizationchart.node.toggleable.padding')};\n}\n\n.p-organizationchart-node.p-organizationchart-node-selectable:not(.p-organizationchart-node-selected):hover {\n    background: ${dt('organizationchart.node.hover.background')};\n    color: ${dt('organizationchart.node.hover.color')};\n}\n\n.p-organizationchart-node-selected {\n    background: ${dt('organizationchart.node.selected.background')};\n    color: ${dt('organizationchart.node.selected.color')};\n}\n\n.p-organizationchart-node-toggle-button {\n    position: absolute;\n    inset-block-end: calc(-1 * calc(${dt('organizationchart.node.toggle.button.size')} / 2));\n    margin-inline-start: calc(-1 * calc(${dt('organizationchart.node.toggle.button.size')} / 2));\n    z-index: 2;\n    inset-inline-start: 50%;\n    user-select: none;\n    cursor: pointer;\n    width: ${dt('organizationchart.node.toggle.button.size')};\n    height: ${dt('organizationchart.node.toggle.button.size')};\n    text-decoration: none;\n    background: ${dt('organizationchart.node.toggle.button.background')};\n    color: ${dt('organizationchart.node.toggle.button.color')};\n    border-radius: ${dt('organizationchart.node.toggle.button.border.radius')};\n    border: 1px solid ${dt('organizationchart.node.toggle.button.border.color')};\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    outline-color: transparent;\n    transition: background ${dt('organizationchart.transition.duration')}, color ${dt('organizationchart.transition.duration')}, border-color ${dt('organizationchart.transition.duration')}, outline-color ${dt('organizationchart.transition.duration')}, box-shadow ${dt('organizationchart.transition.duration')};\n}\n\n.p-organizationchart-node-toggle-button:hover {\n    background: ${dt('organizationchart.node.toggle.button.hover.background')};\n    color: ${dt('organizationchart.node.toggle.button.hover.color')};\n}\n\n.p-organizationchart-node-toggle-button:focus-visible {\n    box-shadow: ${dt('breadcrumb.item.focus.ring.shadow')};\n    outline: ${dt('breadcrumb.item.focus.ring.width')} ${dt('breadcrumb.item.focus.ring.style')} ${dt('breadcrumb.item.focus.ring.color')};\n    outline-offset: ${dt('breadcrumb.item.focus.ring.offset')};\n}\n\n.p-organizationchart-node-toggle-button-icon {\n    position: relative;\n    inset-block-start: 1px;\n}\n\n.p-organizationchart-connector-down {\n    margin: 0 auto;\n    height: ${dt('organizationchart.connector.height')};\n    width: 1px;\n    background: ${dt('organizationchart.connector.color')};\n}\n\n.p-organizationchart-connector-right {\n    border-radius: 0;\n}\n\n.p-organizationchart-connector-left {\n    border-radius: 0;\n    border-inline-end: 1px solid ${dt('organizationchart.connector.color')};\n}\n\n.p-organizationchart-connector-top {\n    border-block-start: 1px solid ${dt('organizationchart.connector.color')};\n}\n\n.p-organizationchart-node-selectable {\n    cursor: pointer;\n}\n\n.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-left) {\n    border-inline-end: 0 none;\n}\n\n.p-organizationchart-connectors :nth-last-child(1 of .p-organizationchart-connector-left) {\n    border-start-end-radius: ${dt('organizationchart.connector.border.radius')};\n}\n\n.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-right) {\n    border-inline-start: 1px solid ${dt('organizationchart.connector.color')};\n    border-start-start-radius: ${dt('organizationchart.connector.border.radius')};\n}\n`;\nconst classes = {\n  root: 'p-organizationchart p-component',\n  table: 'p-organizationchart-table',\n  node: ({\n    instance\n  }) => ['p-organizationchart-node', {\n    'p-organizationchart-node-selectable': instance.selectable,\n    'p-organizationchart-node-selected': instance.selected\n  }],\n  nodeToggleButton: 'p-organizationchart-node-toggle-button',\n  nodeToggleButtonIcon: 'p-organizationchart-node-toggle-button-icon',\n  connectors: 'p-organizationchart-connectors',\n  connectorDown: 'p-organizationchart-connector-down',\n  connectorLeft: ({\n    index\n  }) => ['p-organizationchart-connector-left', {\n    'p-organizationchart-connector-top': !(index === 0)\n  }],\n  connectorRight: ({\n    props,\n    index\n  }) => ['p-organizationchart-connector-right', {\n    'p-organizationchart-connector-top': !(index === props.node.children.length - 1)\n  }],\n  nodeChildren: 'p-organizationchart-node-children'\n};\nclass OrganizationChartStyle extends BaseStyle {\n  name = 'organizationchart';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵOrganizationChartStyle_BaseFactory;\n    return function OrganizationChartStyle_Factory(__ngFactoryType__) {\n      return (ɵOrganizationChartStyle_BaseFactory || (ɵOrganizationChartStyle_BaseFactory = i0.ɵɵgetInheritedFactory(OrganizationChartStyle)))(__ngFactoryType__ || OrganizationChartStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OrganizationChartStyle,\n    factory: OrganizationChartStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * OrganizationChart visualizes hierarchical organization data.\n *\n * [Live Demo](https://www.primeng.org/organizationchart)\n *\n * @module organizationchartstyle\n *\n */\nvar OrganizationChartClasses;\n(function (OrganizationChartClasses) {\n  /**\n   * Class name of the root element\n   */\n  OrganizationChartClasses[\"root\"] = \"p-organizationchart\";\n  /**\n   * Class name of the table element\n   */\n  OrganizationChartClasses[\"table\"] = \"p-organizationchart-table\";\n  /**\n   * Class name of the node element\n   */\n  OrganizationChartClasses[\"node\"] = \"p-organizationchart-node\";\n  /**\n   * Class name of the node toggle button element\n   */\n  OrganizationChartClasses[\"nodeToggleButton\"] = \"p-organizationchart-node-toggle-button\";\n  /**\n   * Class name of the node toggle button icon element\n   */\n  OrganizationChartClasses[\"nodeToggleButtonIcon\"] = \"p-organizationchart-node-toggle-button-icon\";\n  /**\n   * Class name of the connectors element\n   */\n  OrganizationChartClasses[\"connectors\"] = \"p-organizationchart-connectors\";\n  /**\n   * Class name of the connector down element\n   */\n  OrganizationChartClasses[\"connectorDown\"] = \"p-organizationchart-connector-down\";\n  /**\n   * Class name of the connector left element\n   */\n  OrganizationChartClasses[\"connectorLeft\"] = \"p-organizationchart-connector-left\";\n  /**\n   * Class name of the connector right element\n   */\n  OrganizationChartClasses[\"connectorRight\"] = \"p-organizationchart-connector-right\";\n  /**\n   * Class name of the node children element\n   */\n  OrganizationChartClasses[\"nodeChildren\"] = \"p-organizationchart-node-children\";\n})(OrganizationChartClasses || (OrganizationChartClasses = {}));\nclass OrganizationChartNode {\n  cd;\n  node;\n  root;\n  first;\n  last;\n  collapsible;\n  chart;\n  subscription;\n  constructor(chart, cd) {\n    this.cd = cd;\n    this.chart = chart;\n    this.subscription = this.chart.selectionSource$.subscribe(() => {\n      this.cd.markForCheck();\n    });\n  }\n  get leaf() {\n    if (this.node) {\n      return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n    }\n  }\n  get colspan() {\n    if (this.node) {\n      return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n    }\n  }\n  getChildStyle(node) {\n    return {\n      visibility: !this.leaf && node.expanded ? 'inherit' : 'hidden'\n    };\n  }\n  onNodeClick(event, node) {\n    this.chart.onNodeClick(event, node);\n  }\n  toggleNode(event, node) {\n    node.expanded = !node.expanded;\n    if (node.expanded) this.chart.onNodeExpand.emit({\n      originalEvent: event,\n      node: this.node\n    });else this.chart.onNodeCollapse.emit({\n      originalEvent: event,\n      node: this.node\n    });\n    event.preventDefault();\n  }\n  isSelected() {\n    return this.chart.isSelected(this.node);\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  static ɵfac = function OrganizationChartNode_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || OrganizationChartNode)(i0.ɵɵdirectiveInject(forwardRef(() => OrganizationChart)), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OrganizationChartNode,\n    selectors: [[\"\", \"pOrganizationChartNode\", \"\"]],\n    inputs: {\n      node: \"node\",\n      root: [2, \"root\", \"root\", booleanAttribute],\n      first: [2, \"first\", \"first\", booleanAttribute],\n      last: [2, \"last\", \"last\", booleanAttribute],\n      collapsible: [2, \"collapsible\", \"collapsible\", booleanAttribute]\n    },\n    attrs: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"click\", \"ngClass\"], [1, \"p-organizationchart-connectors\", 3, \"ngStyle\"], [1, \"p-organizationchart-connector-down\"], [1, \"p-organizationchart-node-children\", 3, \"ngStyle\"], [\"colspan\", \"2\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"tabindex\", \"0\", \"class\", \"p-organizationchart-node-toggle-button\", 3, \"click\", \"keydown.enter\", \"keydown.space\", 4, \"ngIf\"], [\"tabindex\", \"0\", 1, \"p-organizationchart-node-toggle-button\", 3, \"click\", \"keydown.enter\", \"keydown.space\"], [\"class\", \"p-organizationchart-node-toggle-button-icon\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-organizationchart-node-toggle-button-icon\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-organizationchart-connector-left\", 3, \"ngClass\"], [1, \"p-organizationchart-connector-right\", 3, \"ngClass\"], [\"colspan\", \"2\"], [\"pOrganizationChartNode\", \"\", 1, \"p-organizationchart-table\", 3, \"node\", \"collapsible\"]],\n    template: function OrganizationChartNode_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, OrganizationChartNode_tbody_0_Template, 15, 29, \"tbody\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.node);\n      }\n    },\n    dependencies: [OrganizationChartNode, CommonModule, i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, ChevronDownIcon, ChevronUpIcon, SharedModule],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('childState', [state('in', style({\n        opacity: 1\n      })), transition('void => *', [style({\n        opacity: 0\n      }), animate(150)]), transition('* => void', [animate(150, style({\n        opacity: 0\n      }))])])]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartNode, [{\n    type: Component,\n    args: [{\n      selector: '[pOrganizationChartNode]',\n      standalone: true,\n      imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule],\n      template: `\n        <tbody *ngIf=\"node\" [attr.data-pc-section]=\"'body'\">\n            <tr [attr.data-pc-section]=\"'row'\">\n                <td [attr.colspan]=\"colspan\" [attr.data-pc-section]=\"'cell'\">\n                    <div\n                        [class]=\"node.styleClass\"\n                        [ngClass]=\"{\n                            'p-organizationchart-node': true,\n                            'p-organizationchart-node-selectable': chart.selectionMode && node.selectable !== false,\n                            'p-organizationchart-node-selected': isSelected()\n                        }\"\n                        (click)=\"onNodeClick($event, node)\"\n                        [attr.data-pc-section]=\"'node'\"\n                    >\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{ node.label }}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: { $implicit: node }\"></ng-container>\n                        </div>\n                        <ng-container *ngIf=\"collapsible\">\n                            <a\n                                *ngIf=\"!leaf\"\n                                tabindex=\"0\"\n                                class=\"p-organizationchart-node-toggle-button\"\n                                (click)=\"toggleNode($event, node)\"\n                                (keydown.enter)=\"toggleNode($event, node)\"\n                                (keydown.space)=\"toggleNode($event, node)\"\n                                [attr.data-pc-section]=\"'nodeToggler'\"\n                            >\n                                <ng-container *ngIf=\"!chart.togglerIconTemplate && !chart._togglerIconTemplate\">\n                                    <ChevronDownIcon *ngIf=\"node.expanded\" [styleClass]=\"'p-organizationchart-node-toggle-button-icon'\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                    <ChevronUpIcon *ngIf=\"!node.expanded\" [styleClass]=\"'p-organizationchart-node-toggle-button-icon'\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                </ng-container>\n                                <span class=\"p-organizationchart-node-toggle-button-icon\" *ngIf=\"chart.togglerIconTemplate || chart._togglerIconTemplate\" [attr.data-pc-section]=\"'nodeTogglerIcon'\">\n                                    <ng-template *ngTemplateOutlet=\"chart.togglerIconTemplate || chart._togglerIconTemplate; context: { $implicit: node.expanded }\"></ng-template>\n                                </span>\n                            </a>\n                        </ng-container>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-connectors\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                    <div [attr.data-pc-section]=\"'lineDown'\" class=\"p-organizationchart-connector-down\"></div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-connectors\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                        <div [attr.data-pc-section]=\"'lineDown'\" class=\"p-organizationchart-connector-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td [attr.data-pc-section]=\"'lineLeft'\" class=\"p-organizationchart-connector-left\" [ngClass]=\"{ 'p-organizationchart-connector-top': !first }\">&nbsp;</td>\n                        <td [attr.data-pc-section]=\"'lineRight'\" class=\"p-organizationchart-connector-right\" [ngClass]=\"{ 'p-organizationchart-connector-top': !last }\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-node-children\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'nodes'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\" [attr.data-pc-section]=\"'nodeCell'\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\" [collapsible]=\"node.children && node.children.length > 0 && collapsible\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `,\n      animations: [trigger('childState', [state('in', style({\n        opacity: 1\n      })), transition('void => *', [style({\n        opacity: 0\n      }), animate(150)]), transition('* => void', [animate(150, style({\n        opacity: 0\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default\n    }]\n  }], () => [{\n    type: OrganizationChart,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(() => OrganizationChart)]\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    node: [{\n      type: Input\n    }],\n    root: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    first: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    last: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    collapsible: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/**\n * OrganizationChart visualizes hierarchical organization data.\n * @group Components\n */\nclass OrganizationChart extends BaseComponent {\n  el;\n  cd;\n  /**\n   * An array of nested TreeNodes.\n   * @group Props\n   */\n  value;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Defines the selection mode.\n   * @group Props\n   */\n  selectionMode;\n  /**\n   * Whether the nodes can be expanded or toggled.\n   * @group Props\n   */\n  collapsible;\n  /**\n   * Whether the space allocated by a node is preserved when hidden.\n   * @group Props\n   */\n  preserveSpace = true;\n  /**\n   * A single treenode instance or an array to refer to the selections.\n   * @group Props\n   */\n  get selection() {\n    return this._selection;\n  }\n  set selection(val) {\n    this._selection = val;\n    if (this.initialized) this.selectionSource.next(null);\n  }\n  /**\n   * Callback to invoke on selection change.\n   * @param {*} any - selected value.\n   * @group Emits\n   */\n  selectionChange = new EventEmitter();\n  /**\n   * Callback to invoke when a node is selected.\n   * @param {OrganizationChartNodeSelectEvent} event - custom node select event.\n   * @group Emits\n   */\n  onNodeSelect = new EventEmitter();\n  /**\n   * Callback to invoke when a node is unselected.\n   * @param {OrganizationChartNodeUnSelectEvent} event - custom node unselect event.\n   * @group Emits\n   */\n  onNodeUnselect = new EventEmitter();\n  /**\n   * Callback to invoke when a node is expanded.\n   * @param {OrganizationChartNodeExpandEvent} event - custom node expand event.\n   * @group Emits\n   */\n  onNodeExpand = new EventEmitter();\n  /**\n   * Callback to invoke when a node is collapsed.\n   * @param {OrganizationChartNodeCollapseEvent} event - custom node collapse event.\n   * @group Emits\n   */\n  onNodeCollapse = new EventEmitter();\n  templates;\n  togglerIconTemplate;\n  templateMap;\n  _togglerIconTemplate;\n  selectionSource = new Subject();\n  _selection;\n  initialized;\n  selectionSource$ = this.selectionSource.asObservable();\n  _componentStyle = inject(OrganizationChartStyle);\n  constructor(el, cd) {\n    super();\n    this.el = el;\n    this.cd = cd;\n  }\n  get root() {\n    return this.value && this.value.length ? this.value[0] : null;\n  }\n  ngAfterContentInit() {\n    if (this.templates.length) {\n      this.templateMap = {};\n    }\n    this.templates.forEach(item => {\n      if (item.getType() === 'togglericon') {\n        this._togglerIconTemplate = item.template;\n      } else {\n        this.templateMap[item.getType()] = item.template;\n      }\n    });\n    this.initialized = true;\n  }\n  getTemplateForNode(node) {\n    if (this.templateMap) return node.type ? this.templateMap[node.type] : this.templateMap['default'];else return null;\n  }\n  onNodeClick(event, node) {\n    let eventTarget = event.target;\n    if (eventTarget.className && (hasClass(eventTarget, 'p-organizationchart-node-toggle-button') || hasClass(eventTarget, 'p-organizationchart-node-toggle-button-icon'))) {\n      return;\n    } else if (this.selectionMode) {\n      if (node.selectable === false) {\n        return;\n      }\n      let index = this.findIndexInSelection(node);\n      let selected = index >= 0;\n      if (this.selectionMode === 'single') {\n        if (selected) {\n          this.selection = null;\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = node;\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      } else if (this.selectionMode === 'multiple') {\n        if (selected) {\n          this.selection = this.selection.filter((val, i) => i != index);\n          this.onNodeUnselect.emit({\n            originalEvent: event,\n            node: node\n          });\n        } else {\n          this.selection = [...(this.selection || []), node];\n          this.onNodeSelect.emit({\n            originalEvent: event,\n            node: node\n          });\n        }\n      }\n      this.selectionChange.emit(this.selection);\n      this.selectionSource.next(null);\n    }\n  }\n  findIndexInSelection(node) {\n    let index = -1;\n    if (this.selectionMode && this.selection) {\n      if (this.selectionMode === 'single') {\n        index = this.selection == node ? 0 : -1;\n      } else if (this.selectionMode === 'multiple') {\n        for (let i = 0; i < this.selection.length; i++) {\n          if (this.selection[i] == node) {\n            index = i;\n            break;\n          }\n        }\n      }\n    }\n    return index;\n  }\n  isSelected(node) {\n    return this.findIndexInSelection(node) != -1;\n  }\n  static ɵfac = function OrganizationChart_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || OrganizationChart)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: OrganizationChart,\n    selectors: [[\"p-organizationChart\"], [\"p-organization-chart\"], [\"p-organizationchart\"]],\n    contentQueries: function OrganizationChart_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c4, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.togglerIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    inputs: {\n      value: \"value\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      selectionMode: \"selectionMode\",\n      collapsible: [2, \"collapsible\", \"collapsible\", booleanAttribute],\n      preserveSpace: [2, \"preserveSpace\", \"preserveSpace\", booleanAttribute],\n      selection: \"selection\"\n    },\n    outputs: {\n      selectionChange: \"selectionChange\",\n      onNodeSelect: \"onNodeSelect\",\n      onNodeUnselect: \"onNodeUnselect\",\n      onNodeExpand: \"onNodeExpand\",\n      onNodeCollapse: \"onNodeCollapse\"\n    },\n    features: [i0.ɵɵProvidersFeature([OrganizationChartStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 8,\n    consts: [[3, \"ngStyle\", \"ngClass\"], [\"class\", \"p-organizationchart-table\", \"pOrganizationChartNode\", \"\", 3, \"collapsible\", \"node\", 4, \"ngIf\"], [\"pOrganizationChartNode\", \"\", 1, \"p-organizationchart-table\", 3, \"collapsible\", \"node\"]],\n    template: function OrganizationChart_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, OrganizationChart_table_1_Template, 1, 2, \"table\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction1(6, _c5, ctx.preserveSpace));\n        i0.ɵɵattribute(\"data-pc-section\", \"root\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.root);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgStyle, OrganizationChartNode, SharedModule],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChart, [{\n    type: Component,\n    args: [{\n      selector: 'p-organizationChart, p-organization-chart, p-organizationchart',\n      standalone: true,\n      imports: [CommonModule, OrganizationChartNode, SharedModule],\n      template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{ 'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace }\" [attr.data-pc-section]=\"'root'\">\n            <table class=\"p-organizationchart-table\" [collapsible]=\"collapsible\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [OrganizationChartStyle]\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    value: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    collapsible: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    preserveSpace: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selection: [{\n      type: Input\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    onNodeSelect: [{\n      type: Output\n    }],\n    onNodeUnselect: [{\n      type: Output\n    }],\n    onNodeExpand: [{\n      type: Output\n    }],\n    onNodeCollapse: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    togglerIconTemplate: [{\n      type: ContentChild,\n      args: ['togglericon', {\n        descendants: false\n      }]\n    }]\n  });\n})();\nclass OrganizationChartModule {\n  static ɵfac = function OrganizationChartModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || OrganizationChartModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: OrganizationChartModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [OrganizationChart, OrganizationChartNode, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OrganizationChart, OrganizationChartNode, SharedModule],\n      exports: [OrganizationChart, OrganizationChartNode, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrganizationChart, OrganizationChartClasses, OrganizationChartModule, OrganizationChartNode, OrganizationChartStyle };","map":{"version":3,"names":["trigger","state","transition","style","animate","i1","CommonModule","i0","Injectable","forwardRef","booleanAttribute","Input","Inject","ChangeDetectionStrategy","ViewEncapsulation","Component","EventEmitter","inject","ContentChild","ContentChildren","Output","NgModule","hasClass","SharedModule","PrimeTemplate","BaseComponent","ChevronDownIcon","ChevronUpIcon","Subject","BaseStyle","_c0","_c1","a0","a1","_c2","$implicit","_c3","OrganizationChartNode_tbody_0_div_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","node","label","OrganizationChartNode_tbody_0_div_5_ng_container_1_Template","ɵɵelementContainer","OrganizationChartNode_tbody_0_div_5_Template","ɵɵtemplate","ɵɵproperty","chart","getTemplateForNode","ɵɵpureFunction1","OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_ChevronDownIcon_1_Template","ɵɵelement","ɵɵattribute","OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_ChevronUpIcon_2_Template","OrganizationChartNode_tbody_0_ng_container_6_a_1_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","expanded","OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_ng_template_0_Template","OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_1_Template","OrganizationChartNode_tbody_0_ng_container_6_a_1_span_2_Template","togglerIconTemplate","_togglerIconTemplate","OrganizationChartNode_tbody_0_ng_container_6_a_1_Template","_r3","ɵɵgetCurrentView","ɵɵlistener","OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_click_0_listener","$event","ɵɵrestoreView","ɵɵresetView","toggleNode","OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_keydown_enter_0_listener","OrganizationChartNode_tbody_0_ng_container_6_a_1_Template_a_keydown_space_0_listener","OrganizationChartNode_tbody_0_ng_container_6_Template","leaf","OrganizationChartNode_tbody_0_ng_container_11_Template","colspan","OrganizationChartNode_tbody_0_ng_container_12_ng_template_1_Template","first_r4","first","last_r5","last","OrganizationChartNode_tbody_0_ng_container_12_Template","children","OrganizationChartNode_tbody_0_td_14_Template","child_r6","length","collapsible","OrganizationChartNode_tbody_0_Template","_r1","OrganizationChartNode_tbody_0_Template_div_click_3_listener","onNodeClick","ɵɵclassMap","styleClass","ɵɵpureFunction2","selectionMode","selectable","isSelected","getChildStyle","_c4","_c5","OrganizationChart_table_1_Template","ctx_r0","root","theme","dt","classes","table","instance","selected","nodeToggleButton","nodeToggleButtonIcon","connectors","connectorDown","connectorLeft","index","connectorRight","props","nodeChildren","OrganizationChartStyle","name","ɵfac","ɵOrganizationChartStyle_BaseFactory","OrganizationChartStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","OrganizationChartClasses","OrganizationChartNode","cd","subscription","constructor","selectionSource$","subscribe","markForCheck","visibility","event","onNodeExpand","emit","originalEvent","onNodeCollapse","preventDefault","ngOnDestroy","unsubscribe","OrganizationChartNode_Factory","ɵɵdirectiveInject","OrganizationChart","ChangeDetectorRef","ɵcmp","ɵɵdefineComponent","selectors","inputs","attrs","decls","vars","consts","template","OrganizationChartNode_Template","dependencies","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","encapsulation","data","animation","opacity","args","selector","standalone","imports","animations","None","changeDetection","Default","decorators","transform","el","value","preserveSpace","selection","_selection","val","initialized","selectionSource","next","selectionChange","onNodeSelect","onNodeUnselect","templates","templateMap","asObservable","_componentStyle","ngAfterContentInit","forEach","item","getType","eventTarget","target","className","findIndexInSelection","filter","i","OrganizationChart_Factory","ElementRef","contentQueries","OrganizationChart_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","outputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","OrganizationChart_Template","providers","descendants","OrganizationChartModule","OrganizationChartModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-organizationchart.mjs"],"sourcesContent":["import { trigger, state, transition, style, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, forwardRef, booleanAttribute, Input, Inject, ChangeDetectionStrategy, ViewEncapsulation, Component, EventEmitter, inject, ContentChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport { hasClass } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ChevronDownIcon, ChevronUpIcon } from 'primeng/icons';\nimport { Subject } from 'rxjs';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-organizationchart-table {\n    border-spacing: 0;\n    border-collapse: separate;\n    margin: 0 auto;\n}\n\n.p-organizationchart-table > tbody > tr > td {\n    text-align: center;\n    vertical-align: top;\n    padding: 0 ${dt('organizationchart.gutter')};\n}\n\n.p-organizationchart-node {\n    display: inline-block;\n    position: relative;\n    border: 1px solid ${dt('organizationchart.node.border.color')};\n    background: ${dt('organizationchart.node.background')};\n    color: ${dt('organizationchart.node.color')};\n    padding: ${dt('organizationchart.node.padding')};\n    border-radius: ${dt('organizationchart.node.border.radius')};\n    transition: background ${dt('organizationchart.transition.duration')}, border-color ${dt('organizationchart.transition.duration')}, color ${dt('organizationchart.transition.duration')}, box-shadow ${dt('organizationchart.transition.duration')};\n}\n\n.p-organizationchart-node:has(.p-organizationchart-node-toggle-button) {\n    padding: ${dt('organizationchart.node.toggleable.padding')};\n}\n\n.p-organizationchart-node.p-organizationchart-node-selectable:not(.p-organizationchart-node-selected):hover {\n    background: ${dt('organizationchart.node.hover.background')};\n    color: ${dt('organizationchart.node.hover.color')};\n}\n\n.p-organizationchart-node-selected {\n    background: ${dt('organizationchart.node.selected.background')};\n    color: ${dt('organizationchart.node.selected.color')};\n}\n\n.p-organizationchart-node-toggle-button {\n    position: absolute;\n    inset-block-end: calc(-1 * calc(${dt('organizationchart.node.toggle.button.size')} / 2));\n    margin-inline-start: calc(-1 * calc(${dt('organizationchart.node.toggle.button.size')} / 2));\n    z-index: 2;\n    inset-inline-start: 50%;\n    user-select: none;\n    cursor: pointer;\n    width: ${dt('organizationchart.node.toggle.button.size')};\n    height: ${dt('organizationchart.node.toggle.button.size')};\n    text-decoration: none;\n    background: ${dt('organizationchart.node.toggle.button.background')};\n    color: ${dt('organizationchart.node.toggle.button.color')};\n    border-radius: ${dt('organizationchart.node.toggle.button.border.radius')};\n    border: 1px solid ${dt('organizationchart.node.toggle.button.border.color')};\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    outline-color: transparent;\n    transition: background ${dt('organizationchart.transition.duration')}, color ${dt('organizationchart.transition.duration')}, border-color ${dt('organizationchart.transition.duration')}, outline-color ${dt('organizationchart.transition.duration')}, box-shadow ${dt('organizationchart.transition.duration')};\n}\n\n.p-organizationchart-node-toggle-button:hover {\n    background: ${dt('organizationchart.node.toggle.button.hover.background')};\n    color: ${dt('organizationchart.node.toggle.button.hover.color')};\n}\n\n.p-organizationchart-node-toggle-button:focus-visible {\n    box-shadow: ${dt('breadcrumb.item.focus.ring.shadow')};\n    outline: ${dt('breadcrumb.item.focus.ring.width')} ${dt('breadcrumb.item.focus.ring.style')} ${dt('breadcrumb.item.focus.ring.color')};\n    outline-offset: ${dt('breadcrumb.item.focus.ring.offset')};\n}\n\n.p-organizationchart-node-toggle-button-icon {\n    position: relative;\n    inset-block-start: 1px;\n}\n\n.p-organizationchart-connector-down {\n    margin: 0 auto;\n    height: ${dt('organizationchart.connector.height')};\n    width: 1px;\n    background: ${dt('organizationchart.connector.color')};\n}\n\n.p-organizationchart-connector-right {\n    border-radius: 0;\n}\n\n.p-organizationchart-connector-left {\n    border-radius: 0;\n    border-inline-end: 1px solid ${dt('organizationchart.connector.color')};\n}\n\n.p-organizationchart-connector-top {\n    border-block-start: 1px solid ${dt('organizationchart.connector.color')};\n}\n\n.p-organizationchart-node-selectable {\n    cursor: pointer;\n}\n\n.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-left) {\n    border-inline-end: 0 none;\n}\n\n.p-organizationchart-connectors :nth-last-child(1 of .p-organizationchart-connector-left) {\n    border-start-end-radius: ${dt('organizationchart.connector.border.radius')};\n}\n\n.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-right) {\n    border-inline-start: 1px solid ${dt('organizationchart.connector.color')};\n    border-start-start-radius: ${dt('organizationchart.connector.border.radius')};\n}\n`;\nconst classes = {\n    root: 'p-organizationchart p-component',\n    table: 'p-organizationchart-table',\n    node: ({ instance }) => ['p-organizationchart-node', { 'p-organizationchart-node-selectable': instance.selectable, 'p-organizationchart-node-selected': instance.selected }],\n    nodeToggleButton: 'p-organizationchart-node-toggle-button',\n    nodeToggleButtonIcon: 'p-organizationchart-node-toggle-button-icon',\n    connectors: 'p-organizationchart-connectors',\n    connectorDown: 'p-organizationchart-connector-down',\n    connectorLeft: ({ index }) => ['p-organizationchart-connector-left', { 'p-organizationchart-connector-top': !(index === 0) }],\n    connectorRight: ({ props, index }) => ['p-organizationchart-connector-right', { 'p-organizationchart-connector-top': !(index === props.node.children.length - 1) }],\n    nodeChildren: 'p-organizationchart-node-children'\n};\nclass OrganizationChartStyle extends BaseStyle {\n    name = 'organizationchart';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * OrganizationChart visualizes hierarchical organization data.\n *\n * [Live Demo](https://www.primeng.org/organizationchart)\n *\n * @module organizationchartstyle\n *\n */\nvar OrganizationChartClasses;\n(function (OrganizationChartClasses) {\n    /**\n     * Class name of the root element\n     */\n    OrganizationChartClasses[\"root\"] = \"p-organizationchart\";\n    /**\n     * Class name of the table element\n     */\n    OrganizationChartClasses[\"table\"] = \"p-organizationchart-table\";\n    /**\n     * Class name of the node element\n     */\n    OrganizationChartClasses[\"node\"] = \"p-organizationchart-node\";\n    /**\n     * Class name of the node toggle button element\n     */\n    OrganizationChartClasses[\"nodeToggleButton\"] = \"p-organizationchart-node-toggle-button\";\n    /**\n     * Class name of the node toggle button icon element\n     */\n    OrganizationChartClasses[\"nodeToggleButtonIcon\"] = \"p-organizationchart-node-toggle-button-icon\";\n    /**\n     * Class name of the connectors element\n     */\n    OrganizationChartClasses[\"connectors\"] = \"p-organizationchart-connectors\";\n    /**\n     * Class name of the connector down element\n     */\n    OrganizationChartClasses[\"connectorDown\"] = \"p-organizationchart-connector-down\";\n    /**\n     * Class name of the connector left element\n     */\n    OrganizationChartClasses[\"connectorLeft\"] = \"p-organizationchart-connector-left\";\n    /**\n     * Class name of the connector right element\n     */\n    OrganizationChartClasses[\"connectorRight\"] = \"p-organizationchart-connector-right\";\n    /**\n     * Class name of the node children element\n     */\n    OrganizationChartClasses[\"nodeChildren\"] = \"p-organizationchart-node-children\";\n})(OrganizationChartClasses || (OrganizationChartClasses = {}));\n\nclass OrganizationChartNode {\n    cd;\n    node;\n    root;\n    first;\n    last;\n    collapsible;\n    chart;\n    subscription;\n    constructor(chart, cd) {\n        this.cd = cd;\n        this.chart = chart;\n        this.subscription = this.chart.selectionSource$.subscribe(() => {\n            this.cd.markForCheck();\n        });\n    }\n    get leaf() {\n        if (this.node) {\n            return this.node.leaf == false ? false : !(this.node.children && this.node.children.length);\n        }\n    }\n    get colspan() {\n        if (this.node) {\n            return this.node.children && this.node.children.length ? this.node.children.length * 2 : null;\n        }\n    }\n    getChildStyle(node) {\n        return {\n            visibility: !this.leaf && node.expanded ? 'inherit' : 'hidden'\n        };\n    }\n    onNodeClick(event, node) {\n        this.chart.onNodeClick(event, node);\n    }\n    toggleNode(event, node) {\n        node.expanded = !node.expanded;\n        if (node.expanded)\n            this.chart.onNodeExpand.emit({ originalEvent: event, node: this.node });\n        else\n            this.chart.onNodeCollapse.emit({ originalEvent: event, node: this.node });\n        event.preventDefault();\n    }\n    isSelected() {\n        return this.chart.isSelected(this.node);\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartNode, deps: [{ token: forwardRef(() => OrganizationChart) }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: OrganizationChartNode, isStandalone: true, selector: \"[pOrganizationChartNode]\", inputs: { node: \"node\", root: [\"root\", \"root\", booleanAttribute], first: [\"first\", \"first\", booleanAttribute], last: [\"last\", \"last\", booleanAttribute], collapsible: [\"collapsible\", \"collapsible\", booleanAttribute] }, ngImport: i0, template: `\n        <tbody *ngIf=\"node\" [attr.data-pc-section]=\"'body'\">\n            <tr [attr.data-pc-section]=\"'row'\">\n                <td [attr.colspan]=\"colspan\" [attr.data-pc-section]=\"'cell'\">\n                    <div\n                        [class]=\"node.styleClass\"\n                        [ngClass]=\"{\n                            'p-organizationchart-node': true,\n                            'p-organizationchart-node-selectable': chart.selectionMode && node.selectable !== false,\n                            'p-organizationchart-node-selected': isSelected()\n                        }\"\n                        (click)=\"onNodeClick($event, node)\"\n                        [attr.data-pc-section]=\"'node'\"\n                    >\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{ node.label }}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: { $implicit: node }\"></ng-container>\n                        </div>\n                        <ng-container *ngIf=\"collapsible\">\n                            <a\n                                *ngIf=\"!leaf\"\n                                tabindex=\"0\"\n                                class=\"p-organizationchart-node-toggle-button\"\n                                (click)=\"toggleNode($event, node)\"\n                                (keydown.enter)=\"toggleNode($event, node)\"\n                                (keydown.space)=\"toggleNode($event, node)\"\n                                [attr.data-pc-section]=\"'nodeToggler'\"\n                            >\n                                <ng-container *ngIf=\"!chart.togglerIconTemplate && !chart._togglerIconTemplate\">\n                                    <ChevronDownIcon *ngIf=\"node.expanded\" [styleClass]=\"'p-organizationchart-node-toggle-button-icon'\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                    <ChevronUpIcon *ngIf=\"!node.expanded\" [styleClass]=\"'p-organizationchart-node-toggle-button-icon'\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                </ng-container>\n                                <span class=\"p-organizationchart-node-toggle-button-icon\" *ngIf=\"chart.togglerIconTemplate || chart._togglerIconTemplate\" [attr.data-pc-section]=\"'nodeTogglerIcon'\">\n                                    <ng-template *ngTemplateOutlet=\"chart.togglerIconTemplate || chart._togglerIconTemplate; context: { $implicit: node.expanded }\"></ng-template>\n                                </span>\n                            </a>\n                        </ng-container>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-connectors\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                    <div [attr.data-pc-section]=\"'lineDown'\" class=\"p-organizationchart-connector-down\"></div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-connectors\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                        <div [attr.data-pc-section]=\"'lineDown'\" class=\"p-organizationchart-connector-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td [attr.data-pc-section]=\"'lineLeft'\" class=\"p-organizationchart-connector-left\" [ngClass]=\"{ 'p-organizationchart-connector-top': !first }\">&nbsp;</td>\n                        <td [attr.data-pc-section]=\"'lineRight'\" class=\"p-organizationchart-connector-right\" [ngClass]=\"{ 'p-organizationchart-connector-top': !last }\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-node-children\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'nodes'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\" [attr.data-pc-section]=\"'nodeCell'\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\" [collapsible]=\"node.children && node.children.length > 0 && collapsible\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `, isInline: true, dependencies: [{ kind: \"component\", type: OrganizationChartNode, selector: \"[pOrganizationChartNode]\", inputs: [\"node\", \"root\", \"first\", \"last\", \"collapsible\"] }, { kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: ChevronDownIcon, selector: \"ChevronDownIcon\" }, { kind: \"component\", type: ChevronUpIcon, selector: \"ChevronUpIcon\" }, { kind: \"ngmodule\", type: SharedModule }], animations: [trigger('childState', [state('in', style({ opacity: 1 })), transition('void => *', [style({ opacity: 0 }), animate(150)]), transition('* => void', [animate(150, style({ opacity: 0 }))])])], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartNode, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pOrganizationChartNode]',\n                    standalone: true,\n                    imports: [CommonModule, ChevronDownIcon, ChevronUpIcon, SharedModule],\n                    template: `\n        <tbody *ngIf=\"node\" [attr.data-pc-section]=\"'body'\">\n            <tr [attr.data-pc-section]=\"'row'\">\n                <td [attr.colspan]=\"colspan\" [attr.data-pc-section]=\"'cell'\">\n                    <div\n                        [class]=\"node.styleClass\"\n                        [ngClass]=\"{\n                            'p-organizationchart-node': true,\n                            'p-organizationchart-node-selectable': chart.selectionMode && node.selectable !== false,\n                            'p-organizationchart-node-selected': isSelected()\n                        }\"\n                        (click)=\"onNodeClick($event, node)\"\n                        [attr.data-pc-section]=\"'node'\"\n                    >\n                        <div *ngIf=\"!chart.getTemplateForNode(node)\">{{ node.label }}</div>\n                        <div *ngIf=\"chart.getTemplateForNode(node)\">\n                            <ng-container *ngTemplateOutlet=\"chart.getTemplateForNode(node); context: { $implicit: node }\"></ng-container>\n                        </div>\n                        <ng-container *ngIf=\"collapsible\">\n                            <a\n                                *ngIf=\"!leaf\"\n                                tabindex=\"0\"\n                                class=\"p-organizationchart-node-toggle-button\"\n                                (click)=\"toggleNode($event, node)\"\n                                (keydown.enter)=\"toggleNode($event, node)\"\n                                (keydown.space)=\"toggleNode($event, node)\"\n                                [attr.data-pc-section]=\"'nodeToggler'\"\n                            >\n                                <ng-container *ngIf=\"!chart.togglerIconTemplate && !chart._togglerIconTemplate\">\n                                    <ChevronDownIcon *ngIf=\"node.expanded\" [styleClass]=\"'p-organizationchart-node-toggle-button-icon'\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                    <ChevronUpIcon *ngIf=\"!node.expanded\" [styleClass]=\"'p-organizationchart-node-toggle-button-icon'\" [attr.data-pc-section]=\"'nodeTogglerIcon'\" />\n                                </ng-container>\n                                <span class=\"p-organizationchart-node-toggle-button-icon\" *ngIf=\"chart.togglerIconTemplate || chart._togglerIconTemplate\" [attr.data-pc-section]=\"'nodeTogglerIcon'\">\n                                    <ng-template *ngTemplateOutlet=\"chart.togglerIconTemplate || chart._togglerIconTemplate; context: { $implicit: node.expanded }\"></ng-template>\n                                </span>\n                            </a>\n                        </ng-container>\n                    </div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-connectors\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                    <div [attr.data-pc-section]=\"'lineDown'\" class=\"p-organizationchart-connector-down\"></div>\n                </td>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-connectors\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'lines'\">\n                <ng-container *ngIf=\"node.children && node.children.length === 1\">\n                    <td [attr.data-pc-section]=\"'lineCell'\" [attr.colspan]=\"colspan\">\n                        <div [attr.data-pc-section]=\"'lineDown'\" class=\"p-organizationchart-connector-down\"></div>\n                    </td>\n                </ng-container>\n                <ng-container *ngIf=\"node.children && node.children.length > 1\">\n                    <ng-template ngFor let-child [ngForOf]=\"node.children\" let-first=\"first\" let-last=\"last\">\n                        <td [attr.data-pc-section]=\"'lineLeft'\" class=\"p-organizationchart-connector-left\" [ngClass]=\"{ 'p-organizationchart-connector-top': !first }\">&nbsp;</td>\n                        <td [attr.data-pc-section]=\"'lineRight'\" class=\"p-organizationchart-connector-right\" [ngClass]=\"{ 'p-organizationchart-connector-top': !last }\">&nbsp;</td>\n                    </ng-template>\n                </ng-container>\n            </tr>\n            <tr [ngStyle]=\"getChildStyle(node)\" class=\"p-organizationchart-node-children\" [@childState]=\"'in'\" [attr.data-pc-section]=\"'nodes'\">\n                <td *ngFor=\"let child of node.children\" colspan=\"2\" [attr.data-pc-section]=\"'nodeCell'\">\n                    <table class=\"p-organizationchart-table\" pOrganizationChartNode [node]=\"child\" [collapsible]=\"node.children && node.children.length > 0 && collapsible\"></table>\n                </td>\n            </tr>\n        </tbody>\n    `,\n                    animations: [trigger('childState', [state('in', style({ opacity: 1 })), transition('void => *', [style({ opacity: 0 }), animate(150)]), transition('* => void', [animate(150, style({ opacity: 0 }))])])],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.Default\n                }]\n        }], ctorParameters: () => [{ type: OrganizationChart, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => OrganizationChart)]\n                }] }, { type: i0.ChangeDetectorRef }], propDecorators: { node: [{\n                type: Input\n            }], root: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], first: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], last: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], collapsible: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * OrganizationChart visualizes hierarchical organization data.\n * @group Components\n */\nclass OrganizationChart extends BaseComponent {\n    el;\n    cd;\n    /**\n     * An array of nested TreeNodes.\n     * @group Props\n     */\n    value;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Defines the selection mode.\n     * @group Props\n     */\n    selectionMode;\n    /**\n     * Whether the nodes can be expanded or toggled.\n     * @group Props\n     */\n    collapsible;\n    /**\n     * Whether the space allocated by a node is preserved when hidden.\n     * @group Props\n     */\n    preserveSpace = true;\n    /**\n     * A single treenode instance or an array to refer to the selections.\n     * @group Props\n     */\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n        if (this.initialized)\n            this.selectionSource.next(null);\n    }\n    /**\n     * Callback to invoke on selection change.\n     * @param {*} any - selected value.\n     * @group Emits\n     */\n    selectionChange = new EventEmitter();\n    /**\n     * Callback to invoke when a node is selected.\n     * @param {OrganizationChartNodeSelectEvent} event - custom node select event.\n     * @group Emits\n     */\n    onNodeSelect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is unselected.\n     * @param {OrganizationChartNodeUnSelectEvent} event - custom node unselect event.\n     * @group Emits\n     */\n    onNodeUnselect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is expanded.\n     * @param {OrganizationChartNodeExpandEvent} event - custom node expand event.\n     * @group Emits\n     */\n    onNodeExpand = new EventEmitter();\n    /**\n     * Callback to invoke when a node is collapsed.\n     * @param {OrganizationChartNodeCollapseEvent} event - custom node collapse event.\n     * @group Emits\n     */\n    onNodeCollapse = new EventEmitter();\n    templates;\n    togglerIconTemplate;\n    templateMap;\n    _togglerIconTemplate;\n    selectionSource = new Subject();\n    _selection;\n    initialized;\n    selectionSource$ = this.selectionSource.asObservable();\n    _componentStyle = inject(OrganizationChartStyle);\n    constructor(el, cd) {\n        super();\n        this.el = el;\n        this.cd = cd;\n    }\n    get root() {\n        return this.value && this.value.length ? this.value[0] : null;\n    }\n    ngAfterContentInit() {\n        if (this.templates.length) {\n            this.templateMap = {};\n        }\n        this.templates.forEach((item) => {\n            if (item.getType() === 'togglericon') {\n                this._togglerIconTemplate = item.template;\n            }\n            else {\n                this.templateMap[item.getType()] = item.template;\n            }\n        });\n        this.initialized = true;\n    }\n    getTemplateForNode(node) {\n        if (this.templateMap)\n            return node.type ? this.templateMap[node.type] : this.templateMap['default'];\n        else\n            return null;\n    }\n    onNodeClick(event, node) {\n        let eventTarget = event.target;\n        if (eventTarget.className && (hasClass(eventTarget, 'p-organizationchart-node-toggle-button') || hasClass(eventTarget, 'p-organizationchart-node-toggle-button-icon'))) {\n            return;\n        }\n        else if (this.selectionMode) {\n            if (node.selectable === false) {\n                return;\n            }\n            let index = this.findIndexInSelection(node);\n            let selected = index >= 0;\n            if (this.selectionMode === 'single') {\n                if (selected) {\n                    this.selection = null;\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = node;\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            else if (this.selectionMode === 'multiple') {\n                if (selected) {\n                    this.selection = this.selection.filter((val, i) => i != index);\n                    this.onNodeUnselect.emit({ originalEvent: event, node: node });\n                }\n                else {\n                    this.selection = [...(this.selection || []), node];\n                    this.onNodeSelect.emit({ originalEvent: event, node: node });\n                }\n            }\n            this.selectionChange.emit(this.selection);\n            this.selectionSource.next(null);\n        }\n    }\n    findIndexInSelection(node) {\n        let index = -1;\n        if (this.selectionMode && this.selection) {\n            if (this.selectionMode === 'single') {\n                index = this.selection == node ? 0 : -1;\n            }\n            else if (this.selectionMode === 'multiple') {\n                for (let i = 0; i < this.selection.length; i++) {\n                    if (this.selection[i] == node) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n        }\n        return index;\n    }\n    isSelected(node) {\n        return this.findIndexInSelection(node) != -1;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChart, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: OrganizationChart, isStandalone: true, selector: \"p-organizationChart, p-organization-chart, p-organizationchart\", inputs: { value: \"value\", style: \"style\", styleClass: \"styleClass\", selectionMode: \"selectionMode\", collapsible: [\"collapsible\", \"collapsible\", booleanAttribute], preserveSpace: [\"preserveSpace\", \"preserveSpace\", booleanAttribute], selection: \"selection\" }, outputs: { selectionChange: \"selectionChange\", onNodeSelect: \"onNodeSelect\", onNodeUnselect: \"onNodeUnselect\", onNodeExpand: \"onNodeExpand\", onNodeCollapse: \"onNodeCollapse\" }, providers: [OrganizationChartStyle], queries: [{ propertyName: \"togglerIconTemplate\", first: true, predicate: [\"togglericon\"] }, { propertyName: \"templates\", predicate: PrimeTemplate }], usesInheritance: true, ngImport: i0, template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{ 'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace }\" [attr.data-pc-section]=\"'root'\">\n            <table class=\"p-organizationchart-table\" [collapsible]=\"collapsible\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: OrganizationChartNode, selector: \"[pOrganizationChartNode]\", inputs: [\"node\", \"root\", \"first\", \"last\", \"collapsible\"] }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.Default });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChart, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-organizationChart, p-organization-chart, p-organizationchart',\n                    standalone: true,\n                    imports: [CommonModule, OrganizationChartNode, SharedModule],\n                    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{ 'p-organizationchart p-component': true, 'p-organizationchart-preservespace': preserveSpace }\" [attr.data-pc-section]=\"'root'\">\n            <table class=\"p-organizationchart-table\" [collapsible]=\"collapsible\" pOrganizationChartNode [node]=\"root\" *ngIf=\"root\"></table>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    providers: [OrganizationChartStyle]\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }], propDecorators: { value: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], selectionMode: [{\n                type: Input\n            }], collapsible: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], preserveSpace: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selection: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], onNodeSelect: [{\n                type: Output\n            }], onNodeUnselect: [{\n                type: Output\n            }], onNodeExpand: [{\n                type: Output\n            }], onNodeCollapse: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], togglerIconTemplate: [{\n                type: ContentChild,\n                args: ['togglericon', { descendants: false }]\n            }] } });\nclass OrganizationChartModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartModule, imports: [OrganizationChart, OrganizationChartNode, SharedModule], exports: [OrganizationChart, OrganizationChartNode, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartModule, imports: [OrganizationChart, OrganizationChartNode, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: OrganizationChartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OrganizationChart, OrganizationChartNode, SharedModule],\n                    exports: [OrganizationChart, OrganizationChartNode, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrganizationChart, OrganizationChartClasses, OrganizationChartModule, OrganizationChartNode, OrganizationChartStyle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}