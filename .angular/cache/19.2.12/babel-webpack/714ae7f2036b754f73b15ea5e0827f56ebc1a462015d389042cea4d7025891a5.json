{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, EventEmitter, NgZone, booleanAttribute, numberAttribute, ContentChildren, ContentChild, ViewChild, Output, Input, ViewEncapsulation, Component, PLATFORM_ID, Inject, HostListener, Directive, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { resolveFieldData, isEmpty, getOffset, addClass, findSingle, getIndex, calculateScrollbarWidth, removeClass, hasClass, getHiddenElementOuterWidth, getHiddenElementOuterHeight, reorderArray, equals, find, calculateScrollbarHeight, clearSelection, invokeElementMethod, focus, isNotEmpty, getAttribute } from '@primeuix/utils';\nimport * as i3 from 'primeng/api';\nimport { FilterService, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Checkbox } from 'primeng/checkbox';\nimport { DomHandler } from 'primeng/dom';\nimport { SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, ChevronDownIcon, ChevronRightIcon, CheckIcon, MinusIcon } from 'primeng/icons';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { Ripple } from 'primeng/ripple';\nimport { Scroller } from 'primeng/scroller';\nimport { Subject } from 'rxjs';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"colgroup\"];\nconst _c1 = [\"caption\"];\nconst _c2 = [\"header\"];\nconst _c3 = [\"body\"];\nconst _c4 = [\"footer\"];\nconst _c5 = [\"summary\"];\nconst _c6 = [\"emptymessage\"];\nconst _c7 = [\"paginatorleft\"];\nconst _c8 = [\"paginatorright\"];\nconst _c9 = [\"paginatordropdownitem\"];\nconst _c10 = [\"frozenheader\"];\nconst _c11 = [\"frozenbody\"];\nconst _c12 = [\"frozenfooter\"];\nconst _c13 = [\"frozencolgroup\"];\nconst _c14 = [\"loadingicon\"];\nconst _c15 = [\"reorderindicatorupicon\"];\nconst _c16 = [\"reorderindicatordownicon\"];\nconst _c17 = [\"sorticon\"];\nconst _c18 = [\"checkboxicon\"];\nconst _c19 = [\"headercheckboxicon\"];\nconst _c20 = [\"togglericon\"];\nconst _c21 = [\"paginatorfirstpagelinkicon\"];\nconst _c22 = [\"paginatorlastpagelinkicon\"];\nconst _c23 = [\"paginatorpreviouspagelinkicon\"];\nconst _c24 = [\"paginatornextpagelinkicon\"];\nconst _c25 = [\"loader\"];\nconst _c26 = [\"container\"];\nconst _c27 = [\"resizeHelper\"];\nconst _c28 = [\"reorderIndicatorUp\"];\nconst _c29 = [\"reorderIndicatorDown\"];\nconst _c30 = [\"table\"];\nconst _c31 = [\"scrollableView\"];\nconst _c32 = [\"scrollableFrozenView\"];\nconst _c33 = (a0, a1, a2, a3, a4, a5) => ({\n  \"p-treetable p-component\": true,\n  \"p-treetable-gridlines\": a0,\n  \"p-treetable-hoverable-rows\": a1,\n  \"p-treetable-auto-layout\": a2,\n  \"p-treetable-resizable\": a3,\n  \"p-treetable-resizable-fit\": a4,\n  \"p-treetable-flex-scrollable\": a5\n});\nconst _c34 = a0 => ({\n  $implicit: a0\n});\nconst _c35 = (a0, a1) => ({\n  left: a0,\n  width: a1\n});\nconst _c36 = a0 => ({\n  width: a0\n});\nfunction TreeTable_div_2_i_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(\"p-treetable-loading-icon pi-spin \" + ctx_r0.loadingIcon);\n  }\n}\nfunction TreeTable_div_2_ng_container_3_SpinnerIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SpinnerIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"spin\", true)(\"styleClass\", \"p-treetable-loading-icon\");\n  }\n}\nfunction TreeTable_div_2_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction TreeTable_div_2_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_div_2_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TreeTable_div_2_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, TreeTable_div_2_ng_container_3_span_2_1_Template, 1, 0, null, 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingIconTemplate || ctx_r0._loadingIconTemplate);\n  }\n}\nfunction TreeTable_div_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TreeTable_div_2_ng_container_3_SpinnerIcon_1_Template, 1, 2, \"SpinnerIcon\", 22)(2, TreeTable_div_2_ng_container_3_span_2_Template, 2, 1, \"span\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loadingIconTemplate && !ctx_r0._loadingIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingIconTemplate || ctx_r0._loadingIconTemplate);\n  }\n}\nfunction TreeTable_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"div\", 19);\n    i0.ɵɵtemplate(2, TreeTable_div_2_i_2_Template, 1, 2, \"i\", 20)(3, TreeTable_div_2_ng_container_3_Template, 3, 2, \"ng-container\", 21);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loadingIcon);\n  }\n}\nfunction TreeTable_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, TreeTable_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.captionTemplate || ctx_r0._captionTemplate);\n  }\n}\nfunction TreeTable_p_paginator_4_1_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_4_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_1_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorFirstPageLinkIconTemplate || ctx_r0._paginatorFirstPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_1_ng_template_0_Template, 1, 1, \"ng-template\", 29);\n  }\n}\nfunction TreeTable_p_paginator_4_2_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_4_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_2_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorPreviousPageLinkIconTemplate || ctx_r0._paginatorPreviousPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_2_ng_template_0_Template, 1, 1, \"ng-template\", 30);\n  }\n}\nfunction TreeTable_p_paginator_4_3_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_4_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_3_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorLastPageLinkIconTemplate || ctx_r0._paginatorLastPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_4_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_3_ng_template_0_Template, 1, 1, \"ng-template\", 31);\n  }\n}\nfunction TreeTable_p_paginator_4_4_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_4_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_4_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorNextPageLinkIconTemplate || ctx_r0._paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_4_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_4_4_ng_template_0_Template, 1, 1, \"ng-template\", 32);\n  }\n}\nfunction TreeTable_p_paginator_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-paginator\", 28);\n    i0.ɵɵlistener(\"onPageChange\", function TreeTable_p_paginator_4_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onPageChange($event));\n    });\n    i0.ɵɵtemplate(1, TreeTable_p_paginator_4_1_Template, 1, 0, null, 21)(2, TreeTable_p_paginator_4_2_Template, 1, 0, null, 21)(3, TreeTable_p_paginator_4_3_Template, 1, 0, null, 21)(4, TreeTable_p_paginator_4_4_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_8_0;\n    let tmp_9_0;\n    let tmp_13_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r0.rows)(\"first\", ctx_r0.first)(\"totalRecords\", ctx_r0.totalRecords)(\"pageLinkSize\", ctx_r0.pageLinks)(\"alwaysShow\", ctx_r0.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r0.rowsPerPageOptions)(\"templateLeft\", (tmp_8_0 = ctx_r0.paginatorLeftTemplate) !== null && tmp_8_0 !== undefined ? tmp_8_0 : ctx_r0._paginatorLeftTemplate)(\"templateRight\", (tmp_9_0 = ctx_r0.paginatorRightTemplate) !== null && tmp_9_0 !== undefined ? tmp_9_0 : ctx_r0._paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r0.paginatorDropdownAppendTo)(\"currentPageReportTemplate\", ctx_r0.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r0.showFirstLastIcon)(\"dropdownItemTemplate\", (tmp_13_0 = ctx_r0.paginatorDropdownItemTemplate) !== null && tmp_13_0 !== undefined ? tmp_13_0 : ctx_r0._paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r0.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r0.showJumpToPageDropdown)(\"showPageLinks\", ctx_r0.showPageLinks)(\"styleClass\", ctx_r0.paginatorStyleClass)(\"locale\", ctx_r0.paginatorLocale);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorFirstPageLinkIconTemplate || ctx_r0._paginatorFirstPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorPreviousPageLinkIconTemplate || ctx_r0._paginatorPreviousPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorLastPageLinkIconTemplate || ctx_r0._paginatorLastPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorNextPageLinkIconTemplate || ctx_r0._paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_div_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_div_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_div_5_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33)(1, \"table\", 34, 1);\n    i0.ɵɵtemplate(3, TreeTable_div_5_ng_container_3_Template, 1, 0, \"ng-container\", 35);\n    i0.ɵɵelementStart(4, \"thead\", 36);\n    i0.ɵɵtemplate(5, TreeTable_div_5_ng_container_5_Template, 1, 0, \"ng-container\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"tbody\", 37);\n    i0.ɵɵelementStart(7, \"tfoot\", 38);\n    i0.ɵɵtemplate(8, TreeTable_div_5_ng_container_8_Template, 1, 0, \"ng-container\", 35);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    let tmp_10_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.tableStyleClass)(\"ngStyle\", ctx_r0.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.colGroupTemplate || ctx_r0._colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c34, ctx_r0.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate || ctx_r0._headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(12, _c34, ctx_r0.columns));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"pTreeTableBody\", ctx_r0.columns)(\"pTreeTableBodyTemplate\", (tmp_10_0 = ctx_r0.bodyTemplate) !== null && tmp_10_0 !== undefined ? tmp_10_0 : ctx_r0._bodyTemplate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.footerTemplate || ctx_r0._footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(14, _c34, ctx_r0.columns));\n  }\n}\nfunction TreeTable_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 42, 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ttScrollableView\", ctx_r0.frozenColumns)(\"frozen\", true)(\"ngStyle\", i0.ɵɵpureFunction1(4, _c36, ctx_r0.frozenWidth))(\"scrollHeight\", ctx_r0.scrollHeight);\n  }\n}\nfunction TreeTable_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtemplate(1, TreeTable_div_6_div_1_Template, 2, 6, \"div\", 40);\n    i0.ɵɵelement(2, \"div\", 41, 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.frozenColumns || ctx_r0.frozenBodyTemplate || ctx_r0._frozenBodyTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ttScrollableView\", ctx_r0.columns)(\"frozen\", false)(\"scrollHeight\", ctx_r0.scrollHeight)(\"ngStyle\", i0.ɵɵpureFunction2(5, _c35, ctx_r0.frozenWidth, \"calc(100% - \" + ctx_r0.frozenWidth + \")\"));\n  }\n}\nfunction TreeTable_p_paginator_7_1_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_7_1_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_1_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorFirstPageLinkIconTemplate || ctx_r0._paginatorFirstPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_7_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_1_ng_template_0_Template, 1, 1, \"ng-template\", 29);\n  }\n}\nfunction TreeTable_p_paginator_7_2_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_7_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_2_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorPreviousPageLinkIconTemplate || ctx_r0._paginatorPreviousPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_7_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_2_ng_template_0_Template, 1, 1, \"ng-template\", 30);\n  }\n}\nfunction TreeTable_p_paginator_7_3_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_7_3_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_3_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorLastPageLinkIconTemplate || ctx_r0._paginatorLastPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_7_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_3_ng_template_0_Template, 1, 1, \"ng-template\", 31);\n  }\n}\nfunction TreeTable_p_paginator_7_4_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_p_paginator_7_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_4_ng_template_0_ng_container_0_Template, 1, 0, \"ng-container\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.paginatorNextPageLinkIconTemplate || ctx_r0._paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_p_paginator_7_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_p_paginator_7_4_ng_template_0_Template, 1, 1, \"ng-template\", 32);\n  }\n}\nfunction TreeTable_p_paginator_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-paginator\", 43);\n    i0.ɵɵlistener(\"onPageChange\", function TreeTable_p_paginator_7_Template_p_paginator_onPageChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onPageChange($event));\n    });\n    i0.ɵɵtemplate(1, TreeTable_p_paginator_7_1_Template, 1, 0, null, 21)(2, TreeTable_p_paginator_7_2_Template, 1, 0, null, 21)(3, TreeTable_p_paginator_7_3_Template, 1, 0, null, 21)(4, TreeTable_p_paginator_7_4_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_8_0;\n    let tmp_9_0;\n    let tmp_13_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"rows\", ctx_r0.rows)(\"first\", ctx_r0.first)(\"totalRecords\", ctx_r0.totalRecords)(\"pageLinkSize\", ctx_r0.pageLinks)(\"alwaysShow\", ctx_r0.alwaysShowPaginator)(\"rowsPerPageOptions\", ctx_r0.rowsPerPageOptions)(\"templateLeft\", (tmp_8_0 = ctx_r0.paginatorLeftTemplate) !== null && tmp_8_0 !== undefined ? tmp_8_0 : ctx_r0._paginatorLeftTemplate)(\"templateRight\", (tmp_9_0 = ctx_r0.paginatorRightTemplate) !== null && tmp_9_0 !== undefined ? tmp_9_0 : ctx_r0._paginatorRightTemplate)(\"dropdownAppendTo\", ctx_r0.paginatorDropdownAppendTo)(\"currentPageReportTemplate\", ctx_r0.currentPageReportTemplate)(\"showFirstLastIcon\", ctx_r0.showFirstLastIcon)(\"dropdownItemTemplate\", (tmp_13_0 = ctx_r0.paginatorDropdownItemTemplate) !== null && tmp_13_0 !== undefined ? tmp_13_0 : ctx_r0._paginatorDropdownItemTemplate)(\"showCurrentPageReport\", ctx_r0.showCurrentPageReport)(\"showJumpToPageDropdown\", ctx_r0.showJumpToPageDropdown)(\"showPageLinks\", ctx_r0.showPageLinks)(\"styleClass\", ctx_r0.paginatorStyleClass)(\"locale\", ctx_r0.paginatorLocale);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorFirstPageLinkIconTemplate || ctx_r0._paginatorFirstPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorPreviousPageLinkIconTemplate || ctx_r0._paginatorPreviousPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorLastPageLinkIconTemplate || ctx_r0._paginatorLastPageLinkIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginatorNextPageLinkIconTemplate || ctx_r0._paginatorNextPageLinkIconTemplate);\n  }\n}\nfunction TreeTable_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTable_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtemplate(1, TreeTable_div_8_ng_container_1_Template, 1, 0, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.summaryTemplate || ctx_r0._summaryTemplate);\n  }\n}\nfunction TreeTable_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 45, 4);\n  }\n}\nfunction TreeTable_span_10_ArrowDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ArrowDownIcon\");\n  }\n}\nfunction TreeTable_span_10_3_ng_template_0_Template(rf, ctx) {}\nfunction TreeTable_span_10_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_span_10_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TreeTable_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 46, 5);\n    i0.ɵɵtemplate(2, TreeTable_span_10_ArrowDownIcon_2_Template, 1, 0, \"ArrowDownIcon\", 21)(3, TreeTable_span_10_3_Template, 1, 0, null, 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.reorderIndicatorUpIconTemplate && !ctx_r0._reorderIndicatorUpIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.reorderIndicatorUpIconTemplate || ctx_r0._reorderIndicatorUpIconTemplate);\n  }\n}\nfunction TreeTable_span_11_ArrowUpIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ArrowUpIcon\");\n  }\n}\nfunction TreeTable_span_11_3_ng_template_0_Template(rf, ctx) {}\nfunction TreeTable_span_11_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTable_span_11_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TreeTable_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 47, 6);\n    i0.ɵɵtemplate(2, TreeTable_span_11_ArrowUpIcon_2_Template, 1, 0, \"ArrowUpIcon\", 21)(3, TreeTable_span_11_3_Template, 1, 0, null, 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.reorderIndicatorDownIconTemplate && !ctx_r0._reorderIndicatorDownIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.reorderIndicatorDownIconTemplate || ctx_r0._reorderIndicatorDownIconTemplate);\n  }\n}\nconst _c37 = [\"pTreeTableBody\", \"\"];\nconst _c38 = (a0, a1, a2, a3) => ({\n  $implicit: a0,\n  node: a1,\n  rowData: a2,\n  columns: a3\n});\nconst _c39 = (a0, a1) => ({\n  $implicit: a0,\n  frozen: a1\n});\nfunction TTBody_ng_template_0_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTBody_ng_template_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TTBody_ng_template_0_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const serializedNode_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction4(2, _c38, serializedNode_r1, serializedNode_r1.node, serializedNode_r1.node.data, ctx_r1.columns));\n  }\n}\nfunction TTBody_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTBody_ng_template_0_ng_container_0_Template, 2, 7, \"ng-container\", 1);\n  }\n  if (rf & 2) {\n    const serializedNode_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", serializedNode_r1.visible);\n  }\n}\nfunction TTBody_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTBody_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TTBody_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.tt.emptyMessageTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c39, ctx_r1.columns, ctx_r1.frozen));\n  }\n}\nconst _c40 = [\"scrollHeader\"];\nconst _c41 = [\"scrollHeaderBox\"];\nconst _c42 = [\"scrollBody\"];\nconst _c43 = [\"scrollTable\"];\nconst _c44 = [\"loadingTable\"];\nconst _c45 = [\"scrollFooter\"];\nconst _c46 = [\"scrollFooterBox\"];\nconst _c47 = [\"scrollableAligner\"];\nconst _c48 = [\"scroller\"];\nconst _c49 = [\"ttScrollableView\", \"\"];\nconst _c50 = a0 => ({\n  height: a0\n});\nconst _c51 = (a0, a1) => ({\n  $implicit: a0,\n  options: a1\n});\nconst _c52 = a0 => ({\n  options: a0\n});\nconst _c53 = (a0, a1) => ({\n  \"max-height\": a0,\n  \"overflow-y\": a1\n});\nconst _c54 = () => ({});\nfunction TTScrollableView_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_p_scroller_8_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_p_scroller_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTScrollableView_p_scroller_8_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 14);\n  }\n  if (rf & 2) {\n    const items_r3 = ctx.$implicit;\n    const scrollerOptions_r4 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const buildInItems_r5 = i0.ɵɵreference(11);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", buildInItems_r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c51, items_r3, scrollerOptions_r4));\n  }\n}\nfunction TTScrollableView_p_scroller_8_ng_container_4_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_p_scroller_8_ng_container_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTScrollableView_p_scroller_8_ng_container_4_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 14);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r6 = ctx.options;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.tt.loaderTemplate || ctx_r1.tt._loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c52, scrollerOptions_r6));\n  }\n}\nfunction TTScrollableView_p_scroller_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TTScrollableView_p_scroller_8_ng_container_4_ng_template_1_Template, 1, 4, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction TTScrollableView_p_scroller_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 19, 3);\n    i0.ɵɵlistener(\"onLazyLoad\", function TTScrollableView_p_scroller_8_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.tt.onLazyItemLoad($event));\n    });\n    i0.ɵɵtemplate(2, TTScrollableView_p_scroller_8_ng_template_2_Template, 1, 5, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor)(4, TTScrollableView_p_scroller_8_ng_container_4_Template, 3, 0, \"ng-container\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c50, ctx_r1.tt.scrollHeight !== \"flex\" ? ctx_r1.tt.scrollHeight : undefined));\n    i0.ɵɵproperty(\"items\", ctx_r1.tt.serializedValue)(\"scrollHeight\", ctx_r1.scrollHeight !== \"flex\" ? undefined : \"100%\")(\"itemSize\", ctx_r1.tt.virtualScrollItemSize || ctx_r1.tt._virtualRowHeight)(\"lazy\", ctx_r1.tt.lazy)(\"options\", ctx_r1.tt.virtualScrollOptions);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.tt.loaderTemplate || ctx_r1.tt._loaderTemplate);\n  }\n}\nfunction TTScrollableView_ng_container_9_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 20, 6);\n    i0.ɵɵtemplate(3, TTScrollableView_ng_container_9_ng_container_3_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    const buildInItems_r5 = i0.ɵɵreference(11);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c53, ctx_r1.tt.scrollHeight !== \"flex\" ? ctx_r1.scrollHeight : undefined, !ctx_r1.frozen && ctx_r1.tt.scrollHeight ? \"scroll\" : undefined));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", buildInItems_r5)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(7, _c51, ctx_r1.serializedValue, i0.ɵɵpureFunction0(6, _c54)));\n  }\n}\nfunction TTScrollableView_ng_template_10_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_ng_template_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 24, 8);\n  }\n}\nfunction TTScrollableView_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 21, 7);\n    i0.ɵɵtemplate(2, TTScrollableView_ng_template_10_ng_container_2_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelement(3, \"tbody\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TTScrollableView_ng_template_10_div_4_Template, 2, 0, \"div\", 23);\n  }\n  if (rf & 2) {\n    const items_r7 = ctx.$implicit;\n    const scrollerOptions_r8 = ctx.options;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(scrollerOptions_r8.contentStyle);\n    i0.ɵɵclassMap(ctx_r1.tt.tableStyleClass);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r8.contentStyleClass)(\"ngStyle\", ctx_r1.tt.tableStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.frozen ? ctx_r1.tt.frozenColGroupTemplate || ctx_r1.tt._frozenColGroupTemplate || ctx_r1.tt.colGroupTemplate || ctx_r1.tt._colGroupTemplate : ctx_r1.tt.colGroupTemplate || ctx_r1.tt._colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c34, ctx_r1.columns));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"pTreeTableBody\", ctx_r1.columns)(\"pTreeTableBodyTemplate\", ctx_r1.frozen ? ctx_r1.tt.frozenBodyTemplate || ctx_r1.tt._frozenBodyTemplate || ctx_r1.tt.bodyTemplate || ctx_r1.tt._bodyTemplate : ctx_r1.tt.bodyTemplate || ctx_r1.tt._bodyTemplate)(\"serializedNodes\", items_r7)(\"frozen\", ctx_r1.frozen);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.frozen);\n  }\n}\nfunction TTScrollableView_div_12_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_div_12_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TTScrollableView_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25, 9)(2, \"div\", 26, 10)(4, \"table\", 27);\n    i0.ɵɵtemplate(5, TTScrollableView_div_12_ng_container_5_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementStart(6, \"tfoot\", 28);\n    i0.ɵɵtemplate(7, TTScrollableView_div_12_ng_container_7_Template, 1, 0, \"ng-container\", 14);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.tt.tableStyleClass)(\"ngStyle\", ctx_r1.tt.tableStyle);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.frozen ? ctx_r1.tt.frozenColGroupTemplate || ctx_r1.tt._frozenColGroupTemplate || ctx_r1.tt.colGroupTemplate || ctx_r1.tt._colGroupTemplate : ctx_r1.tt.colGroupTemplate || ctx_r1.tt._colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c34, ctx_r1.columns));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.frozen ? ctx_r1.tt.frozenFooterTemplate || ctx_r1.tt._frozenFooterTemplate || ctx_r1.tt.footerTemplate || ctx_r1.tt._footerTemplate : ctx_r1.tt.footerTemplate || ctx_r1.tt._footerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c34, ctx_r1.columns));\n  }\n}\nfunction TTSortIcon_ng_container_0_SortAltIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SortAltIcon\", 3);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-sortable-column-icon\");\n  }\n}\nfunction TTSortIcon_ng_container_0_SortAmountUpAltIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SortAmountUpAltIcon\", 3);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-sortable-column-icon\");\n  }\n}\nfunction TTSortIcon_ng_container_0_SortAmountDownIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SortAmountDownIcon\", 3);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-sortable-column-icon\");\n  }\n}\nfunction TTSortIcon_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TTSortIcon_ng_container_0_SortAltIcon_1_Template, 1, 1, \"SortAltIcon\", 2)(2, TTSortIcon_ng_container_0_SortAmountUpAltIcon_2_Template, 1, 1, \"SortAmountUpAltIcon\", 2)(3, TTSortIcon_ng_container_0_SortAmountDownIcon_3_Template, 1, 1, \"SortAmountDownIcon\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.sortOrder === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.sortOrder === 1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.sortOrder === -1);\n  }\n}\nfunction TTSortIcon_span_1_1_ng_template_0_Template(rf, ctx) {}\nfunction TTSortIcon_span_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTSortIcon_span_1_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TTSortIcon_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, TTSortIcon_span_1_1_Template, 1, 0, null, 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.tt.sortIconTemplate || ctx_r0.tt._sortIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c34, ctx_r0.sortOrder));\n  }\n}\nconst _c55 = (a0, a1) => ({\n  $implicit: a0,\n  partialSelected: a1\n});\nfunction TTCheckbox_ng_container_1_ng_template_1_0_ng_template_0_Template(rf, ctx) {}\nfunction TTCheckbox_ng_container_1_ng_template_1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTCheckbox_ng_container_1_ng_template_1_0_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TTCheckbox_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTCheckbox_ng_container_1_ng_template_1_0_Template, 1, 0, null, 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.tt.checkboxIconTemplate || ctx_r0.tt._checkboxIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c55, ctx_r0.checked, ctx_r0.partialChecked));\n  }\n}\nfunction TTCheckbox_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TTCheckbox_ng_container_1_ng_template_1_Template, 1, 5, \"ng-template\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction TTHeaderCheckbox_ng_container_1_ng_template_1_0_ng_template_0_Template(rf, ctx) {}\nfunction TTHeaderCheckbox_ng_container_1_ng_template_1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTHeaderCheckbox_ng_container_1_ng_template_1_0_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TTHeaderCheckbox_ng_container_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TTHeaderCheckbox_ng_container_1_ng_template_1_0_Template, 1, 0, null, 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.tt.headerCheckboxIconTemplate || ctx_r0.tt._headerCheckboxIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c34, ctx_r0.checked));\n  }\n}\nfunction TTHeaderCheckbox_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TTHeaderCheckbox_ng_container_1_ng_template_1_Template, 1, 4, \"ng-template\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction TreeTableCellEditor_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTableCellEditor_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TreeTableCellEditor_ng_container_0_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.inputTemplate);\n  }\n}\nfunction TreeTableCellEditor_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TreeTableCellEditor_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TreeTableCellEditor_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.outputTemplate);\n  }\n}\nfunction TreeTableToggler_ng_container_1_ChevronDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction TreeTableToggler_ng_container_1_ChevronRightIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronRightIcon\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction TreeTableToggler_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TreeTableToggler_ng_container_1_ChevronDownIcon_1_Template, 1, 1, \"ChevronDownIcon\", 1)(2, TreeTableToggler_ng_container_1_ChevronRightIcon_2_Template, 1, 1, \"ChevronRightIcon\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.rowNode.node.expanded);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.rowNode.node.expanded);\n  }\n}\nfunction TreeTableToggler_2_ng_template_0_Template(rf, ctx) {}\nfunction TreeTableToggler_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreeTableToggler_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst theme = ({\n  dt\n}) => `\n/* For PrimeNG */\n.p-treetable {\n    position: relative;\n}\n\n.p-treetable table {\n    border-collapse: collapse;\n    width: 100%;\n    table-layout: fixed;\n}\n\n.p-treetable .p-sortable-column {\n    cursor: pointer;\n    user-select: none;\n}\n\n.p-treetable .p-sortable-column .p-column-title,\n.p-treetable .p-sortable-column .p-sortable-column-icon,\n.p-treetable .p-sortable-column .p-sortable-column-badge {\n    vertical-align: middle;\n}\n\n.p-treetable .p-sortable-column .p-sortable-column-badge {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.p-treetable-auto-layout>.p-treetable-wrapper {\n    overflow-x: auto;\n}\n\n.p-treetable-auto-layout>.p-treetable-wrapper>table {\n    table-layout: auto;\n}\n\n.p-treetable-hoverable-rows .p-treetable-tbody>tr {\n    cursor: pointer;\n}\n\n.p-treetable-toggler {\n    cursor: pointer;\n    user-select: none;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    vertical-align: middle;\n    overflow: hidden;\n    position: relative;\n}\n\n\n/* Scrollable */\n.p-treetable-scrollable-wrapper {\n    position: relative;\n}\n\n.p-treetable-scrollable-header,\n.p-treetable-scrollable-footer {\n    overflow: hidden;\n    flex-shrink: 0;\n}\n\n.p-treetable-scrollable-body {\n    overflow: auto;\n    position: relative;\n}\n\n.p-treetable-virtual-table {\n    position: absolute;\n}\n\n/* Frozen Columns */\n.p-treetable-frozen-view .p-treetable-scrollable-body {\n    overflow: hidden;\n}\n\n.p-treetable-frozen-view>.p-treetable-scrollable-body>table>.p-treetable-tbody>tr>td:last-child {\n    border-right: 0 none;\n}\n\n.p-treetable-unfrozen-view {\n    position: absolute;\n    top: 0;\n}\n\n/* Flex Scrollable */\n.p-treetable-flex-scrollable {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n}\n\n.p-treetable-flex-scrollable .p-treetable-scrollable-wrapper,\n.p-treetable-flex-scrollable .p-treetable-scrollable-view {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n}\n\n.p-treetable-flex-scrollable .p-treetable-virtual-scrollable-body {\n    flex: 1;\n}\n\n/* Resizable */\n.p-treetable-resizable>.p-treetable-wrapper {\n    overflow-x: auto;\n}\n\n.p-treetable-resizable .p-treetable-thead>tr>th,\n.p-treetable-resizable .p-treetable-tfoot>tr>td,\n.p-treetable-resizable .p-treetable-tbody>tr>td {\n    overflow: hidden;\n}\n\n.p-treetable-resizable .p-resizable-column {\n    background-clip: padding-box;\n    position: relative;\n}\n\n.p-treetable-resizable-fit .p-resizable-column:last-child .p-column-resizer {\n    display: none;\n}\n\n.p-treetable .p-column-resizer {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 0;\n    width: ${dt('treetable.column.resizer.width')};\n    height: 100%;\n    padding: 0px;\n    cursor: col-resize;\n    border: 1px solid transparent;\n}\n\n.p-treetable .p-column-resizer-helper {\n    width: ${dt('treetable.resize.indicator.width')};\n    position: absolute;\n    z-index: 10;\n    display: none;\n    background: ${dt('treetable.resize.indicator.color')};\n}\n\n.p-treetable .p-row-editor-init,\n.p-treetable .p-row-editor-save,\n.p-treetable .p-row-editor-cancel {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n}\n\n\n/* Reorder */\n.p-treetable-reorder-indicator-up,\n.p-treetable-reorder-indicator-down {\n    position: absolute;\n    display: none;\n}\n\n[ttReorderableColumn] {\n    cursor: move;\n}\n\n/* Loader */\n.p-treetable-mask {\n    position: absolute !important;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 2;\n}\n\n.p-treetable-loading-icon {\n    font-size: ${dt('treetable.loading.icon.size')};\n    width: ${dt('treetable.loading.icon.size')};\n    height: ${dt('treetable.loading.icon.size')};\n}\n\n/* Virtual Scroll */\n.p-treetable .p-scroller-loading {\n    transform: none !important;\n    min-height: 0;\n    position: sticky;\n    top: 0;\n    left: 0;\n}\n\n.p-treetable .p-paginator-top {\n    border-color: ${dt('treetable.paginator.top.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.paginator.top.border.width')};\n}\n\n.p-treetable .p-paginator-bottom {\n    border-color: ${dt('treetable.paginator.bottom.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.paginator.bottom.border.width')};\n}\n\n.p-treetable .p-treetable-header {\n    background: ${dt('treetable.header.background')};\n    color: ${dt('treetable.header.color')};\n    border-color: ${dt('treetable.header.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.header.border.width')};\n    padding: ${dt('treetable.header.padding')};\n    font-weight: ${dt('treetable.column.title.font.weight')};\n}\n\n.p-treetable .p-treetable-footer {\n    background: ${dt('treetable.footer.background')};\n    color: ${dt('treetable.footer.color')};\n    border-color: ${dt('treetable.footer.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.footer.border.width')};\n    padding: ${dt('treetable.footer.padding')};\n    font-weight: ${dt('treetable.column.footer.font.weight')};\n}\n\n.p-treetable .p-treetable-thead>tr>th {\n    padding: ${dt('treetable.header.cell.padding')};\n    background: ${dt('treetable.header.cell.background')};\n    border-color: ${dt('treetable.header.cell.border.color')};\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    color: ${dt('treetable.header.cell.color')};\n    font-weight: ${dt('treetable.column.title.font.weight')};\n    text-align: start;\n    transition: background ${dt('treetable.transition.duration')}, color ${dt('treetable.transition.duration')}, border-color ${dt('treetable.transition.duration')},\n            outline-color ${dt('treetable.transition.duration')}, box-shadow ${dt('treetable.transition.duration')};\n}\n\n.p-treetable .p-treetable-tfoot>tr>td {\n    text-align: start;\n    padding: ${dt('treetable.footer.cell.padding')};\n    border-color: ${dt('treetable.footer.cell.border.color')};\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    color: ${dt('treetable.footer.cell.color')};\n    background: ${dt('treetable.footer.cell.background')};\n    font-weight: ${dt('treetable.column.footer.font.weight')};\n}\n\n.p-treetable .p-sortable-column {\n    cursor: pointer;\n    user-select: none;\n    outline-color: transparent;\n    vertical-align: middle;\n}\n\n.p-treetable .p-sortable-column .p-sortable-column-icon {\n    color: ${dt('treetable.sort.icon.color')};\n    transition: color ${dt('treetable.transition.duration')};\n}\n\n\n.p-treetable .p-sortable-column:not(.p-treetable-column-sorted):hover {\n    background: ${dt('treetable.header.cell.hover.background')};\n    color: ${dt('treetable.header.cell.hover.color')};\n}\n\n.p-treetable .p-sortable-column:not(.p-treetable-column-sorted):hover .p-sortable-column-icon {\n    color: ${dt('treetable.sort.icon.hover.color')};\n}\n\n.p-treetable .p-sortable-column.p-treetable-column-sorted {\n    background: ${dt('treetable.header.cell.selected.background')};\n    color: ${dt('treetable.header.cell.selected.color')};\n}\n\n.p-treetable .p-sortable-column.p-treetable-column-sorted .p-sortable-column-icon {\n    color: ${dt('treetable.header.cell.selected.color')};\n}\n\n.p-treetable .p-sortable-column:focus-visible {\n    box-shadow: ${dt('treetable.header.cell.focus.ring.shadow')};\n    outline: ${dt('treetable.header.cell.focus.ring.width')} ${dt('treetable.header.cell.focus.ring.style')} ${dt('treetable.header.cell.focus.ring.color')};\n    outline-offset: ${dt('treetable.header.cell.focus.ring.offset')};\n}\n\n.p-treetable-hoverable .p-treetable-selectable-row {\n    cursor: pointer;\n}\n\n.p-treetable .p-treetable-tbody > tr {\n    outline-color: transparent;\n    background: ${dt('treetable.row.background')};\n    color: ${dt('treetable.row.color')};\n    transition: background ${dt('treetable.transition.duration')}, color ${dt('treetable.transition.duration')}, border-color ${dt('treetable.transition.duration')},\n            outline-color ${dt('treetable.transition.duration')}, box-shadow ${dt('treetable.transition.duration')};\n}\n\n.p-treetable .p-treetable-tbody>tr>td {\n    text-align: start;\n    border-color: ${dt('treetable.body.cell.border.color')};\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    padding: ${dt('treetable.body.cell.padding')};\n}\n\n.p-treetable .p-treetable-tbody>tr>td .p-treetable-toggler {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    width: ${dt('treetable.node.toggle.button.size')};\n    height: ${dt('treetable.node.toggle.button.size')};\n    color: ${dt('treetable.node.toggle.button.color')};\n    border: 0 none;\n    background: transparent;\n    cursor: pointer;\n    border-radius: ${dt('treetable.node.toggle.button.border.radius')};\n    transition: background ${dt('treetable.transition.duration')}, color ${dt('treetable.transition.duration')}, border-color ${dt('treetable.transition.duration')},\n            outline-color ${dt('treetable.transition.duration')}, box-shadow ${dt('treetable.transition.duration')};\n    outline-color: transparent;\n    user-select: none;\n}\n\n.p-treetable .p-treetable-tbody>tr>td .p-treetable-toggler:enabled:hover {\n    color: ${dt('treetable.node.toggle.button.hover.color')};\n    background: ${dt('treetable.node.toggle.button.hover.background')};\n}\n\n.p-treetable .p-treetable-tbody>tr>tr.treetable-row-selected .p-treetable-toggler:hover {\n    background: ${dt('treetable.node.toggle.button.selected.hover.background')};\n    color: ${dt('treetable.node.toggle.button.selected.hover.color')};\n}\n\n.p-treetable .p-treetable-tbody>tr>td .p-treetable-toggler:focus-visible {\n    box-shadow: ${dt('treetable.node.toggle.button.focus.ring.shadow')};\n    outline: ${dt('treetable.node.toggle.button.focus.ring.width')} ${dt('treetable.node.toggle.button.focus.ring.style')} ${dt('treetable.node.toggle.button.focus.ring.color')};\n    outline-offset: ${dt('treetable.node.toggle.button.focus.ring.offset')};\n}\n\n\n.p-treetable .p-treetable-tbody>tr.p-treetable-row-selected {\n    background: ${dt('treetable.row.selected.background')};\n    color: ${dt('treetable.row.selected.color')};\n}\n\n.p-treetable-tbody > tr:focus-visible,\n.p-treetable-tbody > tr.p-treetable-contextmenu-row-selected {\n    box-shadow: ${dt('treetable.row.focus.ring.shadow')};\n    outline: ${dt('treetable.row.focus.ring.width')} ${dt('treetable.row.focus.ring.style')} ${dt('treetable.row.focus.ring.color')};\n    outline-offset: ${dt('treetable.row.focus.ring.offset')};\n}\n\n.p-treetable .p-treetable-tbody>tr.p-treetable-row-selected .p-treetable-toggler {\n    color: inherit;\n}\n\n.p-treetable .p-treetable-tbody>tr.p-treetable-row-selected .p-treetable-toggler:hover {\n    background: ${dt('treetable.node.toggle.button.selected.hover.background')};\n    color: ${dt('treetable.node.toggle.button.selected.hover.color')};\n}\n\n.p-treetable.p-treetable-hoverable-rows .p-treetable-tbody>tr:not(.p-treetable-row-selected):hover {\n    background: ${dt('treetable.row.hover.background')};\n    color: ${dt('treetable.row.hover.color')};\n}\n\n.p-treetable.p-treetable-gridlines .p-datatable-header {\n    border-width: 1px 1px 0 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-footer {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-top {\n    border-width: 0 1px 0 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-bottom {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-thead>tr>th {\n    border-width: 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-tbody>tr>td {\n    border-width: 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-tfoot>tr>td {\n    border-width: 1px;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-header {\n    padding: 0.65625rem 0.875rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-thead>tr>th {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-tbody>tr>td {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-tfoot>tr>td {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-footer {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-header {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-thead>tr>th {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-tbody>tr>td {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-tfoot>tr>td {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-footer {\n    padding: 0.9375rem 1.25rem;\n}\n\np-treetabletoggler + p-treetablecheckbox .p-checkbox,\np-treetable-toggler + p-treetable-checkbox .p-checkbox,\np-tree-table-toggler + p-tree-table-checkbox .p-checkbox {\n    vertical-align: middle;\n}\n\np-treetabletoggler + p-treetablecheckbox + span,\np-treetable-toggler + p-treetable-checkbox + span,\np-tree-table-toggler + p-tree-table-checkbox + span {\n    vertical-align: middle;\n}\n`;\nconst classes = {\n  root: ({\n    instance\n  }) => ({\n    'p-treetable p-component': true,\n    'p-treetable-hoverable': instance.rowHover || instance.selectionMode,\n    'p-treetable-resizable': instance.resizableColumns,\n    'p-treetable-resizable-fit': instance.resizableColumns && instance.columnResizeMode === 'fit',\n    'p-treetable-scrollable': instance.scrollable,\n    'p-treetable-flex-scrollable': instance.scrollable && instance.scrollHeight === 'flex',\n    'p-treetable-gridlines': instance.showGridlines,\n    'p-treetable-sm': instance.size === 'small',\n    'p-treetable-lg': instance.size === 'large'\n  }),\n  loading: 'p-treetable-loading',\n  //TODO: required?\n  mask: 'p-treetable-mask p-overlay-mask',\n  loadingIcon: 'p-treetable-loading-icon',\n  header: 'p-treetable-header',\n  paginator: ({\n    instance\n  }) => 'p-treetable-paginator-' + instance.paginatorPosition,\n  tableContainer: 'p-treetable-table-container',\n  table: ({\n    instance\n  }) => ({\n    'p-treetable-table': true,\n    'p-treetable-scrollable-table': instance.scrollable,\n    'p-treetable-resizable-table': instance.resizableColumns,\n    'p-treetable-resizable-table-fit': instance.resizableColumns && instance.columnResizeMode === 'fit'\n  }),\n  thead: 'p-treetable-thead',\n  headerCell: ({\n    instance\n  }) => ({\n    'p-treetable-header-cell': true,\n    'p-treetable-sortable-column': instance.sortable,\n    'p-treetable-resizable-column': instance.resizableColumns,\n    'p-treetable-column-sorted': instance?.sorted,\n    'p-treetable-frozen-column': instance.columnProp('frozen')\n  }),\n  columnResizer: 'p-treetable-column-resizer',\n  columnHeaderContent: 'p-treetable-column-header-content',\n  columnTitle: 'p-treetable-column-title',\n  sortIcon: 'p-treetable-sort-icon',\n  pcSortBadge: 'p-treetable-sort-badge',\n  tbody: 'p-treetable-tbody',\n  row: ({\n    instance\n  }) => ({\n    'p-treetable-row-selected': instance.selected\n  }),\n  bodyCell: ({\n    instance\n  }) => ({\n    'p-treetable-frozen-column': instance.columnProp('frozen')\n  }),\n  bodyCellContent: ({\n    instance\n  }) => ({\n    'p-treetable-body-cell-content': true,\n    'p-treetable-body-cell-content-expander': instance.columnProp('expander')\n  }),\n  toggler: 'p-treetable-body-cell-content-expander',\n  nodeToggleButton: 'p-treetable-node-toggle-button',\n  nodeToggleIcon: 'p-treetable-node-toggle-icon',\n  pcNodeCheckbox: 'p-treetable-node-checkbox',\n  emptyMessage: 'p-treetable-empty-message',\n  tfoot: 'p-treetable-tfoot',\n  footerCell: ({\n    instance\n  }) => ({\n    'p-treetable-frozen-column': instance.columnProp('frozen')\n  }),\n  footer: 'p-treetable-footer',\n  columnResizeIndicator: 'p-treetable-column-resize-indicator'\n};\nconst inlineStyles = {\n  tableContainer: {\n    overflow: 'auto'\n  },\n  thead: {\n    position: 'sticky'\n  },\n  tfoot: {\n    position: 'sticky'\n  }\n};\nclass TreeTableStyle extends BaseStyle {\n  name = 'treetable';\n  theme = theme;\n  classes = classes;\n  inlineStyles = inlineStyles;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTreeTableStyle_BaseFactory;\n    return function TreeTableStyle_Factory(__ngFactoryType__) {\n      return (ɵTreeTableStyle_BaseFactory || (ɵTreeTableStyle_BaseFactory = i0.ɵɵgetInheritedFactory(TreeTableStyle)))(__ngFactoryType__ || TreeTableStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TreeTableStyle,\n    factory: TreeTableStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * TreeTable is used to display hierarchical data in tabular format.\n *\n * [Live Demo](https://www.primeng.org/treetable/)\n *\n * @module treetablestyle\n *\n */\nvar TreeTableClasses;\n(function (TreeTableClasses) {\n  /**\n   * Class name of the root element\n   */\n  TreeTableClasses[\"root\"] = \"p-treetable\";\n  /**\n   * Class name of the loading element\n   */\n  TreeTableClasses[\"loading\"] = \"p-treetable-loading\";\n  /**\n   * Class name of the mask element\n   */\n  TreeTableClasses[\"mask\"] = \"p-treetable-mask\";\n  /**\n   * Class name of the loading icon element\n   */\n  TreeTableClasses[\"loadingIcon\"] = \"p-treetable-loading-icon\";\n  /**\n   * Class name of the header element\n   */\n  TreeTableClasses[\"header\"] = \"p-treetable-header\";\n  /**\n   * Class name of the paginator element\n   */\n  TreeTableClasses[\"paginator\"] = \"p-treetable-paginator-[position]\";\n  /**\n   * Class name of the table container element\n   */\n  TreeTableClasses[\"tableContainer\"] = \"p-treetable-table-container\";\n  /**\n   * Class name of the table element\n   */\n  TreeTableClasses[\"table\"] = \"p-treetable-table\";\n  /**\n   * Class name of the thead element\n   */\n  TreeTableClasses[\"thead\"] = \"p-treetable-thead\";\n  /**\n   * Class name of the column resizer element\n   */\n  TreeTableClasses[\"columnResizer\"] = \"p-treetable-column-resizer\";\n  /**\n   * Class name of the column title element\n   */\n  TreeTableClasses[\"columnTitle\"] = \"p-treetable-column-title\";\n  /**\n   * Class name of the sort icon element\n   */\n  TreeTableClasses[\"sortIcon\"] = \"p-treetable-sort-icon\";\n  /**\n   * Class name of the sort badge element\n   */\n  TreeTableClasses[\"pcSortBadge\"] = \"p-treetable-sort-badge\";\n  /**\n   * Class name of the tbody element\n   */\n  TreeTableClasses[\"tbody\"] = \"p-treetable-tbody\";\n  /**\n   * Class name of the node toggle button element\n   */\n  TreeTableClasses[\"nodeToggleButton\"] = \"p-treetable-node-toggle-button\";\n  /**\n   * Class name of the node toggle icon element\n   */\n  TreeTableClasses[\"nodeToggleIcon\"] = \"p-treetable-node-toggle-icon\";\n  /**\n   * Class name of the node checkbox element\n   */\n  TreeTableClasses[\"pcNodeCheckbox\"] = \"p-treetable-node-checkbox\";\n  /**\n   * Class name of the empty message element\n   */\n  TreeTableClasses[\"emptyMessage\"] = \"p-treetable-empty-message\";\n  /**\n   * Class name of the tfoot element\n   */\n  TreeTableClasses[\"tfoot\"] = \"p-treetable-tfoot\";\n  /**\n   * Class name of the footer element\n   */\n  TreeTableClasses[\"footer\"] = \"p-treetable-footer\";\n  /**\n   * Class name of the column resize indicator element\n   */\n  TreeTableClasses[\"columnResizeIndicator\"] = \"p-treetable-column-resize-indicator\";\n})(TreeTableClasses || (TreeTableClasses = {}));\nclass TreeTableService {\n  sortSource = new Subject();\n  selectionSource = new Subject();\n  contextMenuSource = new Subject();\n  uiUpdateSource = new Subject();\n  totalRecordsSource = new Subject();\n  sortSource$ = this.sortSource.asObservable();\n  selectionSource$ = this.selectionSource.asObservable();\n  contextMenuSource$ = this.contextMenuSource.asObservable();\n  uiUpdateSource$ = this.uiUpdateSource.asObservable();\n  totalRecordsSource$ = this.totalRecordsSource.asObservable();\n  onSort(sortMeta) {\n    this.sortSource.next(sortMeta);\n  }\n  onSelectionChange() {\n    this.selectionSource.next(null);\n  }\n  onContextMenu(node) {\n    this.contextMenuSource.next(node);\n  }\n  onUIUpdate(value) {\n    this.uiUpdateSource.next(value);\n  }\n  onTotalRecordsChange(value) {\n    this.totalRecordsSource.next(value);\n  }\n  static ɵfac = function TreeTableService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TreeTableService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TreeTableService,\n    factory: TreeTableService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * TreeTable is used to display hierarchical data in tabular format.\n * @group Components\n */\nclass TreeTable extends BaseComponent {\n  _componentStyle = inject(TreeTableStyle);\n  /**\n   * An array of objects to represent dynamic columns.\n   * @group Props\n   */\n  columns;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Inline style of the table.\n   * @group Props\n   */\n  tableStyle;\n  /**\n   * Style class of the table.\n   * @group Props\n   */\n  tableStyleClass;\n  /**\n   * Whether the cell widths scale according to their content or not.\n   * @group Props\n   */\n  autoLayout;\n  /**\n   * Defines if data is loaded and interacted with in lazy manner.\n   * @group Props\n   */\n  lazy = false;\n  /**\n   * Whether to call lazy loading on initialization.\n   * @group Props\n   */\n  lazyLoadOnInit = true;\n  /**\n   * When specified as true, enables the pagination.\n   * @group Props\n   */\n  paginator;\n  /**\n   * Number of rows to display per page.\n   * @group Props\n   */\n  rows;\n  /**\n   * Index of the first row to be displayed.\n   * @group Props\n   */\n  first = 0;\n  /**\n   * Number of page links to display in paginator.\n   * @group Props\n   */\n  pageLinks = 5;\n  /**\n   * Array of integer/object values to display inside rows per page dropdown of paginator\n   * @group Props\n   */\n  rowsPerPageOptions;\n  /**\n   * Whether to show it even there is only one page.\n   * @group Props\n   */\n  alwaysShowPaginator = true;\n  /**\n   * Position of the paginator.\n   * @group Props\n   */\n  paginatorPosition = 'bottom';\n  /**\n   * Custom style class for paginator\n   * @group Props\n   */\n  paginatorStyleClass;\n  /**\n   * Target element to attach the paginator dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  paginatorDropdownAppendTo;\n  /**\n   * Template of the current page report element. Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n   * @group Props\n   */\n  currentPageReportTemplate = '{currentPage} of {totalPages}';\n  /**\n   * Whether to display current page report.\n   * @group Props\n   */\n  showCurrentPageReport;\n  /**\n   * Whether to display a dropdown to navigate to any page.\n   * @group Props\n   */\n  showJumpToPageDropdown;\n  /**\n   * When enabled, icons are displayed on paginator to go first and last page.\n   * @group Props\n   */\n  showFirstLastIcon = true;\n  /**\n   * Whether to show page links.\n   * @group Props\n   */\n  showPageLinks = true;\n  /**\n   * Sort order to use when an unsorted column gets sorted by user interaction.\n   * @group Props\n   */\n  defaultSortOrder = 1;\n  /**\n   * Defines whether sorting works on single column or on multiple columns.\n   * @group Props\n   */\n  sortMode = 'single';\n  /**\n   * When true, resets paginator to first page after sorting.\n   * @group Props\n   */\n  resetPageOnSort = true;\n  /**\n   * Whether to use the default sorting or a custom one using sortFunction.\n   * @group Props\n   */\n  customSort;\n  /**\n   * Specifies the selection mode, valid values are \"single\" and \"multiple\".\n   * @group Props\n   */\n  selectionMode;\n  /**\n   * Selected row with a context menu.\n   * @group Props\n   */\n  contextMenuSelection;\n  /**\n   * Mode of the contet menu selection.\n   * @group Props\n   */\n  contextMenuSelectionMode = 'separate';\n  /**\n   * A property to uniquely identify a record in data.\n   * @group Props\n   */\n  dataKey;\n  /**\n   * Defines whether metaKey is should be considered for the selection. On touch enabled devices, metaKeySelection is turned off automatically.\n   * @group Props\n   */\n  metaKeySelection = false;\n  /**\n   * Algorithm to define if a row is selected, valid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields.\n   * @group Props\n   */\n  compareSelectionBy = 'deepEquals';\n  /**\n   * Adds hover effect to rows without the need for selectionMode.\n   * @group Props\n   */\n  rowHover;\n  /**\n   * Displays a loader to indicate data load is in progress.\n   * @group Props\n   */\n  loading;\n  /**\n   * The icon to show while indicating data load is in progress.\n   * @group Props\n   */\n  loadingIcon;\n  /**\n   * Whether to show the loading mask when loading property is true.\n   * @group Props\n   */\n  showLoader = true;\n  /**\n   * When specified, enables horizontal and/or vertical scrolling.\n   * @group Props\n   */\n  scrollable;\n  /**\n   * Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size.\n   * @group Props\n   */\n  scrollHeight;\n  /**\n   * Whether the data should be loaded on demand during scroll.\n   * @group Props\n   */\n  virtualScroll;\n  /**\n   * Height of a row to use in calculations of virtual scrolling.\n   * @group Props\n   */\n  virtualScrollItemSize;\n  /**\n   * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n   * @group Props\n   */\n  virtualScrollOptions;\n  /**\n   * The delay (in milliseconds) before triggering the virtual scroll. This determines the time gap between the user's scroll action and the actual rendering of the next set of items in the virtual scroll.\n   * @group Props\n   */\n  virtualScrollDelay = 150;\n  /**\n   * Width of the frozen columns container.\n   * @group Props\n   */\n  frozenWidth;\n  /**\n   * An array of objects to represent dynamic columns that are frozen.\n   * @group Props\n   */\n  frozenColumns;\n  /**\n   * When enabled, columns can be resized using drag and drop.\n   * @group Props\n   */\n  resizableColumns;\n  /**\n   * Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\".\n   * @group Props\n   */\n  columnResizeMode = 'fit';\n  /**\n   * When enabled, columns can be reordered using drag and drop.\n   * @group Props\n   */\n  reorderableColumns;\n  /**\n   * Local ng-template varilable of a ContextMenu.\n   * @group Props\n   */\n  contextMenu;\n  /**\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algorithm checks for object identity.\n   * @group Props\n   */\n  rowTrackBy = (index, item) => item;\n  /**\n   * An array of FilterMetadata objects to provide external filters.\n   * @group Props\n   */\n  filters = {};\n  /**\n   * An array of fields as string to use in global filtering.\n   * @group Props\n   */\n  globalFilterFields;\n  /**\n   * Delay in milliseconds before filtering the data.\n   * @group Props\n   */\n  filterDelay = 300;\n  /**\n   * Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.\n   * @group Props\n   */\n  filterMode = 'lenient';\n  /**\n   * Locale to use in filtering. The default locale is the host environment's current locale.\n   * @group Props\n   */\n  filterLocale;\n  /**\n   * Locale to be used in paginator formatting.\n   * @group Props\n   */\n  paginatorLocale;\n  /**\n   * Number of total records, defaults to length of value when not defined.\n   * @group Props\n   */\n  get totalRecords() {\n    return this._totalRecords;\n  }\n  set totalRecords(val) {\n    this._totalRecords = val;\n    this.tableService.onTotalRecordsChange(this._totalRecords);\n  }\n  /**\n   * Name of the field to sort data by default.\n   * @group Props\n   */\n  get sortField() {\n    return this._sortField;\n  }\n  set sortField(val) {\n    this._sortField = val;\n  }\n  /**\n   * Order to sort when default sorting is enabled.\n   * @defaultValue 1\n   * @group Props\n   */\n  get sortOrder() {\n    return this._sortOrder;\n  }\n  set sortOrder(val) {\n    this._sortOrder = val;\n  }\n  /**\n   * An array of SortMeta objects to sort the data by default in multiple sort mode.\n   * @defaultValue null\n   * @group Props\n   */\n  get multiSortMeta() {\n    return this._multiSortMeta;\n  }\n  set multiSortMeta(val) {\n    this._multiSortMeta = val;\n  }\n  /**\n   * Selected row in single mode or an array of values in multiple mode.\n   * @defaultValue null\n   * @group Props\n   */\n  get selection() {\n    return this._selection;\n  }\n  set selection(val) {\n    this._selection = val;\n  }\n  /**\n   * An array of objects to display.\n   * @defaultValue null\n   * @group Props\n   */\n  get value() {\n    return this._value;\n  }\n  set value(val) {\n    this._value = val;\n  }\n  /**\n   * Indicates the height of rows to be scrolled.\n   * @defaultValue 28\n   * @group Props\n   * @deprecated use virtualScrollItemSize property instead.\n   */\n  get virtualRowHeight() {\n    return this._virtualRowHeight;\n  }\n  set virtualRowHeight(val) {\n    this._virtualRowHeight = val;\n    console.log('The virtualRowHeight property is deprecated, use virtualScrollItemSize property instead.');\n  }\n  /**\n   * A map of keys to control the selection state.\n   * @group Props\n   */\n  get selectionKeys() {\n    return this._selectionKeys;\n  }\n  set selectionKeys(value) {\n    this._selectionKeys = value;\n    this.selectionKeysChange.emit(this._selectionKeys);\n  }\n  /**\n   * Whether to show grid lines between cells.\n   * @defaultValue false\n   * @group Props\n   */\n  showGridlines = false;\n  /**\n   * Callback to invoke on selected node change.\n   * @param {TreeTableNode} object - Node instance.\n   * @group Emits\n   */\n  selectionChange = new EventEmitter();\n  /**\n   * Callback to invoke on context menu selection change.\n   * @param {TreeTableNode} object - Node instance.\n   * @group Emits\n   */\n  contextMenuSelectionChange = new EventEmitter();\n  /**\n   * Callback to invoke when data is filtered.\n   * @param {TreeTableFilterEvent} event - Custom filter event.\n   * @group Emits\n   */\n  onFilter = new EventEmitter();\n  /**\n   * Callback to invoke when a node is expanded.\n   * @param {TreeTableNodeExpandEvent} event - Node expand event.\n   * @group Emits\n   */\n  onNodeExpand = new EventEmitter();\n  /**\n   * Callback to invoke when a node is collapsed.\n   * @param {TreeTableNodeCollapseEvent} event - Node collapse event.\n   * @group Emits\n   */\n  onNodeCollapse = new EventEmitter();\n  /**\n   * Callback to invoke when pagination occurs.\n   * @param {TreeTablePaginatorState} object - Paginator state.\n   * @group Emits\n   */\n  onPage = new EventEmitter();\n  /**\n   * Callback to invoke when a column gets sorted.\n   * @param {Object} Object - Sort data.\n   * @group Emits\n   */\n  onSort = new EventEmitter();\n  /**\n   * Callback to invoke when paging, sorting or filtering happens in lazy mode.\n   * @param {TreeTableLazyLoadEvent} event - Custom lazy load event.\n   * @group Emits\n   */\n  onLazyLoad = new EventEmitter();\n  /**\n   * An event emitter to invoke on custom sorting, refer to sorting section for details.\n   * @param {TreeTableSortEvent} event - Custom sort event.\n   * @group Emits\n   */\n  sortFunction = new EventEmitter();\n  /**\n   * Callback to invoke when a column is resized.\n   * @param {TreeTableColResizeEvent} event - Custom column resize event.\n   * @group Emits\n   */\n  onColResize = new EventEmitter();\n  /**\n   * Callback to invoke when a column is reordered.\n   * @param {TreeTableColumnReorderEvent} event - Custom column reorder.\n   * @group Emits\n   */\n  onColReorder = new EventEmitter();\n  /**\n   * Callback to invoke when a node is selected.\n   * @param {TreeTableNode} object - Node instance.\n   * @group Emits\n   */\n  onNodeSelect = new EventEmitter();\n  /**\n   * Callback to invoke when a node is unselected.\n   * @param {TreeTableNodeUnSelectEvent} event - Custom node unselect event.\n   * @group Emits\n   */\n  onNodeUnselect = new EventEmitter();\n  /**\n   * Callback to invoke when a node is selected with right click.\n   * @param {TreeTableContextMenuSelectEvent} event - Custom context menu select event.\n   * @group Emits\n   */\n  onContextMenuSelect = new EventEmitter();\n  /**\n   * Callback to invoke when state of header checkbox changes.\n   * @param {TreeTableHeaderCheckboxToggleEvent} event - Custom checkbox toggle event.\n   * @group Emits\n   */\n  onHeaderCheckboxToggle = new EventEmitter();\n  /**\n   * Callback to invoke when a cell switches to edit mode.\n   * @param {TreeTableEditEvent} event - Custom edit event.\n   * @group Emits\n   */\n  onEditInit = new EventEmitter();\n  /**\n   * Callback to invoke when cell edit is completed.\n   * @param {TreeTableEditEvent} event - Custom edit event.\n   * @group Emits\n   */\n  onEditComplete = new EventEmitter();\n  /**\n   * Callback to invoke when cell edit is cancelled with escape key.\n   * @param {TreeTableEditEvent} event - Custom edit event.\n   * @group Emits\n   */\n  onEditCancel = new EventEmitter();\n  /**\n   * Callback to invoke when selectionKeys are changed.\n   * @param {Object} object - updated value of the selectionKeys.\n   * @group Emits\n   */\n  selectionKeysChange = new EventEmitter();\n  containerViewChild;\n  resizeHelperViewChild;\n  reorderIndicatorUpViewChild;\n  reorderIndicatorDownViewChild;\n  tableViewChild;\n  scrollableViewChild;\n  scrollableFrozenViewChild;\n  _value = [];\n  _virtualRowHeight = 28;\n  _selectionKeys;\n  serializedValue;\n  _totalRecords = 0;\n  _multiSortMeta;\n  _sortField;\n  _sortOrder = 1;\n  filteredNodes;\n  filterTimeout;\n  _colGroupTemplate;\n  colGroupTemplate;\n  _captionTemplate;\n  captionTemplate;\n  _headerTemplate;\n  headerTemplate;\n  _bodyTemplate;\n  bodyTemplate;\n  _footerTemplate;\n  footerTemplate;\n  _summaryTemplate;\n  summaryTemplate;\n  _emptyMessageTemplate;\n  emptyMessageTemplate;\n  _paginatorLeftTemplate;\n  paginatorLeftTemplate;\n  _paginatorRightTemplate;\n  paginatorRightTemplate;\n  _paginatorDropdownItemTemplate;\n  paginatorDropdownItemTemplate;\n  _frozenHeaderTemplate;\n  frozenHeaderTemplate;\n  _frozenBodyTemplate;\n  frozenBodyTemplate;\n  _frozenFooterTemplate;\n  frozenFooterTemplate;\n  _frozenColGroupTemplate;\n  frozenColGroupTemplate;\n  _loadingIconTemplate;\n  loadingIconTemplate;\n  _reorderIndicatorUpIconTemplate;\n  reorderIndicatorUpIconTemplate;\n  _reorderIndicatorDownIconTemplate;\n  reorderIndicatorDownIconTemplate;\n  _sortIconTemplate;\n  sortIconTemplate;\n  _checkboxIconTemplate;\n  checkboxIconTemplate;\n  _headerCheckboxIconTemplate;\n  headerCheckboxIconTemplate;\n  _togglerIconTemplate;\n  togglerIconTemplate;\n  _paginatorFirstPageLinkIconTemplate;\n  paginatorFirstPageLinkIconTemplate;\n  _paginatorLastPageLinkIconTemplate;\n  paginatorLastPageLinkIconTemplate;\n  _paginatorPreviousPageLinkIconTemplate;\n  paginatorPreviousPageLinkIconTemplate;\n  _paginatorNextPageLinkIconTemplate;\n  paginatorNextPageLinkIconTemplate;\n  _loaderTemplate;\n  loaderTemplate;\n  lastResizerHelperX;\n  reorderIconWidth;\n  reorderIconHeight;\n  draggedColumn;\n  dropPosition;\n  preventSelectionSetterPropagation;\n  _selection;\n  selectedKeys = {};\n  rowTouched;\n  editingCell;\n  editingCellData;\n  editingCellField;\n  editingCellClick;\n  documentEditListener;\n  initialized;\n  toggleRowIndex;\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.lazy && this.lazyLoadOnInit && !this.virtualScroll) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    }\n    this.initialized = true;\n  }\n  templates;\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'caption':\n          this.captionTemplate = item.template;\n          break;\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'body':\n          this.bodyTemplate = item.template;\n          break;\n        case 'footer':\n          this.footerTemplate = item.template;\n          break;\n        case 'summary':\n          this.summaryTemplate = item.template;\n          break;\n        case 'colgroup':\n          this.colGroupTemplate = item.template;\n          break;\n        case 'emptymessage':\n          this.emptyMessageTemplate = item.template;\n          break;\n        case 'paginatorleft':\n          this.paginatorLeftTemplate = item.template;\n          break;\n        case 'paginatorright':\n          this.paginatorRightTemplate = item.template;\n          break;\n        case 'paginatordropdownitem':\n          this.paginatorDropdownItemTemplate = item.template;\n          break;\n        case 'frozenheader':\n          this.frozenHeaderTemplate = item.template;\n          break;\n        case 'frozenbody':\n          this.frozenBodyTemplate = item.template;\n          break;\n        case 'frozenfooter':\n          this.frozenFooterTemplate = item.template;\n          break;\n        case 'frozencolgroup':\n          this.frozenColGroupTemplate = item.template;\n          break;\n        case 'loadingicon':\n          this.loadingIconTemplate = item.template;\n          break;\n        case 'reorderindicatorupicon':\n          this.reorderIndicatorUpIconTemplate = item.template;\n          break;\n        case 'reorderindicatordownicon':\n          this.reorderIndicatorDownIconTemplate = item.template;\n          break;\n        case 'sorticon':\n          this.sortIconTemplate = item.template;\n          break;\n        case 'checkboxicon':\n          this.checkboxIconTemplate = item.template;\n          break;\n        case 'headercheckboxicon':\n          this.headerCheckboxIconTemplate = item.template;\n          break;\n        case 'togglericon':\n          this.togglerIconTemplate = item.template;\n          break;\n        case 'paginatorfirstpagelinkicon':\n          this.paginatorFirstPageLinkIconTemplate = item.template;\n          break;\n        case 'paginatorlastpagelinkicon':\n          this.paginatorLastPageLinkIconTemplate = item.template;\n          break;\n        case 'paginatorpreviouspagelinkicon':\n          this.paginatorPreviousPageLinkIconTemplate = item.template;\n          break;\n        case 'paginatornextpagelinkicon':\n          this.paginatorNextPageLinkIconTemplate = item.template;\n          break;\n        case 'loader':\n          this.loaderTemplate = item.template;\n          break;\n      }\n    });\n  }\n  filterService = inject(FilterService);\n  tableService = inject(TreeTableService);\n  zone = inject(NgZone);\n  ngOnChanges(simpleChange) {\n    super.ngOnChanges(simpleChange);\n    if (simpleChange.value) {\n      this._value = simpleChange.value.currentValue;\n      if (!this.lazy) {\n        this.totalRecords = this._value ? this._value.length : 0;\n        if (this.sortMode == 'single' && this.sortField) this.sortSingle();else if (this.sortMode == 'multiple' && this.multiSortMeta) this.sortMultiple();else if (this.hasFilter())\n          //sort already filters\n          this._filter();\n      }\n      this.updateSerializedValue();\n      this.tableService.onUIUpdate(this.value);\n    }\n    if (simpleChange.sortField) {\n      this._sortField = simpleChange.sortField.currentValue;\n      //avoid triggering lazy load prior to lazy initialization at onInit\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n    if (simpleChange.sortOrder) {\n      this._sortOrder = simpleChange.sortOrder.currentValue;\n      //avoid triggering lazy load prior to lazy initialization at onInit\n      if (!this.lazy || this.initialized) {\n        if (this.sortMode === 'single') {\n          this.sortSingle();\n        }\n      }\n    }\n    if (simpleChange.multiSortMeta) {\n      this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n      if (this.sortMode === 'multiple') {\n        this.sortMultiple();\n      }\n    }\n    if (simpleChange.selection) {\n      this._selection = simpleChange.selection.currentValue;\n      if (!this.preventSelectionSetterPropagation) {\n        this.updateselectedKeys();\n        this.tableService.onSelectionChange();\n      }\n      this.preventSelectionSetterPropagation = false;\n    }\n  }\n  updateSerializedValue() {\n    this.serializedValue = [];\n    if (this.paginator) this.serializePageNodes();else this.serializeNodes(null, this.filteredNodes || this.value, 0, true);\n  }\n  serializeNodes(parent, nodes, level, visible) {\n    if (nodes && nodes.length) {\n      for (let node of nodes) {\n        node.parent = parent;\n        const rowNode = {\n          node: node,\n          parent: parent,\n          level: level,\n          visible: visible && (parent ? parent.expanded : true)\n        };\n        this.serializedValue.push(rowNode);\n        if (rowNode.visible && node.expanded) {\n          this.serializeNodes(node, node.children, level + 1, rowNode.visible);\n        }\n      }\n    }\n  }\n  serializePageNodes() {\n    let data = this.filteredNodes || this.value;\n    this.serializedValue = [];\n    if (data && data.length) {\n      const first = this.lazy ? 0 : this.first;\n      for (let i = first; i < first + this.rows; i++) {\n        let node = data[i];\n        if (node) {\n          this.serializedValue.push({\n            node: node,\n            parent: null,\n            level: 0,\n            visible: true\n          });\n          this.serializeNodes(node, node.children, 1, true);\n        }\n      }\n    }\n  }\n  updateselectedKeys() {\n    if (this.dataKey && this._selection) {\n      this.selectedKeys = {};\n      if (Array.isArray(this._selection)) {\n        for (let node of this._selection) {\n          this.selectedKeys[String(resolveFieldData(node.data, this.dataKey))] = 1;\n        }\n      } else {\n        this.selectedKeys[String(resolveFieldData(this._selection.data, this.dataKey))] = 1;\n      }\n    }\n  }\n  onPageChange(event) {\n    this.first = event.first;\n    this.rows = event.rows;\n    if (this.lazy) this.onLazyLoad.emit(this.createLazyLoadMetadata());else this.serializePageNodes();\n    this.onPage.emit({\n      first: this.first,\n      rows: this.rows\n    });\n    this.tableService.onUIUpdate(this.value);\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n  sort(event) {\n    let originalEvent = event.originalEvent;\n    if (this.sortMode === 'single') {\n      this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n      this._sortField = event.field;\n      this.sortSingle();\n      if (this.resetPageOnSort && this.scrollable) {\n        this.resetScrollTop();\n      }\n    }\n    if (this.sortMode === 'multiple') {\n      let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n      let sortMeta = this.getSortMeta(event.field);\n      if (sortMeta) {\n        if (!metaKey) {\n          this._multiSortMeta = [{\n            field: event.field,\n            order: sortMeta.order * -1\n          }];\n          if (this.resetPageOnSort && this.scrollable) {\n            this.resetScrollTop();\n          }\n        } else {\n          sortMeta.order = sortMeta.order * -1;\n        }\n      } else {\n        if (!metaKey || !this.multiSortMeta) {\n          this._multiSortMeta = [];\n          if (this.resetPageOnSort && this.scrollable) {\n            this.resetScrollTop();\n          }\n        }\n        this.multiSortMeta.push({\n          field: event.field,\n          order: this.defaultSortOrder\n        });\n      }\n      this.sortMultiple();\n    }\n  }\n  sortSingle() {\n    if (this.sortField && this.sortOrder) {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        this.sortNodes(this.value);\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n      let sortMeta = {\n        field: this.sortField,\n        order: this.sortOrder\n      };\n      this.onSort.emit(sortMeta);\n      this.tableService.onSort(sortMeta);\n      this.updateSerializedValue();\n    }\n  }\n  sortNodes(nodes) {\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n    if (this.customSort) {\n      this.sortFunction.emit({\n        data: nodes,\n        mode: this.sortMode,\n        field: this.sortField,\n        order: this.sortOrder\n      });\n    } else {\n      nodes.sort((node1, node2) => {\n        let value1 = resolveFieldData(node1.data, this.sortField);\n        let value2 = resolveFieldData(node2.data, this.sortField);\n        let result = null;\n        if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, undefined, {\n          numeric: true\n        });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n        return this.sortOrder * result;\n      });\n    }\n    for (let node of nodes) {\n      this.sortNodes(node.children);\n    }\n  }\n  sortMultiple() {\n    if (this.multiSortMeta) {\n      if (this.lazy) {\n        this.onLazyLoad.emit(this.createLazyLoadMetadata());\n      } else if (this.value) {\n        this.sortMultipleNodes(this.value);\n        if (this.hasFilter()) {\n          this._filter();\n        }\n      }\n      this.onSort.emit({\n        multisortmeta: this.multiSortMeta\n      });\n      this.updateSerializedValue();\n      this.tableService.onSort(this.multiSortMeta);\n    }\n  }\n  sortMultipleNodes(nodes) {\n    if (!nodes || nodes.length === 0) {\n      return;\n    }\n    if (this.customSort) {\n      this.sortFunction.emit({\n        data: this.value,\n        mode: this.sortMode,\n        multiSortMeta: this.multiSortMeta\n      });\n    } else {\n      nodes.sort((node1, node2) => {\n        return this.multisortField(node1, node2, this.multiSortMeta, 0);\n      });\n    }\n    for (let node of nodes) {\n      this.sortMultipleNodes(node.children);\n    }\n  }\n  multisortField(node1, node2, multiSortMeta, index) {\n    if (isEmpty(this.multiSortMeta) || isEmpty(multiSortMeta[index])) {\n      return 0;\n    }\n    let value1 = resolveFieldData(node1.data, multiSortMeta[index].field);\n    let value2 = resolveFieldData(node2.data, multiSortMeta[index].field);\n    let result = null;\n    if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;\n    if (typeof value1 == 'string' || value1 instanceof String) {\n      if (value1.localeCompare && value1 != value2) {\n        return multiSortMeta[index].order * value1.localeCompare(value2, undefined, {\n          numeric: true\n        });\n      }\n    } else {\n      result = value1 < value2 ? -1 : 1;\n    }\n    if (value1 == value2) {\n      return multiSortMeta.length - 1 > index ? this.multisortField(node1, node2, multiSortMeta, index + 1) : 0;\n    }\n    return multiSortMeta[index].order * result;\n  }\n  getSortMeta(field) {\n    if (this.multiSortMeta && this.multiSortMeta.length) {\n      for (let i = 0; i < this.multiSortMeta.length; i++) {\n        if (this.multiSortMeta[i].field === field) {\n          return this.multiSortMeta[i];\n        }\n      }\n    }\n    return null;\n  }\n  isSorted(field) {\n    if (this.sortMode === 'single') {\n      return this.sortField && this.sortField === field;\n    } else if (this.sortMode === 'multiple') {\n      let sorted = false;\n      if (this.multiSortMeta) {\n        for (let i = 0; i < this.multiSortMeta.length; i++) {\n          if (this.multiSortMeta[i].field == field) {\n            sorted = true;\n            break;\n          }\n        }\n      }\n      return sorted;\n    }\n  }\n  createLazyLoadMetadata() {\n    return {\n      first: this.first,\n      rows: this.rows,\n      sortField: this.sortField,\n      sortOrder: this.sortOrder,\n      filters: this.filters,\n      globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n      multiSortMeta: this.multiSortMeta,\n      forceUpdate: () => this.cd.detectChanges()\n    };\n  }\n  onLazyItemLoad(event) {\n    this.onLazyLoad.emit({\n      ...this.createLazyLoadMetadata(),\n      ...event,\n      rows: event.last - event.first\n    });\n  }\n  /**\n   * Resets scroll to top.\n   * @group Method\n   */\n  resetScrollTop() {\n    if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({\n      top: 0\n    });\n  }\n  /**\n   * Scrolls to given index when using virtual scroll.\n   * @param {number} index - index of the element.\n   * @group Method\n   */\n  scrollToVirtualIndex(index) {\n    if (this.scrollableViewChild) {\n      this.scrollableViewChild.scrollToVirtualIndex(index);\n    }\n    if (this.scrollableFrozenViewChild) {\n      this.scrollableViewChild.scrollToVirtualIndex(index);\n    }\n  }\n  /**\n   * Scrolls to given index.\n   * @param {ScrollToOptions} options - Scroll options.\n   * @group Method\n   */\n  scrollTo(options) {\n    if (this.scrollableViewChild) {\n      this.scrollableViewChild.scrollTo(options);\n    }\n    if (this.scrollableFrozenViewChild) {\n      this.scrollableViewChild.scrollTo(options);\n    }\n  }\n  isEmpty() {\n    let data = this.filteredNodes || this.value;\n    return data == null || data.length == 0;\n  }\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n  onColumnResizeBegin(event) {\n    let containerLeft = getOffset(this.containerViewChild?.nativeElement).left;\n    this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft;\n    event.preventDefault();\n  }\n  onColumnResize(event) {\n    let containerLeft = getOffset(this.containerViewChild?.nativeElement).left;\n    addClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n    this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild?.nativeElement.offsetHeight + 'px';\n    this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n    this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft + 'px';\n    this.resizeHelperViewChild.nativeElement.style.display = 'block';\n  }\n  onColumnResizeEnd(event, column) {\n    let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n    let columnWidth = column.offsetWidth;\n    let newColumnWidth = columnWidth + delta;\n    let minWidth = column.style.minWidth || 15;\n    if (columnWidth + delta > parseInt(minWidth)) {\n      if (this.columnResizeMode === 'fit') {\n        let nextColumn = column.nextElementSibling;\n        while (!nextColumn.offsetParent) {\n          nextColumn = nextColumn.nextElementSibling;\n        }\n        if (nextColumn) {\n          let nextColumnWidth = nextColumn.offsetWidth - delta;\n          let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n          if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n            if (this.scrollable) {\n              let scrollableView = this.findParentScrollableView(column);\n              let scrollableBodyTable = findSingle(scrollableView, '.p-treetable-scrollable-body table') || findSingle(scrollableView, '.p-scroller-viewport table');\n              let scrollableHeaderTable = findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n              let scrollableFooterTable = findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n              let resizeColumnIndex = getIndex(column);\n              this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n              this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n            } else {\n              column.style.width = newColumnWidth + 'px';\n              if (nextColumn) {\n                nextColumn.style.width = nextColumnWidth + 'px';\n              }\n            }\n          }\n        }\n      } else if (this.columnResizeMode === 'expand') {\n        if (this.scrollable) {\n          let scrollableView = this.findParentScrollableView(column);\n          let scrollableBody = findSingle(scrollableView, '.p-treetable-scrollable-body') || findSingle(scrollableView, '.p-scroller-viewport');\n          let scrollableHeader = findSingle(scrollableView, '.p-treetable-scrollable-header');\n          let scrollableFooter = findSingle(scrollableView, '.p-treetable-scrollable-footer');\n          let scrollableBodyTable = findSingle(scrollableView, '.p-treetable-scrollable-body table') || findSingle(scrollableView, '.p-scroller-viewport table');\n          let scrollableHeaderTable = findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n          let scrollableFooterTable = findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n          scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\n          scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\n          if (scrollableFooterTable) {\n            scrollableFooterTable.style.width = scrollableFooterTable.offsetWidth + delta + 'px';\n          }\n          let resizeColumnIndex = getIndex(column);\n          const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n          const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n          const isContainerInViewport = this.containerViewChild?.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n          let setWidth = (container, table, width, isContainerInViewport) => {\n            if (container && table) {\n              container.style.width = isContainerInViewport ? width + calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n              table.style.width = width + 'px';\n            }\n          };\n          setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n          setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n          setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n          this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n          this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n          this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n        } else {\n          this.tableViewChild.nativeElement.style.width = this.tableViewChild?.nativeElement.offsetWidth + delta + 'px';\n          column.style.width = newColumnWidth + 'px';\n          let containerWidth = this.tableViewChild?.nativeElement.style.width;\n          this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n        }\n      }\n      this.onColResize.emit({\n        element: column,\n        delta: delta\n      });\n    }\n    this.resizeHelperViewChild.nativeElement.style.display = 'none';\n    removeClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n  }\n  findParentScrollableView(column) {\n    if (column) {\n      let parent = column.parentElement;\n      while (parent && !hasClass(parent, 'p-treetable-scrollable-view')) {\n        parent = parent.parentElement;\n      }\n      return parent;\n    } else {\n      return null;\n    }\n  }\n  resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n    if (table) {\n      let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n      if (colGroup) {\n        let col = colGroup.children[resizeColumnIndex];\n        let nextCol = col.nextElementSibling;\n        col.style.width = newColumnWidth + 'px';\n        if (nextCol && nextColumnWidth) {\n          nextCol.style.width = nextColumnWidth + 'px';\n        }\n      } else {\n        throw 'Scrollable tables require a colgroup to support resizable columns';\n      }\n    }\n  }\n  onColumnDragStart(event, columnElement) {\n    this.reorderIconWidth = getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild?.nativeElement);\n    this.reorderIconHeight = getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild?.nativeElement);\n    this.draggedColumn = columnElement;\n    event.dataTransfer.setData('text', 'b'); // For firefox\n  }\n  onColumnDragEnter(event, dropHeader) {\n    if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n      event.preventDefault();\n      let containerOffset = getOffset(this.containerViewChild?.nativeElement);\n      let dropHeaderOffset = getOffset(dropHeader);\n      if (this.draggedColumn != dropHeader) {\n        let targetLeft = dropHeaderOffset.left - containerOffset.left;\n        let targetTop = containerOffset.top - dropHeaderOffset.top;\n        let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n        this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n        this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n        if (event.pageX > columnCenter) {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = 1;\n        } else {\n          this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n          this.dropPosition = -1;\n        }\n        this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n        this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n      } else {\n        event.dataTransfer.dropEffect = 'none';\n      }\n    }\n  }\n  onColumnDragLeave(event) {\n    if (this.reorderableColumns && this.draggedColumn) {\n      event.preventDefault();\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n    }\n  }\n  onColumnDrop(event, dropColumn) {\n    event.preventDefault();\n    if (this.draggedColumn) {\n      let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');\n      let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'ttreorderablecolumn');\n      let allowDrop = dragIndex != dropIndex;\n      if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {\n        allowDrop = false;\n      }\n      if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n        dropIndex = dropIndex + 1;\n      }\n      if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n        dropIndex = dropIndex - 1;\n      }\n      if (allowDrop) {\n        reorderArray(this.columns, dragIndex, dropIndex);\n        this.onColReorder.emit({\n          dragIndex: dragIndex,\n          dropIndex: dropIndex,\n          columns: this.columns\n        });\n      }\n      this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n      this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n      this.draggedColumn.draggable = false;\n      this.draggedColumn = null;\n      this.dropPosition = null;\n    }\n  }\n  handleRowClick(event) {\n    let targetNode = event.originalEvent.target.nodeName;\n    if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || hasClass(event.originalEvent.target, 'p-clickable')) {\n      return;\n    }\n    if (this.selectionMode) {\n      this.preventSelectionSetterPropagation = true;\n      let rowNode = event.rowNode;\n      let selected = this.isSelected(rowNode.node);\n      let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n      let dataKeyValue = this.dataKey ? String(resolveFieldData(rowNode.node.data, this.dataKey)) : null;\n      if (metaSelection) {\n        let keyboardEvent = event.originalEvent;\n        let metaKey = keyboardEvent.metaKey || keyboardEvent.ctrlKey;\n        if (selected && metaKey) {\n          if (this.isSingleSelectionMode()) {\n            this._selection = null;\n            this.selectedKeys = {};\n            this.selectionChange.emit(null);\n          } else {\n            let selectionIndex = this.findIndexInSelection(rowNode.node);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            if (dataKeyValue) {\n              delete this.selectedKeys[dataKeyValue];\n            }\n          }\n          this.onNodeUnselect.emit({\n            originalEvent: event.originalEvent,\n            node: rowNode.node,\n            type: 'row'\n          });\n        } else {\n          if (this.isSingleSelectionMode()) {\n            this._selection = rowNode.node;\n            this.selectionChange.emit(rowNode.node);\n            if (dataKeyValue) {\n              this.selectedKeys = {};\n              this.selectedKeys[dataKeyValue] = 1;\n            }\n          } else if (this.isMultipleSelectionMode()) {\n            if (metaKey) {\n              this._selection = this.selection || [];\n            } else {\n              this._selection = [];\n              this.selectedKeys = {};\n            }\n            this._selection = [...this.selection, rowNode.node];\n            this.selectionChange.emit(this.selection);\n            if (dataKeyValue) {\n              this.selectedKeys[dataKeyValue] = 1;\n            }\n          }\n          this.onNodeSelect.emit({\n            originalEvent: event.originalEvent,\n            node: rowNode.node,\n            type: 'row',\n            index: event.rowIndex\n          });\n        }\n      } else {\n        if (this.selectionMode === 'single') {\n          if (selected) {\n            this._selection = null;\n            this.selectedKeys = {};\n            this.selectionChange.emit(this.selection);\n            this.onNodeUnselect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row'\n            });\n          } else {\n            this._selection = rowNode.node;\n            this.selectionChange.emit(this.selection);\n            this.onNodeSelect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row',\n              index: event.rowIndex\n            });\n            if (dataKeyValue) {\n              this.selectedKeys = {};\n              this.selectedKeys[dataKeyValue] = 1;\n            }\n          }\n        } else if (this.selectionMode === 'multiple') {\n          if (selected) {\n            let selectionIndex = this.findIndexInSelection(rowNode.node);\n            this._selection = this.selection.filter((val, i) => i != selectionIndex);\n            this.selectionChange.emit(this.selection);\n            this.onNodeUnselect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row'\n            });\n            if (dataKeyValue) {\n              delete this.selectedKeys[dataKeyValue];\n            }\n          } else {\n            this._selection = this.selection ? [...this.selection, rowNode.node] : [rowNode.node];\n            this.selectionChange.emit(this.selection);\n            this.onNodeSelect.emit({\n              originalEvent: event.originalEvent,\n              node: rowNode.node,\n              type: 'row',\n              index: event.rowIndex\n            });\n            if (dataKeyValue) {\n              this.selectedKeys[dataKeyValue] = 1;\n            }\n          }\n        }\n      }\n      this.tableService.onSelectionChange();\n    }\n    this.rowTouched = false;\n  }\n  handleRowTouchEnd(event) {\n    this.rowTouched = true;\n  }\n  handleRowRightClick(event) {\n    if (this.contextMenu) {\n      const node = event.rowNode.node;\n      if (this.contextMenuSelectionMode === 'separate') {\n        this.contextMenuSelection = node;\n        this.contextMenuSelectionChange.emit(node);\n        this.onContextMenuSelect.emit({\n          originalEvent: event.originalEvent,\n          node: node\n        });\n        this.contextMenu.show(event.originalEvent);\n        this.tableService.onContextMenu(node);\n      } else if (this.contextMenuSelectionMode === 'joint') {\n        this.preventSelectionSetterPropagation = true;\n        let selected = this.isSelected(node);\n        let dataKeyValue = this.dataKey ? String(resolveFieldData(node.data, this.dataKey)) : null;\n        if (!selected) {\n          if (this.isSingleSelectionMode()) {\n            this.selection = node;\n            this.selectionChange.emit(node);\n          } else if (this.isMultipleSelectionMode()) {\n            this.selection = [node];\n            this.selectionChange.emit(this.selection);\n          }\n          if (dataKeyValue) {\n            this.selectedKeys[dataKeyValue] = 1;\n          }\n        }\n        this.contextMenu.show(event.originalEvent);\n        this.onContextMenuSelect.emit({\n          originalEvent: event.originalEvent,\n          node: node\n        });\n      }\n    }\n  }\n  toggleNodeWithCheckbox(event) {\n    // legacy selection support, will be removed in v18\n    this.selection = this.selection || [];\n    this.preventSelectionSetterPropagation = true;\n    let node = event.rowNode.node;\n    let selected = this.isSelected(node);\n    if (selected) {\n      this.propagateSelectionDown(node, false);\n      if (event.rowNode.parent) {\n        this.propagateSelectionUp(node.parent, false);\n      }\n      this.selectionChange.emit(this.selection);\n      this.onNodeUnselect.emit({\n        originalEvent: event,\n        node: node\n      });\n    } else {\n      this.propagateSelectionDown(node, true);\n      if (event.rowNode.parent) {\n        this.propagateSelectionUp(node.parent, true);\n      }\n      this.selectionChange.emit(this.selection);\n      this.onNodeSelect.emit({\n        originalEvent: event,\n        node: node\n      });\n    }\n    this.tableService.onSelectionChange();\n  }\n  toggleNodesWithCheckbox(event, check) {\n    // legacy selection support, will be removed in v18\n    let data = this.filteredNodes || this.value;\n    this._selection = check && data ? data.slice() : [];\n    this.toggleAll(check);\n    if (!check) {\n      this._selection = [];\n      this.selectedKeys = {};\n    }\n    this.preventSelectionSetterPropagation = true;\n    this.selectionChange.emit(this._selection);\n    this.tableService.onSelectionChange();\n    this.onHeaderCheckboxToggle.emit({\n      originalEvent: event,\n      checked: check\n    });\n  }\n  toggleAll(checked) {\n    let data = this.filteredNodes || this.value;\n    if (!this.selectionKeys) {\n      if (data && data.length) {\n        for (let node of data) {\n          this.propagateSelectionDown(node, checked);\n        }\n      }\n    } else {\n      // legacy selection support, will be removed in v18\n      if (data && data.length) {\n        for (let node of data) {\n          this.propagateDown(node, checked);\n        }\n        this.selectionKeysChange.emit(this.selectionKeys);\n      }\n    }\n  }\n  propagateSelectionUp(node, select) {\n    // legacy selection support, will be removed in v18\n    if (node.children && node.children.length) {\n      let selectedChildCount = 0;\n      let childPartialSelected = false;\n      let dataKeyValue = this.dataKey ? String(resolveFieldData(node.data, this.dataKey)) : null;\n      for (let child of node.children) {\n        if (this.isSelected(child)) selectedChildCount++;else if (child.partialSelected) childPartialSelected = true;\n      }\n      if (select && selectedChildCount == node.children.length) {\n        this._selection = [...(this.selection || []), node];\n        node.partialSelected = false;\n        if (dataKeyValue) {\n          this.selectedKeys[dataKeyValue] = 1;\n        }\n      } else {\n        if (!select) {\n          let index = this.findIndexInSelection(node);\n          if (index >= 0) {\n            this._selection = this.selection.filter((val, i) => i != index);\n            if (dataKeyValue) {\n              delete this.selectedKeys[dataKeyValue];\n            }\n          }\n        }\n        if (childPartialSelected || selectedChildCount > 0 && selectedChildCount != node.children.length) node.partialSelected = true;else node.partialSelected = false;\n      }\n    }\n    let parent = node.parent;\n    node.checked = select;\n    if (parent) {\n      this.propagateSelectionUp(parent, select);\n    }\n  }\n  propagateSelectionDown(node, select) {\n    // legacy selection support, will be removed in v18\n    let index = this.findIndexInSelection(node);\n    let dataKeyValue = this.dataKey ? String(resolveFieldData(node.data, this.dataKey)) : null;\n    if (select && index == -1) {\n      this._selection = [...(this.selection || []), node];\n      if (dataKeyValue) {\n        this.selectedKeys[dataKeyValue] = 1;\n      }\n    } else if (!select && index > -1) {\n      this._selection = this.selection.filter((val, i) => i != index);\n      if (dataKeyValue) {\n        delete this.selectedKeys[dataKeyValue];\n      }\n    }\n    node.partialSelected = false;\n    node.checked = select;\n    if (node.children && node.children.length) {\n      for (let child of node.children) {\n        this.propagateSelectionDown(child, select);\n      }\n    }\n  }\n  isSelected(node) {\n    // legacy selection support, will be removed in v18\n    if (node && this.selection) {\n      if (this.dataKey) {\n        if (node.hasOwnProperty('checked')) {\n          return node['checked'];\n        } else {\n          return this.selectedKeys[resolveFieldData(node.data, this.dataKey)] !== undefined;\n        }\n      } else {\n        if (Array.isArray(this.selection)) return this.findIndexInSelection(node) > -1;else return this.equals(node, this.selection);\n      }\n    }\n    return false;\n  }\n  isNodeSelected(node) {\n    return this.selectionMode && this.selectionKeys ? this.selectionKeys[this.nodeKey(node)]?.checked === true : false;\n  }\n  isNodePartialSelected(node) {\n    return this.selectionMode && this.selectionKeys ? this.selectionKeys[this.nodeKey(node)]?.partialChecked === true : false;\n  }\n  nodeKey(node) {\n    return resolveFieldData(node, this.dataKey) || resolveFieldData(node?.data, this.dataKey);\n  }\n  toggleCheckbox(event) {\n    let {\n      rowNode,\n      check,\n      originalEvent\n    } = event;\n    let node = rowNode.node;\n    if (this.selectionKeys) {\n      this.propagateDown(node, check);\n      if (node.parent) {\n        this.propagateUp(node.parent, check);\n      }\n      this.selectionKeysChange.emit(this.selectionKeys);\n    } else {\n      this.toggleNodeWithCheckbox({\n        originalEvent,\n        rowNode\n      });\n    }\n    this.tableService.onSelectionChange();\n  }\n  propagateDown(node, check) {\n    if (check) {\n      this.selectionKeys[this.nodeKey(node)] = {\n        checked: true,\n        partialChecked: false\n      };\n    } else {\n      delete this.selectionKeys[this.nodeKey(node)];\n    }\n    if (node.children && node.children.length) {\n      for (let child of node.children) {\n        this.propagateDown(child, check);\n      }\n    }\n  }\n  propagateUp(node, check) {\n    let checkedChildCount = 0;\n    let childPartialSelected = false;\n    for (let child of node.children) {\n      if (this.selectionKeys[this.nodeKey(child)] && this.selectionKeys[this.nodeKey(child)].checked) checkedChildCount++;else if (this.selectionKeys[this.nodeKey(child)] && this.selectionKeys[this.nodeKey(child)].partialChecked) childPartialSelected = true;\n    }\n    if (check && checkedChildCount === node.children.length) {\n      this.selectionKeys[this.nodeKey(node)] = {\n        checked: true,\n        partialChecked: false\n      };\n    } else {\n      if (!check) {\n        delete this.selectionKeys[this.nodeKey(node)];\n      }\n      if (childPartialSelected || checkedChildCount > 0 && checkedChildCount !== node.children.length) this.selectionKeys[this.nodeKey(node)] = {\n        checked: false,\n        partialChecked: true\n      };else this.selectionKeys[this.nodeKey(node)] = {\n        checked: false,\n        partialChecked: false\n      };\n    }\n    let parent = node.parent;\n    if (parent) {\n      this.propagateUp(parent, check);\n    }\n  }\n  findIndexInSelection(node) {\n    let index = -1;\n    if (this.selection && this.selection.length) {\n      for (let i = 0; i < this.selection.length; i++) {\n        if (this.equals(node, this.selection[i])) {\n          index = i;\n          break;\n        }\n      }\n    }\n    return index;\n  }\n  isSingleSelectionMode() {\n    return this.selectionMode === 'single';\n  }\n  isMultipleSelectionMode() {\n    return this.selectionMode === 'multiple';\n  }\n  equals(node1, node2) {\n    return this.compareSelectionBy === 'equals' ? equals(node1, node2) : equals(node1.data, node2.data, this.dataKey);\n  }\n  filter(value, field, matchMode) {\n    if (this.filterTimeout) {\n      clearTimeout(this.filterTimeout);\n    }\n    if (!this.isFilterBlank(value)) {\n      this.filters[field] = {\n        value: value,\n        matchMode: matchMode\n      };\n    } else if (this.filters[field]) {\n      delete this.filters[field];\n    }\n    this.filterTimeout = setTimeout(() => {\n      this._filter();\n      this.filterTimeout = null;\n    }, this.filterDelay);\n  }\n  filterGlobal(value, matchMode) {\n    this.filter(value, 'global', matchMode);\n  }\n  isFilterBlank(filter) {\n    if (filter !== null && filter !== undefined) {\n      if (typeof filter === 'string' && filter.trim().length == 0 || Array.isArray(filter) && filter.length == 0) return true;else return false;\n    }\n    return true;\n  }\n  _filter() {\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      if (!this.value) {\n        return;\n      }\n      if (!this.hasFilter()) {\n        this.filteredNodes = null;\n        if (this.paginator) {\n          this.totalRecords = this.value ? this.value.length : 0;\n        }\n      } else {\n        let globalFilterFieldsArray;\n        if (this.filters['global']) {\n          if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;\n        }\n        this.filteredNodes = [];\n        const isStrictMode = this.filterMode === 'strict';\n        let isValueChanged = false;\n        for (let node of this.value) {\n          let copyNode = {\n            ...node\n          };\n          let localMatch = true;\n          let globalMatch = false;\n          let paramsWithoutNode;\n          for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n              let filterMeta = this.filters[prop];\n              let filterField = prop;\n              let filterValue = filterMeta.value;\n              let filterMatchMode = filterMeta.matchMode || 'startsWith';\n              let filterConstraint = this.filterService.filters[filterMatchMode];\n              paramsWithoutNode = {\n                filterField,\n                filterValue,\n                filterConstraint,\n                isStrictMode\n              };\n              if (isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode)) || !isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode))) {\n                localMatch = false;\n              }\n              if (!localMatch) {\n                break;\n              }\n            }\n          }\n          if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n            let copyNodeForGlobal = {\n              ...copyNode\n            };\n            let filterField = undefined;\n            let filterValue = this.filters['global'].value;\n            let filterConstraint = this.filterService.filters[this.filters['global'].matchMode];\n            paramsWithoutNode = {\n              filterField,\n              filterValue,\n              filterConstraint,\n              isStrictMode,\n              globalFilterFieldsArray\n            };\n            if (isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode)) || !isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode))) {\n              globalMatch = true;\n              copyNode = copyNodeForGlobal;\n            }\n          }\n          let matches = localMatch;\n          if (this.filters['global']) {\n            matches = localMatch && globalMatch;\n          }\n          if (matches) {\n            this.filteredNodes.push(copyNode);\n          }\n          isValueChanged = isValueChanged || !localMatch || globalMatch || localMatch && this.filteredNodes.length > 0 || !globalMatch && this.filteredNodes.length === 0;\n        }\n        if (!isValueChanged) {\n          this.filteredNodes = null;\n        }\n        if (this.paginator) {\n          this.totalRecords = this.filteredNodes ? this.filteredNodes.length : this.value ? this.value.length : 0;\n        }\n      }\n      this.cd.markForCheck();\n    }\n    this.first = 0;\n    const filteredValue = this.filteredNodes || this.value;\n    this.onFilter.emit({\n      filters: this.filters,\n      filteredValue: filteredValue\n    });\n    this.tableService.onUIUpdate(filteredValue);\n    this.updateSerializedValue();\n    if (this.scrollable) {\n      this.resetScrollTop();\n    }\n  }\n  findFilteredNodes(node, paramsWithoutNode) {\n    if (node) {\n      let matched = false;\n      if (node.children) {\n        let childNodes = [...node.children];\n        node.children = [];\n        for (let childNode of childNodes) {\n          let copyChildNode = {\n            ...childNode\n          };\n          if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n            matched = true;\n            node.children.push(copyChildNode);\n          }\n        }\n      }\n      if (matched) {\n        return true;\n      }\n    }\n  }\n  isFilterMatched(node, filterOptions) {\n    let {\n      filterField,\n      filterValue,\n      filterConstraint,\n      isStrictMode,\n      globalFilterFieldsArray\n    } = filterOptions;\n    let matched = false;\n    const isMatched = field => filterConstraint(resolveFieldData(node.data, field), filterValue, this.filterLocale);\n    matched = globalFilterFieldsArray?.length ? globalFilterFieldsArray.some(globalFilterField => isMatched(globalFilterField.field || globalFilterField)) : isMatched(filterField);\n    if (!matched || isStrictMode && !this.isNodeLeaf(node)) {\n      matched = this.findFilteredNodes(node, {\n        filterField,\n        filterValue,\n        filterConstraint,\n        isStrictMode,\n        globalFilterFieldsArray\n      }) || matched;\n    }\n    return matched;\n  }\n  isNodeLeaf(node) {\n    return node.leaf === false ? false : !(node.children && node.children.length);\n  }\n  hasFilter() {\n    let empty = true;\n    for (let prop in this.filters) {\n      if (this.filters.hasOwnProperty(prop)) {\n        empty = false;\n        break;\n      }\n    }\n    return !empty;\n  }\n  /**\n   * Clears the sort and paginator state.\n   * @group Method\n   */\n  reset() {\n    this._sortField = null;\n    this._sortOrder = 1;\n    this._multiSortMeta = null;\n    this.tableService.onSort(null);\n    this.filteredNodes = null;\n    this.filters = {};\n    this.first = 0;\n    if (this.lazy) {\n      this.onLazyLoad.emit(this.createLazyLoadMetadata());\n    } else {\n      this.totalRecords = this._value ? this._value.length : 0;\n    }\n  }\n  updateEditingCell(cell, data, field) {\n    this.editingCell = cell;\n    this.editingCellData = data;\n    this.editingCellField = field;\n    this.bindDocumentEditListener();\n  }\n  isEditingCellValid() {\n    return this.editingCell && find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n  }\n  bindDocumentEditListener() {\n    if (!this.documentEditListener) {\n      this.documentEditListener = this.renderer.listen(this.document, 'click', event => {\n        if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n          removeClass(this.editingCell, 'p-cell-editing');\n          this.editingCell = null;\n          this.onEditComplete.emit({\n            field: this.editingCellField,\n            data: this.editingCellData\n          });\n          this.editingCellField = null;\n          this.editingCellData = null;\n          this.unbindDocumentEditListener();\n        }\n        this.editingCellClick = false;\n      });\n    }\n  }\n  unbindDocumentEditListener() {\n    if (this.documentEditListener) {\n      this.documentEditListener();\n      this.documentEditListener = null;\n    }\n  }\n  ngOnDestroy() {\n    this.unbindDocumentEditListener();\n    this.editingCell = null;\n    this.editingCellField = null;\n    this.editingCellData = null;\n    this.initialized = null;\n    super.ngOnDestroy();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵTreeTable_BaseFactory;\n    return function TreeTable_Factory(__ngFactoryType__) {\n      return (ɵTreeTable_BaseFactory || (ɵTreeTable_BaseFactory = i0.ɵɵgetInheritedFactory(TreeTable)))(__ngFactoryType__ || TreeTable);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TreeTable,\n    selectors: [[\"p-treeTable\"], [\"p-treetable\"], [\"p-tree-table\"]],\n    contentQueries: function TreeTable_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c2, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c3, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c4, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c5, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c6, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c7, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c8, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c9, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c10, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c11, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c12, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c13, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c14, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c15, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c16, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c17, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c18, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c19, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c20, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c21, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c22, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c23, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c24, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c25, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._colGroupTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._captionTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._bodyTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._footerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._summaryTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._emptyMessageTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._paginatorLeftTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._paginatorRightTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._paginatorDropdownItemTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._frozenHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._frozenBodyTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._frozenFooterTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._frozenColGroupTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._loadingIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._reorderIndicatorUpIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._reorderIndicatorDownIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._sortIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._checkboxIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headerCheckboxIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._togglerIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._paginatorFirstPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._paginatorLastPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._paginatorPreviousPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._paginatorNextPageLinkIconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._loaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function TreeTable_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c26, 5);\n        i0.ɵɵviewQuery(_c27, 5);\n        i0.ɵɵviewQuery(_c28, 5);\n        i0.ɵɵviewQuery(_c29, 5);\n        i0.ɵɵviewQuery(_c30, 5);\n        i0.ɵɵviewQuery(_c31, 5);\n        i0.ɵɵviewQuery(_c32, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resizeHelperViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorUpViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.reorderIndicatorDownViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tableViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableFrozenViewChild = _t.first);\n      }\n    },\n    inputs: {\n      columns: \"columns\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      tableStyle: \"tableStyle\",\n      tableStyleClass: \"tableStyleClass\",\n      autoLayout: [2, \"autoLayout\", \"autoLayout\", booleanAttribute],\n      lazy: [2, \"lazy\", \"lazy\", booleanAttribute],\n      lazyLoadOnInit: [2, \"lazyLoadOnInit\", \"lazyLoadOnInit\", booleanAttribute],\n      paginator: [2, \"paginator\", \"paginator\", booleanAttribute],\n      rows: [2, \"rows\", \"rows\", numberAttribute],\n      first: [2, \"first\", \"first\", numberAttribute],\n      pageLinks: [2, \"pageLinks\", \"pageLinks\", numberAttribute],\n      rowsPerPageOptions: \"rowsPerPageOptions\",\n      alwaysShowPaginator: [2, \"alwaysShowPaginator\", \"alwaysShowPaginator\", booleanAttribute],\n      paginatorPosition: \"paginatorPosition\",\n      paginatorStyleClass: \"paginatorStyleClass\",\n      paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\",\n      currentPageReportTemplate: \"currentPageReportTemplate\",\n      showCurrentPageReport: [2, \"showCurrentPageReport\", \"showCurrentPageReport\", booleanAttribute],\n      showJumpToPageDropdown: [2, \"showJumpToPageDropdown\", \"showJumpToPageDropdown\", booleanAttribute],\n      showFirstLastIcon: [2, \"showFirstLastIcon\", \"showFirstLastIcon\", booleanAttribute],\n      showPageLinks: [2, \"showPageLinks\", \"showPageLinks\", booleanAttribute],\n      defaultSortOrder: [2, \"defaultSortOrder\", \"defaultSortOrder\", numberAttribute],\n      sortMode: \"sortMode\",\n      resetPageOnSort: [2, \"resetPageOnSort\", \"resetPageOnSort\", booleanAttribute],\n      customSort: [2, \"customSort\", \"customSort\", booleanAttribute],\n      selectionMode: \"selectionMode\",\n      contextMenuSelection: \"contextMenuSelection\",\n      contextMenuSelectionMode: \"contextMenuSelectionMode\",\n      dataKey: \"dataKey\",\n      metaKeySelection: [2, \"metaKeySelection\", \"metaKeySelection\", booleanAttribute],\n      compareSelectionBy: \"compareSelectionBy\",\n      rowHover: [2, \"rowHover\", \"rowHover\", booleanAttribute],\n      loading: [2, \"loading\", \"loading\", booleanAttribute],\n      loadingIcon: \"loadingIcon\",\n      showLoader: [2, \"showLoader\", \"showLoader\", booleanAttribute],\n      scrollable: [2, \"scrollable\", \"scrollable\", booleanAttribute],\n      scrollHeight: \"scrollHeight\",\n      virtualScroll: [2, \"virtualScroll\", \"virtualScroll\", booleanAttribute],\n      virtualScrollItemSize: [2, \"virtualScrollItemSize\", \"virtualScrollItemSize\", numberAttribute],\n      virtualScrollOptions: \"virtualScrollOptions\",\n      virtualScrollDelay: [2, \"virtualScrollDelay\", \"virtualScrollDelay\", numberAttribute],\n      frozenWidth: \"frozenWidth\",\n      frozenColumns: \"frozenColumns\",\n      resizableColumns: [2, \"resizableColumns\", \"resizableColumns\", booleanAttribute],\n      columnResizeMode: \"columnResizeMode\",\n      reorderableColumns: [2, \"reorderableColumns\", \"reorderableColumns\", booleanAttribute],\n      contextMenu: \"contextMenu\",\n      rowTrackBy: \"rowTrackBy\",\n      filters: \"filters\",\n      globalFilterFields: \"globalFilterFields\",\n      filterDelay: [2, \"filterDelay\", \"filterDelay\", numberAttribute],\n      filterMode: \"filterMode\",\n      filterLocale: \"filterLocale\",\n      paginatorLocale: \"paginatorLocale\",\n      totalRecords: \"totalRecords\",\n      sortField: \"sortField\",\n      sortOrder: \"sortOrder\",\n      multiSortMeta: \"multiSortMeta\",\n      selection: \"selection\",\n      value: \"value\",\n      virtualRowHeight: \"virtualRowHeight\",\n      selectionKeys: \"selectionKeys\",\n      showGridlines: [2, \"showGridlines\", \"showGridlines\", booleanAttribute]\n    },\n    outputs: {\n      selectionChange: \"selectionChange\",\n      contextMenuSelectionChange: \"contextMenuSelectionChange\",\n      onFilter: \"onFilter\",\n      onNodeExpand: \"onNodeExpand\",\n      onNodeCollapse: \"onNodeCollapse\",\n      onPage: \"onPage\",\n      onSort: \"onSort\",\n      onLazyLoad: \"onLazyLoad\",\n      sortFunction: \"sortFunction\",\n      onColResize: \"onColResize\",\n      onColReorder: \"onColReorder\",\n      onNodeSelect: \"onNodeSelect\",\n      onNodeUnselect: \"onNodeUnselect\",\n      onContextMenuSelect: \"onContextMenuSelect\",\n      onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\",\n      onEditInit: \"onEditInit\",\n      onEditComplete: \"onEditComplete\",\n      onEditCancel: \"onEditCancel\",\n      selectionKeysChange: \"selectionKeysChange\"\n    },\n    standalone: false,\n    features: [i0.ɵɵProvidersFeature([TreeTableService, TreeTableStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n    decls: 12,\n    vars: 21,\n    consts: [[\"container\", \"\"], [\"table\", \"\"], [\"scrollableView\", \"\"], [\"scrollableFrozenView\", \"\"], [\"resizeHelper\", \"\"], [\"reorderIndicatorUp\", \"\"], [\"reorderIndicatorDown\", \"\"], [\"data-scrollselectors\", \".p-treetable-scrollable-body\", 3, \"ngStyle\", \"ngClass\"], [\"class\", \"p-treetable-loading\", 4, \"ngIf\"], [\"class\", \"p-treetable-header\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-top\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"styleClass\", \"locale\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-treetable-wrapper\", 4, \"ngIf\"], [\"class\", \"p-treetable-scrollable-wrapper\", 4, \"ngIf\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"styleClass\", \"locale\", \"onPageChange\", 4, \"ngIf\"], [\"class\", \"p-treetable-footer\", 4, \"ngIf\"], [\"class\", \"p-column-resizer-helper\", \"style\", \"display:none\", 4, \"ngIf\"], [\"class\", \"p-treetable-reorder-indicator-up\", \"style\", \"display: none;\", 4, \"ngIf\"], [\"class\", \"p-treetable-reorder-indicator-down\", \"style\", \"display: none;\", 4, \"ngIf\"], [1, \"p-treetable-loading\"], [1, \"p-overlay-mask\", \"p-treetable-mask\"], [3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"spin\", \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-treetable-loading-icon\", 4, \"ngIf\"], [3, \"spin\", \"styleClass\"], [1, \"p-treetable-loading-icon\"], [4, \"ngTemplateOutlet\"], [1, \"p-treetable-header\"], [\"styleClass\", \"p-paginator-top\", 3, \"onPageChange\", \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"styleClass\", \"locale\"], [\"pTemplate\", \"firstpagelinkicon\"], [\"pTemplate\", \"previouspagelinkicon\"], [\"pTemplate\", \"lastpagelinkicon\"], [\"pTemplate\", \"nextpagelinkicon\"], [1, \"p-treetable-wrapper\"], [\"role\", \"table\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"rowgroup\", 1, \"p-treetable-thead\"], [\"role\", \"rowgroup\", 1, \"p-treetable-tbody\", 3, \"pTreeTableBody\", \"pTreeTableBodyTemplate\"], [\"role\", \"rowgroup\", 1, \"p-treetable-tfoot\"], [1, \"p-treetable-scrollable-wrapper\"], [\"class\", \"p-treetable-scrollable-view p-treetable-frozen-view\", 3, \"ttScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\", 4, \"ngIf\"], [1, \"p-treetable-scrollable-view\", 3, \"ttScrollableView\", \"frozen\", \"scrollHeight\", \"ngStyle\"], [1, \"p-treetable-scrollable-view\", \"p-treetable-frozen-view\", 3, \"ttScrollableView\", \"frozen\", \"ngStyle\", \"scrollHeight\"], [\"styleClass\", \"p-paginator-bottom\", 3, \"onPageChange\", \"rows\", \"first\", \"totalRecords\", \"pageLinkSize\", \"alwaysShow\", \"rowsPerPageOptions\", \"templateLeft\", \"templateRight\", \"dropdownAppendTo\", \"currentPageReportTemplate\", \"showFirstLastIcon\", \"dropdownItemTemplate\", \"showCurrentPageReport\", \"showJumpToPageDropdown\", \"showPageLinks\", \"styleClass\", \"locale\"], [1, \"p-treetable-footer\"], [1, \"p-column-resizer-helper\", 2, \"display\", \"none\"], [1, \"p-treetable-reorder-indicator-up\", 2, \"display\", \"none\"], [1, \"p-treetable-reorder-indicator-down\", 2, \"display\", \"none\"]],\n    template: function TreeTable_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 7, 0);\n        i0.ɵɵtemplate(2, TreeTable_div_2_Template, 4, 2, \"div\", 8)(3, TreeTable_div_3_Template, 2, 1, \"div\", 9)(4, TreeTable_p_paginator_4_Template, 5, 21, \"p-paginator\", 10)(5, TreeTable_div_5_Template, 9, 16, \"div\", 11)(6, TreeTable_div_6_Template, 4, 8, \"div\", 12)(7, TreeTable_p_paginator_7_Template, 5, 21, \"p-paginator\", 13)(8, TreeTable_div_8_Template, 2, 1, \"div\", 14)(9, TreeTable_div_9_Template, 2, 0, \"div\", 15)(10, TreeTable_span_10_Template, 4, 2, \"span\", 16)(11, TreeTable_span_11_Template, 4, 2, \"span\", 17);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction6(14, _c33, ctx.showGridlines, ctx.rowHover || ctx.selectionMode === \"single\" || ctx.selectionMode === \"multiple\", ctx.autoLayout, ctx.resizableColumns, ctx.resizableColumns && ctx.columnResizeMode === \"fit\", ctx.scrollable && ctx.scrollHeight === \"flex\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading && ctx.showLoader);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.captionTemplate || ctx._captionTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"top\" || ctx.paginatorPosition == \"both\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.scrollable);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.scrollable);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.paginator && (ctx.paginatorPosition === \"bottom\" || ctx.paginatorPosition == \"both\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.summaryTemplate || ctx._summaryTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.resizableColumns);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.reorderableColumns);\n      }\n    },\n    dependencies: () => [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Paginator, i3.PrimeTemplate, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, TTScrollableView, TTBody],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTable, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTable, p-treetable, p-tree-table',\n      standalone: false,\n      template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            data-scrollselectors=\".p-treetable-scrollable-body\"\n            [ngClass]=\"{\n                'p-treetable p-component': true,\n                'p-treetable-gridlines': showGridlines,\n                'p-treetable-hoverable-rows': rowHover || selectionMode === 'single' || selectionMode === 'multiple',\n                'p-treetable-auto-layout': autoLayout,\n                'p-treetable-resizable': resizableColumns,\n                'p-treetable-resizable-fit': resizableColumns && columnResizeMode === 'fit',\n                'p-treetable-flex-scrollable': scrollable && scrollHeight === 'flex'\n            }\"\n        >\n            <div class=\"p-treetable-loading\" *ngIf=\"loading && showLoader\">\n                <div class=\"p-overlay-mask p-treetable-mask\">\n                    <i *ngIf=\"loadingIcon\" [class]=\"'p-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n                    <ng-container *ngIf=\"!loadingIcon\">\n                        <SpinnerIcon *ngIf=\"!loadingIconTemplate && !_loadingIconTemplate\" [spin]=\"true\" [styleClass]=\"'p-treetable-loading-icon'\" />\n                        <span *ngIf=\"loadingIconTemplate || _loadingIconTemplate\" class=\"p-treetable-loading-icon\">\n                            <ng-template *ngTemplateOutlet=\"loadingIconTemplate || _loadingIconTemplate\"></ng-template>\n                        </span>\n                    </ng-container>\n                </div>\n            </div>\n            <div *ngIf=\"captionTemplate || _captionTemplate\" class=\"p-treetable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate || _captionTemplate\"></ng-container>\n            </div>\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-top\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate ?? _paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate ?? _paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate ?? _paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n                [styleClass]=\"paginatorStyleClass\"\n                [locale]=\"paginatorLocale\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n\n            <div class=\"p-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"table\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate || _colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead role=\"rowgroup\" class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate || _headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-treetable-tbody\" role=\"rowgroup\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate ?? _bodyTemplate\"></tbody>\n                    <tfoot class=\"p-treetable-tfoot\" role=\"rowgroup\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate || _footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n                <div\n                    class=\"p-treetable-scrollable-view p-treetable-frozen-view\"\n                    *ngIf=\"frozenColumns || frozenBodyTemplate || _frozenBodyTemplate\"\n                    #scrollableFrozenView\n                    [ttScrollableView]=\"frozenColumns\"\n                    [frozen]=\"true\"\n                    [ngStyle]=\"{ width: frozenWidth }\"\n                    [scrollHeight]=\"scrollHeight\"\n                ></div>\n                <div class=\"p-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{ left: frozenWidth, width: 'calc(100% - ' + frozenWidth + ')' }\"></div>\n            </div>\n\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-bottom\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate ?? _paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate ?? _paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate ?? _paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n                [styleClass]=\"paginatorStyleClass\"\n                [locale]=\"paginatorLocale\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n            <div *ngIf=\"summaryTemplate || _summaryTemplate\" class=\"p-treetable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate || _summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"p-treetable-reorder-indicator-up\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowDownIcon *ngIf=\"!reorderIndicatorUpIconTemplate && !_reorderIndicatorUpIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorUpIconTemplate || _reorderIndicatorUpIconTemplate\"></ng-template>\n            </span>\n            <span #reorderIndicatorDown class=\"p-treetable-reorder-indicator-down\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowUpIcon *ngIf=\"!reorderIndicatorDownIconTemplate && !_reorderIndicatorDownIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorDownIconTemplate || _reorderIndicatorDownIconTemplate\"></ng-template>\n            </span>\n        </div>\n    `,\n      providers: [TreeTableService, TreeTableStyle],\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    columns: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    tableStyle: [{\n      type: Input\n    }],\n    tableStyleClass: [{\n      type: Input\n    }],\n    autoLayout: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    lazy: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    lazyLoadOnInit: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    paginator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    rows: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    first: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    pageLinks: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    rowsPerPageOptions: [{\n      type: Input\n    }],\n    alwaysShowPaginator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    paginatorPosition: [{\n      type: Input\n    }],\n    paginatorStyleClass: [{\n      type: Input\n    }],\n    paginatorDropdownAppendTo: [{\n      type: Input\n    }],\n    currentPageReportTemplate: [{\n      type: Input\n    }],\n    showCurrentPageReport: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showJumpToPageDropdown: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showFirstLastIcon: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    showPageLinks: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    defaultSortOrder: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    sortMode: [{\n      type: Input\n    }],\n    resetPageOnSort: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    customSort: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectionMode: [{\n      type: Input\n    }],\n    contextMenuSelection: [{\n      type: Input\n    }],\n    contextMenuSelectionMode: [{\n      type: Input\n    }],\n    dataKey: [{\n      type: Input\n    }],\n    metaKeySelection: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareSelectionBy: [{\n      type: Input\n    }],\n    rowHover: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    loading: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    loadingIcon: [{\n      type: Input\n    }],\n    showLoader: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    scrollable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    scrollHeight: [{\n      type: Input\n    }],\n    virtualScroll: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    virtualScrollItemSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    virtualScrollOptions: [{\n      type: Input\n    }],\n    virtualScrollDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    frozenWidth: [{\n      type: Input\n    }],\n    frozenColumns: [{\n      type: Input\n    }],\n    resizableColumns: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    columnResizeMode: [{\n      type: Input\n    }],\n    reorderableColumns: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    contextMenu: [{\n      type: Input\n    }],\n    rowTrackBy: [{\n      type: Input\n    }],\n    filters: [{\n      type: Input\n    }],\n    globalFilterFields: [{\n      type: Input\n    }],\n    filterDelay: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    filterMode: [{\n      type: Input\n    }],\n    filterLocale: [{\n      type: Input\n    }],\n    paginatorLocale: [{\n      type: Input\n    }],\n    totalRecords: [{\n      type: Input\n    }],\n    sortField: [{\n      type: Input\n    }],\n    sortOrder: [{\n      type: Input\n    }],\n    multiSortMeta: [{\n      type: Input\n    }],\n    selection: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    virtualRowHeight: [{\n      type: Input\n    }],\n    selectionKeys: [{\n      type: Input\n    }],\n    showGridlines: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    contextMenuSelectionChange: [{\n      type: Output\n    }],\n    onFilter: [{\n      type: Output\n    }],\n    onNodeExpand: [{\n      type: Output\n    }],\n    onNodeCollapse: [{\n      type: Output\n    }],\n    onPage: [{\n      type: Output\n    }],\n    onSort: [{\n      type: Output\n    }],\n    onLazyLoad: [{\n      type: Output\n    }],\n    sortFunction: [{\n      type: Output\n    }],\n    onColResize: [{\n      type: Output\n    }],\n    onColReorder: [{\n      type: Output\n    }],\n    onNodeSelect: [{\n      type: Output\n    }],\n    onNodeUnselect: [{\n      type: Output\n    }],\n    onContextMenuSelect: [{\n      type: Output\n    }],\n    onHeaderCheckboxToggle: [{\n      type: Output\n    }],\n    onEditInit: [{\n      type: Output\n    }],\n    onEditComplete: [{\n      type: Output\n    }],\n    onEditCancel: [{\n      type: Output\n    }],\n    selectionKeysChange: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    resizeHelperViewChild: [{\n      type: ViewChild,\n      args: ['resizeHelper']\n    }],\n    reorderIndicatorUpViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorUp']\n    }],\n    reorderIndicatorDownViewChild: [{\n      type: ViewChild,\n      args: ['reorderIndicatorDown']\n    }],\n    tableViewChild: [{\n      type: ViewChild,\n      args: ['table']\n    }],\n    scrollableViewChild: [{\n      type: ViewChild,\n      args: ['scrollableView']\n    }],\n    scrollableFrozenViewChild: [{\n      type: ViewChild,\n      args: ['scrollableFrozenView']\n    }],\n    _colGroupTemplate: [{\n      type: ContentChild,\n      args: ['colgroup', {\n        descendants: false\n      }]\n    }],\n    _captionTemplate: [{\n      type: ContentChild,\n      args: ['caption', {\n        descendants: false\n      }]\n    }],\n    _headerTemplate: [{\n      type: ContentChild,\n      args: ['header', {\n        descendants: false\n      }]\n    }],\n    _bodyTemplate: [{\n      type: ContentChild,\n      args: ['body', {\n        descendants: false\n      }]\n    }],\n    _footerTemplate: [{\n      type: ContentChild,\n      args: ['footer', {\n        descendants: false\n      }]\n    }],\n    _summaryTemplate: [{\n      type: ContentChild,\n      args: ['summary', {\n        descendants: false\n      }]\n    }],\n    _emptyMessageTemplate: [{\n      type: ContentChild,\n      args: ['emptymessage', {\n        descendants: false\n      }]\n    }],\n    _paginatorLeftTemplate: [{\n      type: ContentChild,\n      args: ['paginatorleft', {\n        descendants: false\n      }]\n    }],\n    _paginatorRightTemplate: [{\n      type: ContentChild,\n      args: ['paginatorright', {\n        descendants: false\n      }]\n    }],\n    _paginatorDropdownItemTemplate: [{\n      type: ContentChild,\n      args: ['paginatordropdownitem', {\n        descendants: false\n      }]\n    }],\n    _frozenHeaderTemplate: [{\n      type: ContentChild,\n      args: ['frozenheader', {\n        descendants: false\n      }]\n    }],\n    _frozenBodyTemplate: [{\n      type: ContentChild,\n      args: ['frozenbody', {\n        descendants: false\n      }]\n    }],\n    _frozenFooterTemplate: [{\n      type: ContentChild,\n      args: ['frozenfooter', {\n        descendants: false\n      }]\n    }],\n    _frozenColGroupTemplate: [{\n      type: ContentChild,\n      args: ['frozencolgroup', {\n        descendants: false\n      }]\n    }],\n    _loadingIconTemplate: [{\n      type: ContentChild,\n      args: ['loadingicon', {\n        descendants: false\n      }]\n    }],\n    _reorderIndicatorUpIconTemplate: [{\n      type: ContentChild,\n      args: ['reorderindicatorupicon', {\n        descendants: false\n      }]\n    }],\n    _reorderIndicatorDownIconTemplate: [{\n      type: ContentChild,\n      args: ['reorderindicatordownicon', {\n        descendants: false\n      }]\n    }],\n    _sortIconTemplate: [{\n      type: ContentChild,\n      args: ['sorticon', {\n        descendants: false\n      }]\n    }],\n    _checkboxIconTemplate: [{\n      type: ContentChild,\n      args: ['checkboxicon', {\n        descendants: false\n      }]\n    }],\n    _headerCheckboxIconTemplate: [{\n      type: ContentChild,\n      args: ['headercheckboxicon', {\n        descendants: false\n      }]\n    }],\n    _togglerIconTemplate: [{\n      type: ContentChild,\n      args: ['togglericon', {\n        descendants: false\n      }]\n    }],\n    _paginatorFirstPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['paginatorfirstpagelinkicon', {\n        descendants: false\n      }]\n    }],\n    _paginatorLastPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['paginatorlastpagelinkicon', {\n        descendants: false\n      }]\n    }],\n    _paginatorPreviousPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['paginatorpreviouspagelinkicon', {\n        descendants: false\n      }]\n    }],\n    _paginatorNextPageLinkIconTemplate: [{\n      type: ContentChild,\n      args: ['paginatornextpagelinkicon', {\n        descendants: false\n      }]\n    }],\n    _loaderTemplate: [{\n      type: ContentChild,\n      args: ['loader', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass TTBody {\n  tt;\n  treeTableService;\n  cd;\n  columns;\n  template;\n  frozen;\n  serializedNodes;\n  scrollerOptions;\n  subscription;\n  constructor(tt, treeTableService, cd) {\n    this.tt = tt;\n    this.treeTableService = treeTableService;\n    this.cd = cd;\n    this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n      if (this.tt.virtualScroll) {\n        this.cd.detectChanges();\n      }\n    });\n  }\n  getScrollerOption(option, options) {\n    if (this.tt.virtualScroll) {\n      options = options || this.scrollerOptions;\n      return options ? options[option] : null;\n    }\n    return null;\n  }\n  getRowIndex(rowIndex) {\n    const getItemOptions = this.getScrollerOption('getItemOptions');\n    return getItemOptions ? getItemOptions(rowIndex).index : rowIndex;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function TTBody_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTBody)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TTBody,\n    selectors: [[\"\", \"pTreeTableBody\", \"\"]],\n    inputs: {\n      columns: [0, \"pTreeTableBody\", \"columns\"],\n      template: [0, \"pTreeTableBodyTemplate\", \"template\"],\n      frozen: [2, \"frozen\", \"frozen\", booleanAttribute],\n      serializedNodes: \"serializedNodes\",\n      scrollerOptions: \"scrollerOptions\"\n    },\n    standalone: false,\n    attrs: _c37,\n    decls: 2,\n    vars: 3,\n    consts: [[\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function TTBody_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TTBody_ng_template_0_Template, 1, 1, \"ng-template\", 0)(1, TTBody_ng_container_1_Template, 2, 5, \"ng-container\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.serializedNodes || ctx.tt.serializedValue)(\"ngForTrackBy\", ctx.tt.rowTrackBy);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.tt.isEmpty());\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTBody, [{\n    type: Component,\n    args: [{\n      selector: '[pTreeTableBody]',\n      standalone: false,\n      template: `\n        <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"serializedNodes || tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n            <ng-container *ngIf=\"serializedNode.visible\">\n                <ng-container\n                    *ngTemplateOutlet=\"\n                        template;\n                        context: {\n                            $implicit: serializedNode,\n                            node: serializedNode.node,\n                            rowData: serializedNode.node.data,\n                            columns: columns\n                        }\n                    \"\n                ></ng-container>\n            </ng-container>\n        </ng-template>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: { $implicit: columns, frozen: frozen }\"></ng-container>\n        </ng-container>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: TreeTableService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    columns: [{\n      type: Input,\n      args: ['pTreeTableBody']\n    }],\n    template: [{\n      type: Input,\n      args: ['pTreeTableBodyTemplate']\n    }],\n    frozen: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    serializedNodes: [{\n      type: Input\n    }],\n    scrollerOptions: [{\n      type: Input\n    }]\n  });\n})();\nclass TTScrollableView {\n  platformId;\n  renderer;\n  tt;\n  el;\n  zone;\n  columns;\n  frozen;\n  scrollHeaderViewChild;\n  scrollHeaderBoxViewChild;\n  scrollBodyViewChild;\n  scrollTableViewChild;\n  scrollLoadingTableViewChild;\n  scrollFooterViewChild;\n  scrollFooterBoxViewChild;\n  scrollableAlignerViewChild;\n  scroller;\n  headerScrollListener;\n  bodyScrollListener;\n  footerScrollListener;\n  frozenSiblingBody;\n  totalRecordsSubscription;\n  _scrollHeight;\n  preventBodyScrollPropagation;\n  get scrollHeight() {\n    return this._scrollHeight;\n  }\n  set scrollHeight(val) {\n    this._scrollHeight = val;\n    if (val != null && (val.includes('%') || val.includes('calc'))) {\n      console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.');\n    }\n  }\n  constructor(platformId, renderer, tt, el, zone) {\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!this.frozen) {\n        if (this.tt.frozenColumns || this.tt.frozenBodyTemplate || this.tt._frozenBodyTemplate) {\n          addClass(this.el.nativeElement, 'p-treetable-unfrozen-view');\n        }\n        let frozenView = this.el.nativeElement.previousElementSibling;\n        if (frozenView) {\n          if (this.tt.virtualScroll) this.frozenSiblingBody = findSingle(frozenView, '.p-scroller-viewport');else this.frozenSiblingBody = findSingle(frozenView, '.p-treetable-scrollable-body');\n        }\n        if (this.scrollHeight) {\n          let scrollBarWidth = calculateScrollbarWidth();\n          this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n          if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n            this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n          }\n        }\n      } else {\n        if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n          this.scrollableAlignerViewChild.nativeElement.style.height = calculateScrollbarHeight() + 'px';\n        }\n      }\n      this.bindEvents();\n    }\n  }\n  bindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n          this.headerScrollListener = this.renderer.listen(this.scrollHeaderBoxViewChild?.nativeElement, 'scroll', this.onHeaderScroll.bind(this));\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n          this.footerScrollListener = this.renderer.listen(this.scrollFooterViewChild.nativeElement, 'scroll', this.onFooterScroll.bind(this));\n        }\n        if (!this.frozen) {\n          if (this.tt.virtualScroll) {\n            this.bodyScrollListener = this.renderer.listen((this.scroller?.getElementRef()).nativeElement, 'scroll', this.onBodyScroll.bind(this));\n          } else {\n            this.bodyScrollListener = this.renderer.listen(this.scrollBodyViewChild?.nativeElement, 'scroll', this.onBodyScroll.bind(this));\n          }\n        }\n      });\n    }\n  }\n  unbindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n        if (this.headerScrollListener) {\n          this.headerScrollListener();\n          this.headerScrollListener = null;\n        }\n      }\n      if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n        if (this.footerScrollListener) {\n          this.footerScrollListener();\n          this.footerScrollListener = null;\n        }\n      }\n      if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n        if (this.bodyScrollListener) {\n          this.bodyScrollListener();\n          this.bodyScrollListener = null;\n        }\n      }\n      if (this.scroller && this.scroller.getElementRef()) {\n        if (this.bodyScrollListener) {\n          this.bodyScrollListener();\n          this.bodyScrollListener = null;\n        }\n      }\n    }\n  }\n  onHeaderScroll() {\n    const scrollLeft = this.scrollHeaderViewChild?.nativeElement.scrollLeft;\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n    this.preventBodyScrollPropagation = true;\n  }\n  onFooterScroll() {\n    const scrollLeft = this.scrollFooterViewChild?.nativeElement.scrollLeft;\n    this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n    }\n    this.preventBodyScrollPropagation = true;\n  }\n  onBodyScroll(event) {\n    if (this.preventBodyScrollPropagation) {\n      this.preventBodyScrollPropagation = false;\n      return;\n    }\n    if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n      this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n    }\n    if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n      this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n    }\n    if (this.frozenSiblingBody) {\n      this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n    }\n  }\n  scrollToVirtualIndex(index) {\n    if (this.scroller) {\n      this.scroller.scrollToIndex(index);\n    }\n  }\n  scrollTo(options) {\n    if (this.scroller) {\n      this.scroller.scrollTo(options);\n    } else {\n      if (this.scrollBodyViewChild?.nativeElement.scrollTo) {\n        this.scrollBodyViewChild.nativeElement.scrollTo(options);\n      } else {\n        this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n        this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n    this.frozenSiblingBody = null;\n  }\n  static ɵfac = function TTScrollableView_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTScrollableView)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TTScrollableView,\n    selectors: [[\"\", \"ttScrollableView\", \"\"]],\n    viewQuery: function TTScrollableView_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c40, 5);\n        i0.ɵɵviewQuery(_c41, 5);\n        i0.ɵɵviewQuery(_c42, 5);\n        i0.ɵɵviewQuery(_c43, 5);\n        i0.ɵɵviewQuery(_c44, 5);\n        i0.ɵɵviewQuery(_c45, 5);\n        i0.ɵɵviewQuery(_c46, 5);\n        i0.ɵɵviewQuery(_c47, 5);\n        i0.ɵɵviewQuery(_c48, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollHeaderViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollHeaderBoxViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollBodyViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollTableViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollLoadingTableViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollFooterViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollFooterBoxViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollableAlignerViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n      }\n    },\n    inputs: {\n      columns: [0, \"ttScrollableView\", \"columns\"],\n      frozen: [2, \"frozen\", \"frozen\", booleanAttribute],\n      scrollHeight: \"scrollHeight\"\n    },\n    standalone: false,\n    attrs: _c49,\n    decls: 13,\n    vars: 13,\n    consts: [[\"scrollHeader\", \"\"], [\"scrollHeaderBox\", \"\"], [\"buildInItems\", \"\"], [\"scroller\", \"\"], [\"content\", \"\"], [\"loader\", \"\"], [\"scrollBody\", \"\"], [\"scrollTable\", \"\"], [\"scrollableAligner\", \"\"], [\"scrollFooter\", \"\"], [\"scrollFooterBox\", \"\"], [1, \"p-treetable-scrollable-header\"], [1, \"p-treetable-scrollable-header-box\"], [1, \"p-treetable-scrollable-header-table\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"rowgroup\", 1, \"p-treetable-thead\"], [\"styleClass\", \"p-treetable-scrollable-body\", 3, \"items\", \"style\", \"scrollHeight\", \"itemSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"p-treetable-scrollable-footer\", 4, \"ngIf\"], [\"styleClass\", \"p-treetable-scrollable-body\", 3, \"onLazyLoad\", \"items\", \"scrollHeight\", \"itemSize\", \"lazy\", \"options\"], [1, \"p-treetable-scrollable-body\", 3, \"ngStyle\"], [\"role\", \"table\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"rowgroup\", 1, \"p-treetable-tbody\", 3, \"pTreeTableBody\", \"pTreeTableBodyTemplate\", \"serializedNodes\", \"frozen\"], [\"style\", \"background-color:transparent\", 4, \"ngIf\"], [2, \"background-color\", \"transparent\"], [1, \"p-treetable-scrollable-footer\"], [1, \"p-treetable-scrollable-footer-box\"], [1, \"p-treetable-scrollable-footer-table\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"rowgroup\", 1, \"p-treetable-tfoot\"]],\n    template: function TTScrollableView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 11, 0)(2, \"div\", 12, 1)(4, \"table\", 13);\n        i0.ɵɵtemplate(5, TTScrollableView_ng_container_5_Template, 1, 0, \"ng-container\", 14);\n        i0.ɵɵelementStart(6, \"thead\", 15);\n        i0.ɵɵtemplate(7, TTScrollableView_ng_container_7_Template, 1, 0, \"ng-container\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(8, TTScrollableView_p_scroller_8_Template, 5, 10, \"p-scroller\", 16)(9, TTScrollableView_ng_container_9_Template, 4, 10, \"ng-container\", 17)(10, TTScrollableView_ng_template_10_Template, 5, 15, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(12, TTScrollableView_div_12_Template, 8, 10, \"div\", 18);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.tt.tableStyleClass)(\"ngStyle\", ctx.tt.tableStyle);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.tt.frozenColGroupTemplate || ctx.tt._frozenColGroupTemplate || ctx.tt.colGroupTemplate || ctx.tt._colGroupTemplate : ctx.tt.colGroupTemplate || ctx.tt._colGroupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(9, _c34, ctx.columns));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.frozen ? ctx.tt.frozenHeaderTemplate || ctx.tt._frozenHeaderTemplate || ctx.tt.headerTemplate || ctx.tt._headerTemplate : ctx.tt.headerTemplate || ctx.tt._headerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c34, ctx.columns));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.tt.virtualScroll);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.tt.virtualScroll);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.tt.footerTemplate || ctx.tt._footerTemplate);\n      }\n    },\n    dependencies: () => [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, Scroller, TTBody],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTScrollableView, [{\n    type: Component,\n    args: [{\n      selector: '[ttScrollableView]',\n      standalone: false,\n      template: `\n        <div #scrollHeader class=\"p-treetable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-treetable-scrollable-header-box\">\n                <table class=\"p-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container\n                        *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                    ></ng-container>\n                    <thead role=\"rowgroup\" class=\"p-treetable-thead\">\n                        <ng-container\n                            *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate || tt._frozenHeaderTemplate || tt.headerTemplate || tt._headerTemplate : tt.headerTemplate || tt._headerTemplate; context: { $implicit: columns }\"\n                        ></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n\n        <p-scroller\n            *ngIf=\"tt.virtualScroll\"\n            #scroller\n            [items]=\"tt.serializedValue\"\n            styleClass=\"p-treetable-scrollable-body\"\n            [style]=\"{ height: tt.scrollHeight !== 'flex' ? tt.scrollHeight : undefined }\"\n            [scrollHeight]=\"scrollHeight !== 'flex' ? undefined : '100%'\"\n            [itemSize]=\"tt.virtualScrollItemSize || tt._virtualRowHeight\"\n            [lazy]=\"tt.lazy\"\n            (onLazyLoad)=\"tt.onLazyItemLoad($event)\"\n            [options]=\"tt.virtualScrollOptions\"\n        >\n            <ng-template #content let-items let-scrollerOptions=\"options\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n            </ng-template>\n            <ng-container *ngIf=\"tt.loaderTemplate || tt._loaderTemplate\">\n                <ng-template #loader let-scrollerOptions=\"options\">\n                    <ng-container *ngTemplateOutlet=\"tt.loaderTemplate || tt._loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                </ng-template>\n            </ng-container>\n        </p-scroller>\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <div\n                #scrollBody\n                class=\"p-treetable-scrollable-body\"\n                [ngStyle]=\"{\n                    'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined,\n                    'overflow-y': !frozen && tt.scrollHeight ? 'scroll' : undefined\n                }\"\n            >\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: serializedValue, options: {} }\"></ng-container>\n            </div>\n        </ng-container>\n\n        <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n            <table role=\"table\" #scrollTable [class]=\"tt.tableStyleClass\" [ngClass]=\"scrollerOptions.contentStyleClass\" [ngStyle]=\"tt.tableStyle\" [style]=\"scrollerOptions.contentStyle\">\n                <ng-container\n                    *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                ></ng-container>\n                <tbody\n                    role=\"rowgroup\"\n                    class=\"p-treetable-tbody\"\n                    [pTreeTableBody]=\"columns\"\n                    [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate || tt._frozenBodyTemplate || tt.bodyTemplate || tt._bodyTemplate : tt.bodyTemplate || tt._bodyTemplate\"\n                    [serializedNodes]=\"items\"\n                    [frozen]=\"frozen\"\n                ></tbody>\n            </table>\n            <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        </ng-template>\n\n        <div #scrollFooter *ngIf=\"tt.footerTemplate || tt._footerTemplate\" class=\"p-treetable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-treetable-scrollable-footer-box\">\n                <table class=\"p-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container\n                        *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                    ></ng-container>\n                    <tfoot role=\"rowgroup\" class=\"p-treetable-tfoot\">\n                        <ng-container\n                            *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate || tt._frozenFooterTemplate || tt.footerTemplate || tt._footerTemplate : tt.footerTemplate || tt._footerTemplate; context: { $implicit: columns }\"\n                        ></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: TreeTable\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    columns: [{\n      type: Input,\n      args: ['ttScrollableView']\n    }],\n    frozen: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    scrollHeaderViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeader']\n    }],\n    scrollHeaderBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollHeaderBox']\n    }],\n    scrollBodyViewChild: [{\n      type: ViewChild,\n      args: ['scrollBody']\n    }],\n    scrollTableViewChild: [{\n      type: ViewChild,\n      args: ['scrollTable']\n    }],\n    scrollLoadingTableViewChild: [{\n      type: ViewChild,\n      args: ['loadingTable']\n    }],\n    scrollFooterViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooter']\n    }],\n    scrollFooterBoxViewChild: [{\n      type: ViewChild,\n      args: ['scrollFooterBox']\n    }],\n    scrollableAlignerViewChild: [{\n      type: ViewChild,\n      args: ['scrollableAligner']\n    }],\n    scroller: [{\n      type: ViewChild,\n      args: ['scroller']\n    }],\n    scrollHeight: [{\n      type: Input\n    }]\n  });\n})();\nclass TTSortableColumn {\n  tt;\n  field;\n  ttSortableColumnDisabled;\n  sorted;\n  subscription;\n  get ariaSorted() {\n    if (this.sorted && this.tt.sortOrder < 0) return 'descending';else if (this.sorted && this.tt.sortOrder > 0) return 'ascending';else return 'none';\n  }\n  constructor(tt) {\n    this.tt = tt;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\n        this.updateSortState();\n      });\n    }\n  }\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.updateSortState();\n    }\n  }\n  updateSortState() {\n    this.sorted = this.tt.isSorted(this.field);\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.updateSortState();\n      this.tt.sort({\n        originalEvent: event,\n        field: this.field\n      });\n      clearSelection();\n    }\n  }\n  onEnterKey(event) {\n    this.onClick(event);\n  }\n  isEnabled() {\n    return this.ttSortableColumnDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function TTSortableColumn_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTSortableColumn)(i0.ɵɵdirectiveInject(TreeTable));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTSortableColumn,\n    selectors: [[\"\", \"ttSortableColumn\", \"\"]],\n    hostVars: 7,\n    hostBindings: function TTSortableColumn_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function TTSortableColumn_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown.enter\", function TTSortableColumn_keydown_enter_HostBindingHandler($event) {\n          return ctx.onEnterKey($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? \"0\" : null)(\"role\", \"columnheader\")(\"aria-sort\", ctx.ariaSorted);\n        i0.ɵɵclassProp(\"p-sortable-column\", ctx.isEnabled())(\"p-treetable-column-sorted\", ctx.sorted);\n      }\n    },\n    inputs: {\n      field: [0, \"ttSortableColumn\", \"field\"],\n      ttSortableColumnDisabled: [2, \"ttSortableColumnDisabled\", \"ttSortableColumnDisabled\", booleanAttribute]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSortableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttSortableColumn]',\n      standalone: false,\n      host: {\n        '[class.p-sortable-column]': 'isEnabled()',\n        '[class.p-treetable-column-sorted]': 'sorted',\n        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n        '[attr.role]': '\"columnheader\"',\n        '[attr.aria-sort]': 'ariaSorted'\n      }\n    }]\n  }], () => [{\n    type: TreeTable\n  }], {\n    field: [{\n      type: Input,\n      args: ['ttSortableColumn']\n    }],\n    ttSortableColumnDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onEnterKey: [{\n      type: HostListener,\n      args: ['keydown.enter', ['$event']]\n    }]\n  });\n})();\nclass TTSortIcon {\n  tt;\n  cd;\n  field;\n  ariaLabelDesc;\n  ariaLabelAsc;\n  subscription;\n  sortOrder;\n  constructor(tt, cd) {\n    this.tt = tt;\n    this.cd = cd;\n    this.subscription = this.tt.tableService.sortSource$.subscribe(sortMeta => {\n      this.updateSortState();\n      this.cd.markForCheck();\n    });\n  }\n  ngOnInit() {\n    this.updateSortState();\n  }\n  onClick(event) {\n    event.preventDefault();\n  }\n  updateSortState() {\n    if (this.tt.sortMode === 'single') {\n      this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;\n    } else if (this.tt.sortMode === 'multiple') {\n      let sortMeta = this.tt.getSortMeta(this.field);\n      this.sortOrder = sortMeta ? sortMeta.order : 0;\n    }\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function TTSortIcon_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTSortIcon)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TTSortIcon,\n    selectors: [[\"p-treeTableSortIcon\"], [\"p-treetable-sort-icon\"], [\"p-tree-table-sort-icon\"]],\n    inputs: {\n      field: \"field\",\n      ariaLabelDesc: \"ariaLabelDesc\",\n      ariaLabelAsc: \"ariaLabelAsc\"\n    },\n    standalone: false,\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"p-sortable-column-icon\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-sortable-column-icon\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function TTSortIcon_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TTSortIcon_ng_container_0_Template, 4, 3, \"ng-container\", 0)(1, TTSortIcon_span_1_Template, 2, 4, \"span\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.tt.sortIconTemplate && !ctx.tt._sortIconTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.tt.sortIconTemplate || ctx.tt._sortIconTemplate);\n      }\n    },\n    dependencies: () => [i1.NgIf, i1.NgTemplateOutlet, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSortIcon, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableSortIcon, p-treetable-sort-icon, p-tree-table-sort-icon',\n      standalone: false,\n      template: ` <ng-container *ngIf=\"!tt.sortIconTemplate && !tt._sortIconTemplate\">\n            <SortAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 0\" />\n            <SortAmountUpAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 1\" />\n            <SortAmountDownIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === -1\" />\n        </ng-container>\n        <span *ngIf=\"tt.sortIconTemplate || tt._sortIconTemplate\" class=\"p-sortable-column-icon\">\n            <ng-template *ngTemplateOutlet=\"tt.sortIconTemplate || tt._sortIconTemplate; context: { $implicit: sortOrder }\"></ng-template>\n        </span>`,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    field: [{\n      type: Input\n    }],\n    ariaLabelDesc: [{\n      type: Input\n    }],\n    ariaLabelAsc: [{\n      type: Input\n    }]\n  });\n})();\nclass TTResizableColumn {\n  document;\n  platformId;\n  renderer;\n  tt;\n  el;\n  zone;\n  ttResizableColumnDisabled;\n  resizer;\n  resizerMouseDownListener;\n  documentMouseMoveListener;\n  documentMouseUpListener;\n  constructor(document, platformId, renderer, tt, el, zone) {\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.isEnabled()) {\n        addClass(this.el.nativeElement, 'p-resizable-column');\n        this.resizer = this.renderer.createElement('span');\n        this.renderer.addClass(this.resizer, 'p-column-resizer');\n        this.renderer.appendChild(this.el.nativeElement, this.resizer);\n        this.zone.runOutsideAngular(() => {\n          this.resizerMouseDownListener = this.renderer.listen(this.resizer, 'mousedown', this.onMouseDown.bind(this));\n        });\n      }\n    }\n  }\n  bindDocumentEvents() {\n    this.zone.runOutsideAngular(() => {\n      this.documentMouseMoveListener = this.renderer.listen(this.document, 'mousemove', this.onDocumentMouseMove.bind(this));\n      this.documentMouseUpListener = this.renderer.listen(this.document, 'mouseup', this.onDocumentMouseUp.bind(this));\n    });\n  }\n  unbindDocumentEvents() {\n    if (this.documentMouseMoveListener) {\n      this.documentMouseMoveListener();\n      this.documentMouseMoveListener = null;\n    }\n    if (this.documentMouseUpListener) {\n      this.documentMouseUpListener();\n      this.documentMouseUpListener = null;\n    }\n  }\n  onMouseDown(event) {\n    this.tt.onColumnResizeBegin(event);\n    this.bindDocumentEvents();\n  }\n  onDocumentMouseMove(event) {\n    this.tt.onColumnResize(event);\n  }\n  onDocumentMouseUp(event) {\n    this.tt.onColumnResizeEnd(event, this.el.nativeElement);\n    this.unbindDocumentEvents();\n  }\n  isEnabled() {\n    return this.ttResizableColumnDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.resizerMouseDownListener) {\n      this.resizerMouseDownListener();\n      this.resizerMouseDownListener = null;\n    }\n    this.unbindDocumentEvents();\n  }\n  static ɵfac = function TTResizableColumn_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTResizableColumn)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTResizableColumn,\n    selectors: [[\"\", \"ttResizableColumn\", \"\"]],\n    inputs: {\n      ttResizableColumnDisabled: [2, \"ttResizableColumnDisabled\", \"ttResizableColumnDisabled\", booleanAttribute]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTResizableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttResizableColumn]',\n      standalone: false\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: TreeTable\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    ttResizableColumnDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass TTReorderableColumn {\n  document;\n  platformId;\n  renderer;\n  tt;\n  el;\n  zone;\n  ttReorderableColumnDisabled;\n  dragStartListener;\n  dragOverListener;\n  dragEnterListener;\n  dragLeaveListener;\n  mouseDownListener;\n  constructor(document, platformId, renderer, tt, el, zone) {\n    this.document = document;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      this.bindEvents();\n    }\n  }\n  bindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        this.mouseDownListener = this.renderer.listen(this.el.nativeElement, 'mousedown', this.onMouseDown.bind(this));\n        this.dragStartListener = this.renderer.listen(this.el.nativeElement, 'dragstart', this.onDragStart.bind(this));\n        this.dragOverListener = this.renderer.listen(this.el.nativeElement, 'dragover', this.onDragEnter.bind(this));\n        this.dragEnterListener = this.renderer.listen(this.el.nativeElement, 'dragenter', this.onDragEnter.bind(this));\n        this.dragLeaveListener = this.renderer.listen(this.el.nativeElement, 'dragleave', this.onDragLeave.bind(this));\n      });\n    }\n  }\n  unbindEvents() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.mouseDownListener) {\n        this.mouseDownListener();\n        this.mouseDownListener = null;\n      }\n      if (this.dragOverListener) {\n        this.dragOverListener();\n        this.dragOverListener = null;\n      }\n      if (this.dragEnterListener) {\n        this.dragEnterListener();\n        this.dragEnterListener = null;\n      }\n      if (this.dragLeaveListener) {\n        this.dragLeaveListener();\n        this.dragLeaveListener = null;\n      }\n    }\n  }\n  onMouseDown(event) {\n    if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || hasClass(event.target, 'p-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;\n  }\n  onDragStart(event) {\n    this.tt.onColumnDragStart(event, this.el.nativeElement);\n  }\n  onDragOver(event) {\n    event.preventDefault();\n  }\n  onDragEnter(event) {\n    this.tt.onColumnDragEnter(event, this.el.nativeElement);\n  }\n  onDragLeave(event) {\n    this.tt.onColumnDragLeave(event);\n  }\n  onDrop(event) {\n    if (this.isEnabled()) {\n      this.tt.onColumnDrop(event, this.el.nativeElement);\n    }\n  }\n  isEnabled() {\n    return this.ttReorderableColumnDisabled !== true;\n  }\n  ngOnDestroy() {\n    this.unbindEvents();\n  }\n  static ɵfac = function TTReorderableColumn_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTReorderableColumn)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTReorderableColumn,\n    selectors: [[\"\", \"ttReorderableColumn\", \"\"]],\n    hostBindings: function TTReorderableColumn_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"drop\", function TTReorderableColumn_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        });\n      }\n    },\n    inputs: {\n      ttReorderableColumnDisabled: [2, \"ttReorderableColumnDisabled\", \"ttReorderableColumnDisabled\", booleanAttribute]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTReorderableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttReorderableColumn]',\n      standalone: false\n    }]\n  }], () => [{\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.Renderer2\n  }, {\n    type: TreeTable\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    ttReorderableColumnDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\nclass TTSelectableRow {\n  tt;\n  tableService;\n  rowNode;\n  ttSelectableRowDisabled;\n  selected;\n  subscription;\n  constructor(tt, tableService) {\n    this.tt = tt;\n    this.tableService = tableService;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.tt.isSelected(this.rowNode.node);\n      });\n    }\n  }\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.tt.isSelected(this.rowNode.node);\n    }\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowClick({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n    }\n  }\n  onKeyDown(event) {\n    switch (event.code) {\n      case 'Enter':\n      case 'Space':\n        this.onEnterKey(event);\n        break;\n      default:\n        break;\n    }\n  }\n  onTouchEnd(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowTouchEnd(event);\n    }\n  }\n  onEnterKey(event) {\n    if (this.tt.selectionMode === 'checkbox') {\n      this.tt.toggleNodeWithCheckbox({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n    } else {\n      this.onClick(event);\n    }\n    event.preventDefault();\n  }\n  isEnabled() {\n    return this.ttSelectableRowDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function TTSelectableRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTSelectableRow)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTSelectableRow,\n    selectors: [[\"\", \"ttSelectableRow\", \"\"]],\n    hostVars: 3,\n    hostBindings: function TTSelectableRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function TTSelectableRow_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown\", function TTSelectableRow_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"touchend\", function TTSelectableRow_touchend_HostBindingHandler($event) {\n          return ctx.onTouchEnd($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-checked\", ctx.selected);\n        i0.ɵɵclassProp(\"p-treetable-row-selected\", ctx.selected);\n      }\n    },\n    inputs: {\n      rowNode: [0, \"ttSelectableRow\", \"rowNode\"],\n      ttSelectableRowDisabled: [2, \"ttSelectableRowDisabled\", \"ttSelectableRowDisabled\", booleanAttribute]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSelectableRow, [{\n    type: Directive,\n    args: [{\n      selector: '[ttSelectableRow]',\n      standalone: false,\n      host: {\n        '[class.p-treetable-row-selected]': 'selected',\n        '[attr.aria-checked]': 'selected'\n      }\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: TreeTableService\n  }], {\n    rowNode: [{\n      type: Input,\n      args: ['ttSelectableRow']\n    }],\n    ttSelectableRowDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    onTouchEnd: [{\n      type: HostListener,\n      args: ['touchend', ['$event']]\n    }]\n  });\n})();\nclass TTSelectableRowDblClick {\n  tt;\n  tableService;\n  rowNode;\n  ttSelectableRowDisabled;\n  selected;\n  subscription;\n  constructor(tt, tableService) {\n    this.tt = tt;\n    this.tableService = tableService;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n        this.selected = this.tt.isSelected(this.rowNode.node);\n      });\n    }\n  }\n  ngOnInit() {\n    if (this.isEnabled()) {\n      this.selected = this.tt.isSelected(this.rowNode.node);\n    }\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowClick({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n    }\n  }\n  isEnabled() {\n    return this.ttSelectableRowDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function TTSelectableRowDblClick_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTSelectableRowDblClick)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTSelectableRowDblClick,\n    selectors: [[\"\", \"ttSelectableRowDblClick\", \"\"]],\n    hostVars: 2,\n    hostBindings: function TTSelectableRowDblClick_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"dblclick\", function TTSelectableRowDblClick_dblclick_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-treetable-row-selected\", ctx.selected);\n      }\n    },\n    inputs: {\n      rowNode: [0, \"ttSelectableRowDblClick\", \"rowNode\"],\n      ttSelectableRowDisabled: [2, \"ttSelectableRowDisabled\", \"ttSelectableRowDisabled\", booleanAttribute]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTSelectableRowDblClick, [{\n    type: Directive,\n    args: [{\n      selector: '[ttSelectableRowDblClick]',\n      standalone: false,\n      host: {\n        '[class.p-treetable-row-selected]': 'selected'\n      }\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: TreeTableService\n  }], {\n    rowNode: [{\n      type: Input,\n      args: ['ttSelectableRowDblClick']\n    }],\n    ttSelectableRowDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['dblclick', ['$event']]\n    }]\n  });\n})();\nclass TTContextMenuRow {\n  tt;\n  tableService;\n  el;\n  rowNode;\n  ttContextMenuRowDisabled;\n  selected;\n  subscription;\n  constructor(tt, tableService, el) {\n    this.tt = tt;\n    this.tableService = tableService;\n    this.el = el;\n    if (this.isEnabled()) {\n      this.subscription = this.tt.tableService.contextMenuSource$.subscribe(node => {\n        this.selected = this.tt.equals(this.rowNode.node, node);\n      });\n    }\n  }\n  onContextMenu(event) {\n    if (this.isEnabled()) {\n      this.tt.handleRowRightClick({\n        originalEvent: event,\n        rowNode: this.rowNode\n      });\n      this.el.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n  isEnabled() {\n    return this.ttContextMenuRowDisabled !== true;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function TTContextMenuRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTContextMenuRow)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTContextMenuRow,\n    selectors: [[\"\", \"ttContextMenuRow\", \"\"]],\n    hostVars: 3,\n    hostBindings: function TTContextMenuRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"contextmenu\", function TTContextMenuRow_contextmenu_HostBindingHandler($event) {\n          return ctx.onContextMenu($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.isEnabled() ? 0 : undefined);\n        i0.ɵɵclassProp(\"p-treetable-contextmenu-row-selected\", ctx.selected);\n      }\n    },\n    inputs: {\n      rowNode: [0, \"ttContextMenuRow\", \"rowNode\"],\n      ttContextMenuRowDisabled: [2, \"ttContextMenuRowDisabled\", \"ttContextMenuRowDisabled\", booleanAttribute]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTContextMenuRow, [{\n    type: Directive,\n    args: [{\n      selector: '[ttContextMenuRow]',\n      standalone: false,\n      host: {\n        '[class.p-treetable-contextmenu-row-selected]': 'selected',\n        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n      }\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: TreeTableService\n  }, {\n    type: i0.ElementRef\n  }], {\n    rowNode: [{\n      type: Input,\n      args: ['ttContextMenuRow']\n    }],\n    ttContextMenuRowDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onContextMenu: [{\n      type: HostListener,\n      args: ['contextmenu', ['$event']]\n    }]\n  });\n})();\nclass TTCheckbox {\n  tt;\n  tableService;\n  cd;\n  disabled;\n  rowNode;\n  checked;\n  partialChecked;\n  focused;\n  subscription;\n  constructor(tt, tableService, cd) {\n    this.tt = tt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n      if (this.tt.selectionKeys) {\n        this.checked = this.tt.isNodeSelected(this.rowNode.node);\n        this.partialChecked = this.tt.isNodePartialSelected(this.rowNode.node);\n      } else {\n        this.checked = this.tt.isSelected(this.rowNode.node);\n        this.partialChecked = this.rowNode.node.partialSelected;\n      }\n      this.cd.markForCheck();\n    });\n  }\n  ngOnInit() {\n    if (this.tt.selectionKeys) {\n      this.checked = this.tt.isNodeSelected(this.rowNode.node);\n      this.partialChecked = this.tt.isNodePartialSelected(this.rowNode.node);\n    } else {\n      // for backward compatibility\n      this.checked = this.tt.isSelected(this.rowNode.node);\n      this.partialChecked = this.rowNode.node.partialSelected;\n    }\n  }\n  onClick(event) {\n    if (!this.disabled) {\n      if (this.tt.selectionKeys) {\n        const _check = !this.checked;\n        this.tt.toggleCheckbox({\n          originalEvent: event,\n          check: _check,\n          rowNode: this.rowNode\n        });\n      } else {\n        this.tt.toggleNodeWithCheckbox({\n          originalEvent: event,\n          rowNode: this.rowNode\n        });\n      }\n    }\n    clearSelection();\n  }\n  onFocus() {\n    this.focused = true;\n  }\n  onBlur() {\n    this.focused = false;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  static ɵfac = function TTCheckbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTCheckbox)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TTCheckbox,\n    selectors: [[\"p-treeTableCheckbox\"], [\"p-treetable-checkbox\"], [\"p-tree-table-checkbox\"]],\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      rowNode: [0, \"value\", \"rowNode\"]\n    },\n    standalone: false,\n    decls: 2,\n    vars: 6,\n    consts: [[\"styleClass\", \"p-treetable-node-checkbox\", 3, \"onChange\", \"ngModel\", \"binary\", \"disabled\", \"indeterminate\", \"tabIndex\"], [4, \"ngIf\"], [\"pTemplate\", \"icon\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function TTCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-checkbox\", 0);\n        i0.ɵɵlistener(\"onChange\", function TTCheckbox_Template_p_checkbox_onChange_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵtemplate(1, TTCheckbox_ng_container_1_Template, 2, 0, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.checked)(\"binary\", true)(\"disabled\", ctx.disabled)(\"indeterminate\", ctx.partialChecked)(\"tabIndex\", -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.tt.checkboxIconTemplate || ctx.tt._checkboxIconTemplate);\n      }\n    },\n    dependencies: () => [i1.NgIf, i1.NgTemplateOutlet, i3.PrimeTemplate, Checkbox, i4.NgControlStatus, i4.NgModel],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableCheckbox, p-treetable-checkbox, p-tree-table-checkbox',\n      standalone: false,\n      template: `\n        <p-checkbox [ngModel]=\"checked\" (onChange)=\"onClick($event)\" [binary]=\"true\" [disabled]=\"disabled\" [indeterminate]=\"partialChecked\" styleClass=\"p-treetable-node-checkbox\" [tabIndex]=\"-1\">\n            <ng-container *ngIf=\"tt.checkboxIconTemplate || tt._checkboxIconTemplate\">\n                <ng-template pTemplate=\"icon\">\n                    <ng-template *ngTemplateOutlet=\"tt.checkboxIconTemplate || tt._checkboxIconTemplate; context: { $implicit: checked, partialSelected: partialChecked }\"></ng-template>\n                </ng-template>\n            </ng-container>\n        </p-checkbox>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: TreeTableService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    rowNode: [{\n      type: Input,\n      args: ['value']\n    }]\n  });\n})();\nclass TTHeaderCheckbox {\n  tt;\n  tableService;\n  cd;\n  checked;\n  disabled;\n  selectionChangeSubscription;\n  valueChangeSubscription;\n  constructor(tt, tableService, cd) {\n    this.tt = tt;\n    this.tableService = tableService;\n    this.cd = cd;\n    this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n    this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(() => {\n      this.checked = this.updateCheckedState();\n    });\n  }\n  ngOnInit() {\n    this.checked = this.updateCheckedState();\n  }\n  onClick(event) {\n    if ((this.tt.value || this.tt.filteredNodes) && (this.tt.value.length > 0 || this.tt.filteredNodes.length > 0)) {\n      this.tt.toggleNodesWithCheckbox(event, !this.checked);\n    }\n    clearSelection();\n  }\n  ngOnDestroy() {\n    if (this.selectionChangeSubscription) {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n    if (this.valueChangeSubscription) {\n      this.valueChangeSubscription.unsubscribe();\n    }\n  }\n  updateCheckedState() {\n    this.cd.markForCheck();\n    let checked;\n    const data = this.tt.filteredNodes || this.tt.value;\n    if (data) {\n      if (this.tt.selectionKeys) {\n        for (let node of data) {\n          if (this.tt.isNodeSelected(node)) {\n            checked = true;\n          } else {\n            checked = false;\n            break;\n          }\n        }\n      }\n      if (!this.tt.selectionKeys) {\n        // legacy selection support, will be removed in v18\n        for (let node of data) {\n          if (this.tt.isSelected(node)) {\n            checked = true;\n          } else {\n            checked = false;\n            break;\n          }\n        }\n      }\n    } else {\n      checked = false;\n    }\n    return checked;\n  }\n  static ɵfac = function TTHeaderCheckbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTHeaderCheckbox)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TreeTableService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TTHeaderCheckbox,\n    selectors: [[\"p-treeTableHeaderCheckbox\"]],\n    standalone: false,\n    decls: 2,\n    vars: 4,\n    consts: [[3, \"onChange\", \"ngModel\", \"binary\", \"disabled\"], [4, \"ngIf\"], [\"pTemplate\", \"icon\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function TTHeaderCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-checkbox\", 0);\n        i0.ɵɵlistener(\"onChange\", function TTHeaderCheckbox_Template_p_checkbox_onChange_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵtemplate(1, TTHeaderCheckbox_ng_container_1_Template, 2, 0, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.checked)(\"binary\", true)(\"disabled\", !ctx.tt.value || ctx.tt.value.length === 0);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.tt.headerCheckboxIconTemplate || ctx.tt._headerCheckboxIconTemplate);\n      }\n    },\n    dependencies: () => [i1.NgIf, i1.NgTemplateOutlet, i3.PrimeTemplate, Checkbox, i4.NgControlStatus, i4.NgModel],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTHeaderCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableHeaderCheckbox',\n      standalone: false,\n      template: `\n        <p-checkbox [ngModel]=\"checked\" (onChange)=\"onClick($event)\" [binary]=\"true\" [disabled]=\"!tt.value || tt.value.length === 0\">\n            <ng-container *ngIf=\"tt.headerCheckboxIconTemplate || tt._headerCheckboxIconTemplate\">\n                <ng-template pTemplate=\"icon\">\n                    <ng-template *ngTemplateOutlet=\"tt.headerCheckboxIconTemplate || tt._headerCheckboxIconTemplate; context: { $implicit: checked }\"></ng-template>\n                </ng-template>\n            </ng-container>\n        </p-checkbox>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: TreeTableService\n  }, {\n    type: i0.ChangeDetectorRef\n  }], null);\n})();\nclass TTEditableColumn {\n  tt;\n  el;\n  zone;\n  data;\n  field;\n  ttEditableColumnDisabled;\n  constructor(tt, el, zone) {\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  ngAfterViewInit() {\n    if (this.isEnabled()) {\n      addClass(this.el.nativeElement, 'p-editable-column');\n    }\n  }\n  onClick(event) {\n    if (this.isEnabled()) {\n      this.tt.editingCellClick = true;\n      if (this.tt.editingCell) {\n        if (this.tt.editingCell !== this.el.nativeElement) {\n          if (!this.tt.isEditingCellValid()) {\n            return;\n          }\n          removeClass(this.tt.editingCell, 'p-cell-editing');\n          this.openCell();\n        }\n      } else {\n        this.openCell();\n      }\n    }\n  }\n  openCell() {\n    this.tt.updateEditingCell(this.el.nativeElement, this.data, this.field);\n    addClass(this.el.nativeElement, 'p-cell-editing');\n    this.tt.onEditInit.emit({\n      field: this.field,\n      data: this.data\n    });\n    this.tt.editingCellClick = true;\n    this.zone.runOutsideAngular(() => {\n      setTimeout(() => {\n        let focusable = findSingle(this.el.nativeElement, 'input, textarea');\n        if (focusable) {\n          focusable.focus();\n        }\n      }, 50);\n    });\n  }\n  closeEditingCell() {\n    removeClass(this.tt.editingCell, 'p-checkbox-icon');\n    this.tt.editingCell = null;\n    this.tt.unbindDocumentEditListener();\n  }\n  onKeyDown(event) {\n    if (this.isEnabled()) {\n      //enter\n      if (event.keyCode == 13 && !event.shiftKey) {\n        if (this.tt.isEditingCellValid()) {\n          removeClass(this.tt.editingCell, 'p-cell-editing');\n          this.closeEditingCell();\n          this.tt.onEditComplete.emit({\n            field: this.field,\n            data: this.data\n          });\n        }\n        event.preventDefault();\n      }\n      //escape\n      else if (event.keyCode == 27) {\n        if (this.tt.isEditingCellValid()) {\n          removeClass(this.tt.editingCell, 'p-cell-editing');\n          this.closeEditingCell();\n          this.tt.onEditCancel.emit({\n            field: this.field,\n            data: this.data\n          });\n        }\n        event.preventDefault();\n      }\n      //tab\n      else if (event.keyCode == 9) {\n        this.tt.onEditComplete.emit({\n          field: this.field,\n          data: this.data\n        });\n        if (event.shiftKey) this.moveToPreviousCell(event);else this.moveToNextCell(event);\n      }\n    }\n  }\n  findCell(element) {\n    if (element) {\n      let cell = element;\n      while (cell && !hasClass(cell, 'p-cell-editing')) {\n        cell = cell.parentElement;\n      }\n      return cell;\n    } else {\n      return null;\n    }\n  }\n  moveToPreviousCell(event) {\n    let currentCell = this.findCell(event.target);\n    let row = currentCell.parentElement;\n    let targetCell = this.findPreviousEditableColumn(currentCell);\n    if (targetCell) {\n      invokeElementMethod(targetCell, 'click', undefined);\n      event.preventDefault();\n    }\n  }\n  moveToNextCell(event) {\n    let currentCell = this.findCell(event.target);\n    let row = currentCell.parentElement;\n    let targetCell = this.findNextEditableColumn(currentCell);\n    if (targetCell) {\n      invokeElementMethod(targetCell, 'click', undefined);\n      event.preventDefault();\n    }\n  }\n  findPreviousEditableColumn(cell) {\n    let prevCell = cell.previousElementSibling;\n    if (!prevCell) {\n      let previousRow = cell.parentElement ? cell.parentElement.previousElementSibling : null;\n      if (previousRow) {\n        prevCell = previousRow.lastElementChild;\n      }\n    }\n    if (prevCell) {\n      if (hasClass(prevCell, 'p-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);\n    } else {\n      return null;\n    }\n  }\n  findNextEditableColumn(cell) {\n    let nextCell = cell.nextElementSibling;\n    if (!nextCell) {\n      let nextRow = cell.parentElement ? cell.parentElement.nextElementSibling : null;\n      if (nextRow) {\n        nextCell = nextRow.firstElementChild;\n      }\n    }\n    if (nextCell) {\n      if (hasClass(nextCell, 'p-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);\n    } else {\n      return null;\n    }\n  }\n  isEnabled() {\n    return this.ttEditableColumnDisabled !== true;\n  }\n  static ɵfac = function TTEditableColumn_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTEditableColumn)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTEditableColumn,\n    selectors: [[\"\", \"ttEditableColumn\", \"\"]],\n    hostBindings: function TTEditableColumn_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function TTEditableColumn_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown\", function TTEditableColumn_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n    },\n    inputs: {\n      data: [0, \"ttEditableColumn\", \"data\"],\n      field: [0, \"ttEditableColumnField\", \"field\"],\n      ttEditableColumnDisabled: [2, \"ttEditableColumnDisabled\", \"ttEditableColumnDisabled\", booleanAttribute]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTEditableColumn, [{\n    type: Directive,\n    args: [{\n      selector: '[ttEditableColumn]',\n      standalone: false\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    data: [{\n      type: Input,\n      args: ['ttEditableColumn']\n    }],\n    field: [{\n      type: Input,\n      args: ['ttEditableColumnField']\n    }],\n    ttEditableColumnDisabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass TreeTableCellEditor extends BaseComponent {\n  tt;\n  editableColumn;\n  templates;\n  inputTemplate;\n  outputTemplate;\n  constructor(tt, editableColumn) {\n    super();\n    this.tt = tt;\n    this.editableColumn = editableColumn;\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'input':\n          this.inputTemplate = item.template;\n          break;\n        case 'output':\n          this.outputTemplate = item.template;\n          break;\n      }\n    });\n  }\n  static ɵfac = function TreeTableCellEditor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TreeTableCellEditor)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(TTEditableColumn));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TreeTableCellEditor,\n    selectors: [[\"p-treeTableCellEditor\"], [\"p-treetablecelleditor\"], [\"p-treetable-cell-editor\"]],\n    contentQueries: function TreeTableCellEditor_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n    template: function TreeTableCellEditor_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TreeTableCellEditor_ng_container_0_Template, 2, 1, \"ng-container\", 0)(1, TreeTableCellEditor_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.tt.editingCell === ctx.editableColumn.el.nativeElement);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.tt.editingCell || ctx.tt.editingCell !== ctx.editableColumn.el.nativeElement);\n      }\n    },\n    dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableCellEditor, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableCellEditor, p-treetablecelleditor, p-treetable-cell-editor',\n      standalone: false,\n      template: `\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: TTEditableColumn\n  }], {\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass TTRow {\n  tt;\n  el;\n  zone;\n  get level() {\n    return this.rowNode?.['level'] + 1;\n  }\n  get styleClass() {\n    return this.rowNode?.node['styleClass'] || '';\n  }\n  get expanded() {\n    return this.rowNode?.node['expanded'];\n  }\n  rowNode;\n  constructor(tt, el, zone) {\n    this.tt = tt;\n    this.el = el;\n    this.zone = zone;\n  }\n  onKeyDown(event) {\n    switch (event.code) {\n      case 'ArrowDown':\n        this.onArrowDownKey(event);\n        break;\n      case 'ArrowUp':\n        this.onArrowUpKey(event);\n        break;\n      case 'ArrowRight':\n        this.onArrowRightKey(event);\n        break;\n      case 'ArrowLeft':\n        this.onArrowLeftKey(event);\n        break;\n      case 'Tab':\n        this.onTabKey(event);\n        break;\n      case 'Home':\n        this.onHomeKey(event);\n        break;\n      case 'End':\n        this.onEndKey(event);\n        break;\n      default:\n        break;\n    }\n  }\n  onArrowDownKey(event) {\n    let nextRow = this.el?.nativeElement?.nextElementSibling;\n    if (nextRow) {\n      this.focusRowChange(event.currentTarget, nextRow);\n    }\n    event.preventDefault();\n  }\n  onArrowUpKey(event) {\n    let prevRow = this.el?.nativeElement?.previousElementSibling;\n    if (prevRow) {\n      this.focusRowChange(event.currentTarget, prevRow);\n    }\n    event.preventDefault();\n  }\n  onArrowRightKey(event) {\n    const currentTarget = event.currentTarget;\n    const isHiddenIcon = findSingle(currentTarget, 'button').style.visibility === 'hidden';\n    if (!isHiddenIcon && !this.expanded && this.rowNode.node['children']) {\n      this.expand(event);\n      currentTarget.tabIndex = -1;\n    }\n    event.preventDefault();\n  }\n  onArrowLeftKey(event) {\n    const container = this.tt.containerViewChild?.nativeElement;\n    const expandedRows = find(container, '[aria-expanded=\"true\"]');\n    const lastExpandedRow = expandedRows[expandedRows.length - 1];\n    if (this.expanded) {\n      this.collapse(event);\n    }\n    if (lastExpandedRow) {\n      this.tt.toggleRowIndex = getIndex(lastExpandedRow);\n    }\n    this.restoreFocus();\n    event.preventDefault();\n  }\n  onHomeKey(event) {\n    const firstElement = findSingle(this.tt.containerViewChild?.nativeElement, `tr[aria-level=\"${this.level}\"]`);\n    firstElement && focus(firstElement);\n    event.preventDefault();\n  }\n  onEndKey(event) {\n    const nodes = find(this.tt.containerViewChild?.nativeElement, `tr[aria-level=\"${this.level}\"]`);\n    const lastElement = nodes[nodes.length - 1];\n    focus(lastElement);\n    event.preventDefault();\n  }\n  onTabKey(event) {\n    const rows = this.el.nativeElement ? [...find(this.el.nativeElement.parentNode, 'tr')] : undefined;\n    if (rows && isNotEmpty(rows)) {\n      const hasSelectedRow = rows.some(row => getAttribute(row, 'data-p-highlight') || row.getAttribute('aria-checked') === 'true');\n      rows.forEach(row => {\n        row.tabIndex = -1;\n      });\n      if (hasSelectedRow) {\n        const selectedNodes = rows.filter(node => getAttribute(node, 'data-p-highlight') || node.getAttribute('aria-checked') === 'true');\n        selectedNodes[0].tabIndex = 0;\n        return;\n      }\n      rows[0].tabIndex = 0;\n    }\n  }\n  expand(event) {\n    this.tt.toggleRowIndex = getIndex(this.el.nativeElement);\n    this.rowNode.node['expanded'] = true;\n    this.tt.updateSerializedValue();\n    this.tt.tableService.onUIUpdate(this.tt.value);\n    this.rowNode.node['children'] ? this.restoreFocus(this.tt.toggleRowIndex + 1) : this.restoreFocus();\n    this.tt.onNodeExpand.emit({\n      originalEvent: event,\n      node: this.rowNode.node\n    });\n  }\n  collapse(event) {\n    this.rowNode.node['expanded'] = false;\n    this.tt.updateSerializedValue();\n    this.tt.tableService.onUIUpdate(this.tt.value);\n    this.tt.onNodeCollapse.emit({\n      originalEvent: event,\n      node: this.rowNode.node\n    });\n  }\n  focusRowChange(firstFocusableRow, currentFocusedRow, lastVisibleDescendant) {\n    firstFocusableRow.tabIndex = '-1';\n    currentFocusedRow.tabIndex = '0';\n    focus(currentFocusedRow);\n  }\n  restoreFocus(index) {\n    this.zone.runOutsideAngular(() => {\n      setTimeout(() => {\n        const container = this.tt.containerViewChild?.nativeElement;\n        const row = findSingle(container, '.p-treetable-tbody').children[index || this.tt.toggleRowIndex];\n        const rows = [...find(container, 'tr')];\n        rows && rows.forEach(r => {\n          if (!row.isSameNode(r)) {\n            r.tabIndex = -1;\n          }\n        });\n        if (row) {\n          row.tabIndex = 0;\n          row.focus();\n        }\n      }, 25);\n    });\n  }\n  static ɵfac = function TTRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TTRow)(i0.ɵɵdirectiveInject(TreeTable), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TTRow,\n    selectors: [[\"\", \"ttRow\", \"\"]],\n    hostVars: 7,\n    hostBindings: function TTRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function TTRow_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", \"0\")(\"aria-expanded\", ctx.expanded)(\"aria-level\", ctx.level)(\"data-pc-section\", ctx.row)(\"role\", ctx.row);\n        i0.ɵɵclassMap(\"p-element \" + ctx.styleClass);\n      }\n    },\n    inputs: {\n      rowNode: [0, \"ttRow\", \"rowNode\"]\n    },\n    standalone: false\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TTRow, [{\n    type: Directive,\n    args: [{\n      selector: '[ttRow]',\n      standalone: false,\n      host: {\n        '[class]': `'p-element ' + styleClass`,\n        '[attr.tabindex]': \"'0'\",\n        '[attr.aria-expanded]': 'expanded',\n        '[attr.aria-level]': 'level',\n        '[attr.data-pc-section]': 'row',\n        '[attr.role]': 'row'\n      }\n    }]\n  }], () => [{\n    type: TreeTable\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    rowNode: [{\n      type: Input,\n      args: ['ttRow']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass TreeTableToggler extends BaseComponent {\n  tt;\n  rowNode;\n  constructor(tt) {\n    super();\n    this.tt = tt;\n  }\n  get toggleButtonAriaLabel() {\n    return this.config.translation ? this.rowNode.expanded ? this.config.translation.aria.collapseRow : this.config.translation.aria.expandRow : undefined;\n  }\n  onClick(event) {\n    this.rowNode.node.expanded = !this.rowNode.node.expanded;\n    if (this.rowNode.node.expanded) {\n      this.tt.onNodeExpand.emit({\n        originalEvent: event,\n        node: this.rowNode.node\n      });\n    } else {\n      this.tt.onNodeCollapse.emit({\n        originalEvent: event,\n        node: this.rowNode.node\n      });\n    }\n    this.tt.updateSerializedValue();\n    this.tt.tableService.onUIUpdate(this.tt.value);\n    event.preventDefault();\n  }\n  static ɵfac = function TreeTableToggler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TreeTableToggler)(i0.ɵɵdirectiveInject(TreeTable));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TreeTableToggler,\n    selectors: [[\"p-treeTableToggler\"], [\"p-treetabletoggler\"], [\"p-treetable-toggler\"]],\n    inputs: {\n      rowNode: \"rowNode\"\n    },\n    standalone: false,\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 12,\n    consts: [[\"type\", \"button\", \"tabindex\", \"-1\", \"pRipple\", \"\", 1, \"p-treetable-toggler\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function TreeTableToggler_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function TreeTableToggler_Template_button_click_0_listener($event) {\n          return ctx.onClick($event);\n        });\n        i0.ɵɵtemplate(1, TreeTableToggler_ng_container_1_Template, 3, 2, \"ng-container\", 1)(2, TreeTableToggler_2_Template, 1, 0, null, 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"visibility\", ctx.rowNode.node.leaf === false || ctx.rowNode.node.children && ctx.rowNode.node.children.length ? \"visible\" : \"hidden\")(\"margin-inline-start\", ctx.rowNode.level * 16 + \"px\");\n        i0.ɵɵattribute(\"data-pc-section\", \"rowtoggler\")(\"data-pc-group-section\", \"rowactionbutton\")(\"aria-label\", ctx.toggleButtonAriaLabel);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.tt.togglerIconTemplate && !ctx.tt._togglerIconTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.tt.togglerIconTemplate || ctx.tt._togglerIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c34, ctx.rowNode.node.expanded));\n      }\n    },\n    dependencies: () => [i1.NgIf, i1.NgTemplateOutlet, Ripple, ChevronDownIcon, ChevronRightIcon],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableToggler, [{\n    type: Component,\n    args: [{\n      selector: 'p-treeTableToggler, p-treetabletoggler, p-treetable-toggler',\n      standalone: false,\n      template: `\n        <button\n            type=\"button\"\n            class=\"p-treetable-toggler\"\n            (click)=\"onClick($event)\"\n            tabindex=\"-1\"\n            pRipple\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\"\n            [style.marginInlineStart]=\"rowNode.level * 16 + 'px'\"\n            [attr.data-pc-section]=\"'rowtoggler'\"\n            [attr.data-pc-group-section]=\"'rowactionbutton'\"\n            [attr.aria-label]=\"toggleButtonAriaLabel\"\n        >\n            <ng-container *ngIf=\"!tt.togglerIconTemplate && !tt._togglerIconTemplate\">\n                <ChevronDownIcon *ngIf=\"rowNode.node.expanded\" [attr.aria-hidden]=\"true\" />\n                <ChevronRightIcon *ngIf=\"!rowNode.node.expanded\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n            <ng-template *ngTemplateOutlet=\"tt.togglerIconTemplate || tt._togglerIconTemplate; context: { $implicit: rowNode.node.expanded }\"></ng-template>\n        </button>\n    `,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: TreeTable\n  }], {\n    rowNode: [{\n      type: Input\n    }]\n  });\n})();\nclass TreeTableModule {\n  static ɵfac = function TreeTableModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TreeTableModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TreeTableModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, PaginatorModule, Scroller, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, CheckIcon, MinusIcon, ChevronDownIcon, ChevronRightIcon, Checkbox, SharedModule, FormsModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TreeTableModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, PaginatorModule, Ripple, Scroller, SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, CheckIcon, MinusIcon, ChevronDownIcon, ChevronRightIcon, Checkbox, SharedModule, FormsModule],\n      exports: [TreeTable, SharedModule, TreeTableToggler, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor, Scroller],\n      declarations: [TreeTable, TreeTableToggler, TTScrollableView, TTBody, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TTBody, TTCheckbox, TTContextMenuRow, TTEditableColumn, TTHeaderCheckbox, TTReorderableColumn, TTResizableColumn, TTRow, TTScrollableView, TTSelectableRow, TTSelectableRowDblClick, TTSortIcon, TTSortableColumn, TreeTable, TreeTableCellEditor, TreeTableClasses, TreeTableModule, TreeTableService, TreeTableStyle, TreeTableToggler };","map":{"version":3,"names":["i1","isPlatformBrowser","DOCUMENT","CommonModule","i0","Injectable","inject","EventEmitter","NgZone","booleanAttribute","numberAttribute","ContentChildren","ContentChild","ViewChild","Output","Input","ViewEncapsulation","Component","PLATFORM_ID","Inject","HostListener","Directive","ChangeDetectionStrategy","NgModule","i4","FormsModule","resolveFieldData","isEmpty","getOffset","addClass","findSingle","getIndex","calculateScrollbarWidth","removeClass","hasClass","getHiddenElementOuterWidth","getHiddenElementOuterHeight","reorderArray","equals","find","calculateScrollbarHeight","clearSelection","invokeElementMethod","focus","isNotEmpty","getAttribute","i3","FilterService","PrimeTemplate","SharedModule","BaseComponent","Checkbox","DomHandler","SpinnerIcon","ArrowDownIcon","ArrowUpIcon","SortAltIcon","SortAmountUpAltIcon","SortAmountDownIcon","ChevronDownIcon","ChevronRightIcon","CheckIcon","MinusIcon","i2","PaginatorModule","Ripple","Scroller","Subject","BaseStyle","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","_c13","_c14","_c15","_c16","_c17","_c18","_c19","_c20","_c21","_c22","_c23","_c24","_c25","_c26","_c27","_c28","_c29","_c30","_c31","_c32","_c33","a0","a1","a2","a3","a4","a5","_c34","$implicit","_c35","left","width","_c36","TreeTable_div_2_i_2_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵclassMap","loadingIcon","TreeTable_div_2_ng_container_3_SpinnerIcon_1_Template","ɵɵproperty","TreeTable_div_2_ng_container_3_span_2_1_ng_template_0_Template","TreeTable_div_2_ng_container_3_span_2_1_Template","ɵɵtemplate","TreeTable_div_2_ng_container_3_span_2_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","loadingIconTemplate","_loadingIconTemplate","TreeTable_div_2_ng_container_3_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","TreeTable_div_2_Template","TreeTable_div_3_ng_container_1_Template","ɵɵelementContainer","TreeTable_div_3_Template","captionTemplate","_captionTemplate","TreeTable_p_paginator_4_1_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_4_1_ng_template_0_Template","paginatorFirstPageLinkIconTemplate","_paginatorFirstPageLinkIconTemplate","TreeTable_p_paginator_4_1_Template","TreeTable_p_paginator_4_2_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_4_2_ng_template_0_Template","paginatorPreviousPageLinkIconTemplate","_paginatorPreviousPageLinkIconTemplate","TreeTable_p_paginator_4_2_Template","TreeTable_p_paginator_4_3_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_4_3_ng_template_0_Template","paginatorLastPageLinkIconTemplate","_paginatorLastPageLinkIconTemplate","TreeTable_p_paginator_4_3_Template","TreeTable_p_paginator_4_4_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_4_4_ng_template_0_Template","paginatorNextPageLinkIconTemplate","_paginatorNextPageLinkIconTemplate","TreeTable_p_paginator_4_4_Template","TreeTable_p_paginator_4_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","TreeTable_p_paginator_4_Template_p_paginator_onPageChange_0_listener","$event","ɵɵrestoreView","ɵɵresetView","onPageChange","tmp_8_0","tmp_9_0","tmp_13_0","rows","first","totalRecords","pageLinks","alwaysShowPaginator","rowsPerPageOptions","paginatorLeftTemplate","undefined","_paginatorLeftTemplate","paginatorRightTemplate","_paginatorRightTemplate","paginatorDropdownAppendTo","currentPageReportTemplate","showFirstLastIcon","paginatorDropdownItemTemplate","_paginatorDropdownItemTemplate","showCurrentPageReport","showJumpToPageDropdown","showPageLinks","paginatorStyleClass","paginatorLocale","TreeTable_div_5_ng_container_3_Template","TreeTable_div_5_ng_container_5_Template","TreeTable_div_5_ng_container_8_Template","TreeTable_div_5_Template","tmp_10_0","tableStyleClass","tableStyle","colGroupTemplate","_colGroupTemplate","ɵɵpureFunction1","columns","headerTemplate","_headerTemplate","bodyTemplate","_bodyTemplate","footerTemplate","_footerTemplate","TreeTable_div_6_div_1_Template","frozenColumns","frozenWidth","scrollHeight","TreeTable_div_6_Template","frozenBodyTemplate","_frozenBodyTemplate","ɵɵpureFunction2","TreeTable_p_paginator_7_1_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_7_1_ng_template_0_Template","TreeTable_p_paginator_7_1_Template","TreeTable_p_paginator_7_2_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_7_2_ng_template_0_Template","TreeTable_p_paginator_7_2_Template","TreeTable_p_paginator_7_3_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_7_3_ng_template_0_Template","TreeTable_p_paginator_7_3_Template","TreeTable_p_paginator_7_4_ng_template_0_ng_container_0_Template","TreeTable_p_paginator_7_4_ng_template_0_Template","TreeTable_p_paginator_7_4_Template","TreeTable_p_paginator_7_Template","_r3","TreeTable_p_paginator_7_Template_p_paginator_onPageChange_0_listener","TreeTable_div_8_ng_container_1_Template","TreeTable_div_8_Template","summaryTemplate","_summaryTemplate","TreeTable_div_9_Template","TreeTable_span_10_ArrowDownIcon_2_Template","TreeTable_span_10_3_ng_template_0_Template","TreeTable_span_10_3_Template","TreeTable_span_10_Template","reorderIndicatorUpIconTemplate","_reorderIndicatorUpIconTemplate","TreeTable_span_11_ArrowUpIcon_2_Template","TreeTable_span_11_3_ng_template_0_Template","TreeTable_span_11_3_Template","TreeTable_span_11_Template","reorderIndicatorDownIconTemplate","_reorderIndicatorDownIconTemplate","_c37","_c38","node","rowData","_c39","frozen","TTBody_ng_template_0_ng_container_0_ng_container_1_Template","TTBody_ng_template_0_ng_container_0_Template","serializedNode_r1","ctx_r1","template","ɵɵpureFunction4","data","TTBody_ng_template_0_Template","visible","TTBody_ng_container_1_ng_container_1_Template","TTBody_ng_container_1_Template","tt","emptyMessageTemplate","_c40","_c41","_c42","_c43","_c44","_c45","_c46","_c47","_c48","_c49","_c50","height","_c51","options","_c52","_c53","_c54","TTScrollableView_ng_container_5_Template","TTScrollableView_ng_container_7_Template","TTScrollableView_p_scroller_8_ng_template_2_ng_container_0_Template","TTScrollableView_p_scroller_8_ng_template_2_Template","items_r3","scrollerOptions_r4","buildInItems_r5","ɵɵreference","TTScrollableView_p_scroller_8_ng_container_4_ng_template_1_ng_container_0_Template","TTScrollableView_p_scroller_8_ng_container_4_ng_template_1_Template","scrollerOptions_r6","loaderTemplate","_loaderTemplate","TTScrollableView_p_scroller_8_ng_container_4_Template","ɵɵtemplateRefExtractor","TTScrollableView_p_scroller_8_Template","_r1","TTScrollableView_p_scroller_8_Template_p_scroller_onLazyLoad_0_listener","onLazyItemLoad","ɵɵstyleMap","serializedValue","virtualScrollItemSize","_virtualRowHeight","lazy","virtualScrollOptions","TTScrollableView_ng_container_9_ng_container_3_Template","TTScrollableView_ng_container_9_Template","ɵɵpureFunction0","TTScrollableView_ng_template_10_ng_container_2_Template","TTScrollableView_ng_template_10_div_4_Template","TTScrollableView_ng_template_10_Template","items_r7","scrollerOptions_r8","contentStyle","contentStyleClass","frozenColGroupTemplate","_frozenColGroupTemplate","TTScrollableView_div_12_ng_container_5_Template","TTScrollableView_div_12_ng_container_7_Template","TTScrollableView_div_12_Template","frozenFooterTemplate","_frozenFooterTemplate","TTSortIcon_ng_container_0_SortAltIcon_1_Template","TTSortIcon_ng_container_0_SortAmountUpAltIcon_2_Template","TTSortIcon_ng_container_0_SortAmountDownIcon_3_Template","TTSortIcon_ng_container_0_Template","sortOrder","TTSortIcon_span_1_1_ng_template_0_Template","TTSortIcon_span_1_1_Template","TTSortIcon_span_1_Template","sortIconTemplate","_sortIconTemplate","_c55","partialSelected","TTCheckbox_ng_container_1_ng_template_1_0_ng_template_0_Template","TTCheckbox_ng_container_1_ng_template_1_0_Template","TTCheckbox_ng_container_1_ng_template_1_Template","checkboxIconTemplate","_checkboxIconTemplate","checked","partialChecked","TTCheckbox_ng_container_1_Template","TTHeaderCheckbox_ng_container_1_ng_template_1_0_ng_template_0_Template","TTHeaderCheckbox_ng_container_1_ng_template_1_0_Template","TTHeaderCheckbox_ng_container_1_ng_template_1_Template","headerCheckboxIconTemplate","_headerCheckboxIconTemplate","TTHeaderCheckbox_ng_container_1_Template","TreeTableCellEditor_ng_container_0_ng_container_1_Template","TreeTableCellEditor_ng_container_0_Template","inputTemplate","TreeTableCellEditor_ng_container_1_ng_container_1_Template","TreeTableCellEditor_ng_container_1_Template","outputTemplate","TreeTableToggler_ng_container_1_ChevronDownIcon_1_Template","ɵɵattribute","TreeTableToggler_ng_container_1_ChevronRightIcon_2_Template","TreeTableToggler_ng_container_1_Template","rowNode","expanded","TreeTableToggler_2_ng_template_0_Template","TreeTableToggler_2_Template","theme","dt","classes","root","instance","rowHover","selectionMode","resizableColumns","columnResizeMode","scrollable","showGridlines","size","loading","mask","header","paginator","paginatorPosition","tableContainer","table","thead","headerCell","sortable","sorted","columnProp","columnResizer","columnHeaderContent","columnTitle","sortIcon","pcSortBadge","tbody","row","selected","bodyCell","bodyCellContent","toggler","nodeToggleButton","nodeToggleIcon","pcNodeCheckbox","emptyMessage","tfoot","footerCell","footer","columnResizeIndicator","inlineStyles","overflow","position","TreeTableStyle","name","ɵfac","ɵTreeTableStyle_BaseFactory","TreeTableStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","TreeTableClasses","TreeTableService","sortSource","selectionSource","contextMenuSource","uiUpdateSource","totalRecordsSource","sortSource$","asObservable","selectionSource$","contextMenuSource$","uiUpdateSource$","totalRecordsSource$","onSort","sortMeta","next","onSelectionChange","onContextMenu","onUIUpdate","value","onTotalRecordsChange","TreeTableService_Factory","TreeTable","_componentStyle","style","styleClass","autoLayout","lazyLoadOnInit","defaultSortOrder","sortMode","resetPageOnSort","customSort","contextMenuSelection","contextMenuSelectionMode","dataKey","metaKeySelection","compareSelectionBy","showLoader","virtualScroll","virtualScrollDelay","reorderableColumns","contextMenu","rowTrackBy","index","item","filters","globalFilterFields","filterDelay","filterMode","filterLocale","_totalRecords","val","tableService","sortField","_sortField","_sortOrder","multiSortMeta","_multiSortMeta","selection","_selection","_value","virtualRowHeight","console","log","selectionKeys","_selectionKeys","selectionKeysChange","emit","selectionChange","contextMenuSelectionChange","onFilter","onNodeExpand","onNodeCollapse","onPage","onLazyLoad","sortFunction","onColResize","onColReorder","onNodeSelect","onNodeUnselect","onContextMenuSelect","onHeaderCheckboxToggle","onEditInit","onEditComplete","onEditCancel","containerViewChild","resizeHelperViewChild","reorderIndicatorUpViewChild","reorderIndicatorDownViewChild","tableViewChild","scrollableViewChild","scrollableFrozenViewChild","filteredNodes","filterTimeout","_emptyMessageTemplate","_frozenHeaderTemplate","frozenHeaderTemplate","_togglerIconTemplate","togglerIconTemplate","lastResizerHelperX","reorderIconWidth","reorderIconHeight","draggedColumn","dropPosition","preventSelectionSetterPropagation","selectedKeys","rowTouched","editingCell","editingCellData","editingCellField","editingCellClick","documentEditListener","initialized","toggleRowIndex","ngOnInit","createLazyLoadMetadata","templates","ngAfterContentInit","forEach","getType","filterService","zone","ngOnChanges","simpleChange","currentValue","length","sortSingle","sortMultiple","hasFilter","_filter","updateSerializedValue","updateselectedKeys","serializePageNodes","serializeNodes","parent","nodes","level","push","children","i","Array","isArray","String","event","resetScrollTop","sort","originalEvent","field","metaKey","ctrlKey","getSortMeta","order","sortNodes","mode","node1","node2","value1","value2","result","localeCompare","numeric","sortMultipleNodes","multisortmeta","multisortField","isSorted","globalFilter","forceUpdate","cd","detectChanges","last","scrollToVirtualIndex","scrollTo","top","getBlockableElement","el","nativeElement","onColumnResizeBegin","containerLeft","pageX","scrollLeft","preventDefault","onColumnResize","offsetHeight","display","onColumnResizeEnd","column","delta","offsetLeft","columnWidth","offsetWidth","newColumnWidth","minWidth","parseInt","nextColumn","nextElementSibling","offsetParent","nextColumnWidth","nextColumnMinWidth","scrollableView","findParentScrollableView","scrollableBodyTable","scrollableHeaderTable","scrollableFooterTable","resizeColumnIndex","resizeColGroup","scrollableBody","scrollableHeader","scrollableFooter","scrollableBodyTableWidth","scrollableHeaderTableWidth","isContainerInViewport","setWidth","container","containerWidth","element","parentElement","colGroup","nodeName","col","nextCol","onColumnDragStart","columnElement","dataTransfer","setData","onColumnDragEnter","dropHeader","containerOffset","dropHeaderOffset","targetLeft","targetTop","columnCenter","Math","ceil","dropEffect","onColumnDragLeave","onColumnDrop","dropColumn","dragIndex","indexWithinGroup","dropIndex","allowDrop","draggable","handleRowClick","targetNode","target","isSelected","metaSelection","dataKeyValue","keyboardEvent","isSingleSelectionMode","selectionIndex","findIndexInSelection","filter","isMultipleSelectionMode","rowIndex","handleRowTouchEnd","handleRowRightClick","show","toggleNodeWithCheckbox","propagateSelectionDown","propagateSelectionUp","toggleNodesWithCheckbox","check","slice","toggleAll","propagateDown","select","selectedChildCount","childPartialSelected","child","hasOwnProperty","isNodeSelected","nodeKey","isNodePartialSelected","toggleCheckbox","propagateUp","checkedChildCount","matchMode","clearTimeout","isFilterBlank","setTimeout","filterGlobal","trim","globalFilterFieldsArray","Error","isStrictMode","isValueChanged","copyNode","localMatch","globalMatch","paramsWithoutNode","prop","filterMeta","filterField","filterValue","filterMatchMode","filterConstraint","findFilteredNodes","isFilterMatched","copyNodeForGlobal","matches","markForCheck","filteredValue","matched","childNodes","childNode","copyChildNode","filterOptions","isMatched","some","globalFilterField","isNodeLeaf","leaf","empty","reset","updateEditingCell","cell","bindDocumentEditListener","isEditingCellValid","renderer","listen","document","unbindDocumentEditListener","ngOnDestroy","ɵTreeTable_BaseFactory","TreeTable_Factory","ɵcmp","ɵɵdefineComponent","selectors","contentQueries","TreeTable_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","TreeTable_Query","ɵɵviewQuery","inputs","outputs","standalone","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","decls","vars","consts","TreeTable_Template","ɵɵpureFunction6","dependencies","NgClass","NgIf","NgTemplateOutlet","NgStyle","Paginator","TTScrollableView","TTBody","encapsulation","args","selector","providers","None","transform","descendants","treeTableService","serializedNodes","scrollerOptions","subscription","constructor","subscribe","getScrollerOption","option","getRowIndex","getItemOptions","unsubscribe","TTBody_Factory","ɵɵdirectiveInject","ChangeDetectorRef","attrs","TTBody_Template","NgForOf","platformId","scrollHeaderViewChild","scrollHeaderBoxViewChild","scrollBodyViewChild","scrollTableViewChild","scrollLoadingTableViewChild","scrollFooterViewChild","scrollFooterBoxViewChild","scrollableAlignerViewChild","scroller","headerScrollListener","bodyScrollListener","footerScrollListener","frozenSiblingBody","totalRecordsSubscription","_scrollHeight","preventBodyScrollPropagation","includes","ngAfterViewInit","frozenView","previousElementSibling","scrollBarWidth","paddingRight","bindEvents","runOutsideAngular","onHeaderScroll","bind","onFooterScroll","getElementRef","onBodyScroll","unbindEvents","marginLeft","scrollTop","scrollToIndex","TTScrollableView_Factory","Renderer2","ElementRef","TTScrollableView_Query","TTScrollableView_Template","decorators","TTSortableColumn","ttSortableColumnDisabled","ariaSorted","isEnabled","updateSortState","onClick","onEnterKey","TTSortableColumn_Factory","ɵdir","ɵɵdefineDirective","hostVars","hostBindings","TTSortableColumn_HostBindings","TTSortableColumn_click_HostBindingHandler","TTSortableColumn_keydown_enter_HostBindingHandler","ɵɵclassProp","host","TTSortIcon","ariaLabelDesc","ariaLabelAsc","TTSortIcon_Factory","TTSortIcon_Template","changeDetection","OnPush","TTResizableColumn","ttResizableColumnDisabled","resizer","resizerMouseDownListener","documentMouseMoveListener","documentMouseUpListener","createElement","appendChild","onMouseDown","bindDocumentEvents","onDocumentMouseMove","onDocumentMouseUp","unbindDocumentEvents","TTResizableColumn_Factory","Document","TTReorderableColumn","ttReorderableColumnDisabled","dragStartListener","dragOverListener","dragEnterListener","dragLeaveListener","mouseDownListener","onDragStart","onDragEnter","onDragLeave","onDragOver","onDrop","TTReorderableColumn_Factory","TTReorderableColumn_HostBindings","TTReorderableColumn_drop_HostBindingHandler","TTSelectableRow","ttSelectableRowDisabled","onKeyDown","code","onTouchEnd","TTSelectableRow_Factory","TTSelectableRow_HostBindings","TTSelectableRow_click_HostBindingHandler","TTSelectableRow_keydown_HostBindingHandler","TTSelectableRow_touchend_HostBindingHandler","TTSelectableRowDblClick","TTSelectableRowDblClick_Factory","TTSelectableRowDblClick_HostBindings","TTSelectableRowDblClick_dblclick_HostBindingHandler","TTContextMenuRow","ttContextMenuRowDisabled","TTContextMenuRow_Factory","TTContextMenuRow_HostBindings","TTContextMenuRow_contextmenu_HostBindingHandler","TTCheckbox","disabled","focused","_check","onFocus","onBlur","TTCheckbox_Factory","TTCheckbox_Template","TTCheckbox_Template_p_checkbox_onChange_0_listener","NgControlStatus","NgModel","TTHeaderCheckbox","selectionChangeSubscription","valueChangeSubscription","updateCheckedState","TTHeaderCheckbox_Factory","TTHeaderCheckbox_Template","TTHeaderCheckbox_Template_p_checkbox_onChange_0_listener","TTEditableColumn","ttEditableColumnDisabled","openCell","focusable","closeEditingCell","keyCode","shiftKey","moveToPreviousCell","moveToNextCell","findCell","currentCell","targetCell","findPreviousEditableColumn","findNextEditableColumn","prevCell","previousRow","lastElementChild","nextCell","nextRow","firstElementChild","TTEditableColumn_Factory","TTEditableColumn_HostBindings","TTEditableColumn_click_HostBindingHandler","TTEditableColumn_keydown_HostBindingHandler","TreeTableCellEditor","editableColumn","TreeTableCellEditor_Factory","TreeTableCellEditor_ContentQueries","TreeTableCellEditor_Template","TTRow","onArrowDownKey","onArrowUpKey","onArrowRightKey","onArrowLeftKey","onTabKey","onHomeKey","onEndKey","focusRowChange","currentTarget","prevRow","isHiddenIcon","visibility","expand","tabIndex","expandedRows","lastExpandedRow","collapse","restoreFocus","firstElement","lastElement","parentNode","hasSelectedRow","selectedNodes","firstFocusableRow","currentFocusedRow","lastVisibleDescendant","r","isSameNode","TTRow_Factory","TTRow_HostBindings","TTRow_keydown_HostBindingHandler","TreeTableToggler","toggleButtonAriaLabel","config","translation","aria","collapseRow","expandRow","TreeTableToggler_Factory","TreeTableToggler_Template","TreeTableToggler_Template_button_click_0_listener","ɵɵstyleProp","TreeTableModule","TreeTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-treetable.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, EventEmitter, NgZone, booleanAttribute, numberAttribute, ContentChildren, ContentChild, ViewChild, Output, Input, ViewEncapsulation, Component, PLATFORM_ID, Inject, HostListener, Directive, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { resolveFieldData, isEmpty, getOffset, addClass, findSingle, getIndex, calculateScrollbarWidth, removeClass, hasClass, getHiddenElementOuterWidth, getHiddenElementOuterHeight, reorderArray, equals, find, calculateScrollbarHeight, clearSelection, invokeElementMethod, focus, isNotEmpty, getAttribute } from '@primeuix/utils';\nimport * as i3 from 'primeng/api';\nimport { FilterService, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Checkbox } from 'primeng/checkbox';\nimport { DomHandler } from 'primeng/dom';\nimport { SpinnerIcon, ArrowDownIcon, ArrowUpIcon, SortAltIcon, SortAmountUpAltIcon, SortAmountDownIcon, ChevronDownIcon, ChevronRightIcon, CheckIcon, MinusIcon } from 'primeng/icons';\nimport * as i2 from 'primeng/paginator';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { Ripple } from 'primeng/ripple';\nimport { Scroller } from 'primeng/scroller';\nimport { Subject } from 'rxjs';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n/* For PrimeNG */\n.p-treetable {\n    position: relative;\n}\n\n.p-treetable table {\n    border-collapse: collapse;\n    width: 100%;\n    table-layout: fixed;\n}\n\n.p-treetable .p-sortable-column {\n    cursor: pointer;\n    user-select: none;\n}\n\n.p-treetable .p-sortable-column .p-column-title,\n.p-treetable .p-sortable-column .p-sortable-column-icon,\n.p-treetable .p-sortable-column .p-sortable-column-badge {\n    vertical-align: middle;\n}\n\n.p-treetable .p-sortable-column .p-sortable-column-badge {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.p-treetable-auto-layout>.p-treetable-wrapper {\n    overflow-x: auto;\n}\n\n.p-treetable-auto-layout>.p-treetable-wrapper>table {\n    table-layout: auto;\n}\n\n.p-treetable-hoverable-rows .p-treetable-tbody>tr {\n    cursor: pointer;\n}\n\n.p-treetable-toggler {\n    cursor: pointer;\n    user-select: none;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    vertical-align: middle;\n    overflow: hidden;\n    position: relative;\n}\n\n\n/* Scrollable */\n.p-treetable-scrollable-wrapper {\n    position: relative;\n}\n\n.p-treetable-scrollable-header,\n.p-treetable-scrollable-footer {\n    overflow: hidden;\n    flex-shrink: 0;\n}\n\n.p-treetable-scrollable-body {\n    overflow: auto;\n    position: relative;\n}\n\n.p-treetable-virtual-table {\n    position: absolute;\n}\n\n/* Frozen Columns */\n.p-treetable-frozen-view .p-treetable-scrollable-body {\n    overflow: hidden;\n}\n\n.p-treetable-frozen-view>.p-treetable-scrollable-body>table>.p-treetable-tbody>tr>td:last-child {\n    border-right: 0 none;\n}\n\n.p-treetable-unfrozen-view {\n    position: absolute;\n    top: 0;\n}\n\n/* Flex Scrollable */\n.p-treetable-flex-scrollable {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n}\n\n.p-treetable-flex-scrollable .p-treetable-scrollable-wrapper,\n.p-treetable-flex-scrollable .p-treetable-scrollable-view {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n}\n\n.p-treetable-flex-scrollable .p-treetable-virtual-scrollable-body {\n    flex: 1;\n}\n\n/* Resizable */\n.p-treetable-resizable>.p-treetable-wrapper {\n    overflow-x: auto;\n}\n\n.p-treetable-resizable .p-treetable-thead>tr>th,\n.p-treetable-resizable .p-treetable-tfoot>tr>td,\n.p-treetable-resizable .p-treetable-tbody>tr>td {\n    overflow: hidden;\n}\n\n.p-treetable-resizable .p-resizable-column {\n    background-clip: padding-box;\n    position: relative;\n}\n\n.p-treetable-resizable-fit .p-resizable-column:last-child .p-column-resizer {\n    display: none;\n}\n\n.p-treetable .p-column-resizer {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    margin: 0;\n    width: ${dt('treetable.column.resizer.width')};\n    height: 100%;\n    padding: 0px;\n    cursor: col-resize;\n    border: 1px solid transparent;\n}\n\n.p-treetable .p-column-resizer-helper {\n    width: ${dt('treetable.resize.indicator.width')};\n    position: absolute;\n    z-index: 10;\n    display: none;\n    background: ${dt('treetable.resize.indicator.color')};\n}\n\n.p-treetable .p-row-editor-init,\n.p-treetable .p-row-editor-save,\n.p-treetable .p-row-editor-cancel {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n}\n\n\n/* Reorder */\n.p-treetable-reorder-indicator-up,\n.p-treetable-reorder-indicator-down {\n    position: absolute;\n    display: none;\n}\n\n[ttReorderableColumn] {\n    cursor: move;\n}\n\n/* Loader */\n.p-treetable-mask {\n    position: absolute !important;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 2;\n}\n\n.p-treetable-loading-icon {\n    font-size: ${dt('treetable.loading.icon.size')};\n    width: ${dt('treetable.loading.icon.size')};\n    height: ${dt('treetable.loading.icon.size')};\n}\n\n/* Virtual Scroll */\n.p-treetable .p-scroller-loading {\n    transform: none !important;\n    min-height: 0;\n    position: sticky;\n    top: 0;\n    left: 0;\n}\n\n.p-treetable .p-paginator-top {\n    border-color: ${dt('treetable.paginator.top.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.paginator.top.border.width')};\n}\n\n.p-treetable .p-paginator-bottom {\n    border-color: ${dt('treetable.paginator.bottom.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.paginator.bottom.border.width')};\n}\n\n.p-treetable .p-treetable-header {\n    background: ${dt('treetable.header.background')};\n    color: ${dt('treetable.header.color')};\n    border-color: ${dt('treetable.header.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.header.border.width')};\n    padding: ${dt('treetable.header.padding')};\n    font-weight: ${dt('treetable.column.title.font.weight')};\n}\n\n.p-treetable .p-treetable-footer {\n    background: ${dt('treetable.footer.background')};\n    color: ${dt('treetable.footer.color')};\n    border-color: ${dt('treetable.footer.border.color')};\n    border-style: solid;\n    border-width: ${dt('treetable.footer.border.width')};\n    padding: ${dt('treetable.footer.padding')};\n    font-weight: ${dt('treetable.column.footer.font.weight')};\n}\n\n.p-treetable .p-treetable-thead>tr>th {\n    padding: ${dt('treetable.header.cell.padding')};\n    background: ${dt('treetable.header.cell.background')};\n    border-color: ${dt('treetable.header.cell.border.color')};\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    color: ${dt('treetable.header.cell.color')};\n    font-weight: ${dt('treetable.column.title.font.weight')};\n    text-align: start;\n    transition: background ${dt('treetable.transition.duration')}, color ${dt('treetable.transition.duration')}, border-color ${dt('treetable.transition.duration')},\n            outline-color ${dt('treetable.transition.duration')}, box-shadow ${dt('treetable.transition.duration')};\n}\n\n.p-treetable .p-treetable-tfoot>tr>td {\n    text-align: start;\n    padding: ${dt('treetable.footer.cell.padding')};\n    border-color: ${dt('treetable.footer.cell.border.color')};\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    color: ${dt('treetable.footer.cell.color')};\n    background: ${dt('treetable.footer.cell.background')};\n    font-weight: ${dt('treetable.column.footer.font.weight')};\n}\n\n.p-treetable .p-sortable-column {\n    cursor: pointer;\n    user-select: none;\n    outline-color: transparent;\n    vertical-align: middle;\n}\n\n.p-treetable .p-sortable-column .p-sortable-column-icon {\n    color: ${dt('treetable.sort.icon.color')};\n    transition: color ${dt('treetable.transition.duration')};\n}\n\n\n.p-treetable .p-sortable-column:not(.p-treetable-column-sorted):hover {\n    background: ${dt('treetable.header.cell.hover.background')};\n    color: ${dt('treetable.header.cell.hover.color')};\n}\n\n.p-treetable .p-sortable-column:not(.p-treetable-column-sorted):hover .p-sortable-column-icon {\n    color: ${dt('treetable.sort.icon.hover.color')};\n}\n\n.p-treetable .p-sortable-column.p-treetable-column-sorted {\n    background: ${dt('treetable.header.cell.selected.background')};\n    color: ${dt('treetable.header.cell.selected.color')};\n}\n\n.p-treetable .p-sortable-column.p-treetable-column-sorted .p-sortable-column-icon {\n    color: ${dt('treetable.header.cell.selected.color')};\n}\n\n.p-treetable .p-sortable-column:focus-visible {\n    box-shadow: ${dt('treetable.header.cell.focus.ring.shadow')};\n    outline: ${dt('treetable.header.cell.focus.ring.width')} ${dt('treetable.header.cell.focus.ring.style')} ${dt('treetable.header.cell.focus.ring.color')};\n    outline-offset: ${dt('treetable.header.cell.focus.ring.offset')};\n}\n\n.p-treetable-hoverable .p-treetable-selectable-row {\n    cursor: pointer;\n}\n\n.p-treetable .p-treetable-tbody > tr {\n    outline-color: transparent;\n    background: ${dt('treetable.row.background')};\n    color: ${dt('treetable.row.color')};\n    transition: background ${dt('treetable.transition.duration')}, color ${dt('treetable.transition.duration')}, border-color ${dt('treetable.transition.duration')},\n            outline-color ${dt('treetable.transition.duration')}, box-shadow ${dt('treetable.transition.duration')};\n}\n\n.p-treetable .p-treetable-tbody>tr>td {\n    text-align: start;\n    border-color: ${dt('treetable.body.cell.border.color')};\n    border-style: solid;\n    border-width: 0 0 1px 0;\n    padding: ${dt('treetable.body.cell.padding')};\n}\n\n.p-treetable .p-treetable-tbody>tr>td .p-treetable-toggler {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    width: ${dt('treetable.node.toggle.button.size')};\n    height: ${dt('treetable.node.toggle.button.size')};\n    color: ${dt('treetable.node.toggle.button.color')};\n    border: 0 none;\n    background: transparent;\n    cursor: pointer;\n    border-radius: ${dt('treetable.node.toggle.button.border.radius')};\n    transition: background ${dt('treetable.transition.duration')}, color ${dt('treetable.transition.duration')}, border-color ${dt('treetable.transition.duration')},\n            outline-color ${dt('treetable.transition.duration')}, box-shadow ${dt('treetable.transition.duration')};\n    outline-color: transparent;\n    user-select: none;\n}\n\n.p-treetable .p-treetable-tbody>tr>td .p-treetable-toggler:enabled:hover {\n    color: ${dt('treetable.node.toggle.button.hover.color')};\n    background: ${dt('treetable.node.toggle.button.hover.background')};\n}\n\n.p-treetable .p-treetable-tbody>tr>tr.treetable-row-selected .p-treetable-toggler:hover {\n    background: ${dt('treetable.node.toggle.button.selected.hover.background')};\n    color: ${dt('treetable.node.toggle.button.selected.hover.color')};\n}\n\n.p-treetable .p-treetable-tbody>tr>td .p-treetable-toggler:focus-visible {\n    box-shadow: ${dt('treetable.node.toggle.button.focus.ring.shadow')};\n    outline: ${dt('treetable.node.toggle.button.focus.ring.width')} ${dt('treetable.node.toggle.button.focus.ring.style')} ${dt('treetable.node.toggle.button.focus.ring.color')};\n    outline-offset: ${dt('treetable.node.toggle.button.focus.ring.offset')};\n}\n\n\n.p-treetable .p-treetable-tbody>tr.p-treetable-row-selected {\n    background: ${dt('treetable.row.selected.background')};\n    color: ${dt('treetable.row.selected.color')};\n}\n\n.p-treetable-tbody > tr:focus-visible,\n.p-treetable-tbody > tr.p-treetable-contextmenu-row-selected {\n    box-shadow: ${dt('treetable.row.focus.ring.shadow')};\n    outline: ${dt('treetable.row.focus.ring.width')} ${dt('treetable.row.focus.ring.style')} ${dt('treetable.row.focus.ring.color')};\n    outline-offset: ${dt('treetable.row.focus.ring.offset')};\n}\n\n.p-treetable .p-treetable-tbody>tr.p-treetable-row-selected .p-treetable-toggler {\n    color: inherit;\n}\n\n.p-treetable .p-treetable-tbody>tr.p-treetable-row-selected .p-treetable-toggler:hover {\n    background: ${dt('treetable.node.toggle.button.selected.hover.background')};\n    color: ${dt('treetable.node.toggle.button.selected.hover.color')};\n}\n\n.p-treetable.p-treetable-hoverable-rows .p-treetable-tbody>tr:not(.p-treetable-row-selected):hover {\n    background: ${dt('treetable.row.hover.background')};\n    color: ${dt('treetable.row.hover.color')};\n}\n\n.p-treetable.p-treetable-gridlines .p-datatable-header {\n    border-width: 1px 1px 0 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-footer {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-top {\n    border-width: 0 1px 0 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-bottom {\n    border-width: 0 1px 1px 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-thead>tr>th {\n    border-width: 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-tbody>tr>td {\n    border-width: 1px;\n}\n\n.p-treetable.p-treetable-gridlines .p-treetable-tfoot>tr>td {\n    border-width: 1px;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-header {\n    padding: 0.65625rem 0.875rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-thead>tr>th {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-tbody>tr>td {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-tfoot>tr>td {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-sm .p-treetable-footer {\n    padding: 0.375rem 0.5rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-header {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-thead>tr>th {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-tbody>tr>td {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-tfoot>tr>td {\n    padding: 0.9375rem 1.25rem;\n}\n\n.p-treetable.p-treetable-lg .p-treetable-footer {\n    padding: 0.9375rem 1.25rem;\n}\n\np-treetabletoggler + p-treetablecheckbox .p-checkbox,\np-treetable-toggler + p-treetable-checkbox .p-checkbox,\np-tree-table-toggler + p-tree-table-checkbox .p-checkbox {\n    vertical-align: middle;\n}\n\np-treetabletoggler + p-treetablecheckbox + span,\np-treetable-toggler + p-treetable-checkbox + span,\np-tree-table-toggler + p-tree-table-checkbox + span {\n    vertical-align: middle;\n}\n`;\nconst classes = {\n    root: ({ instance }) => ({\n        'p-treetable p-component': true,\n        'p-treetable-hoverable': instance.rowHover || instance.selectionMode,\n        'p-treetable-resizable': instance.resizableColumns,\n        'p-treetable-resizable-fit': instance.resizableColumns && instance.columnResizeMode === 'fit',\n        'p-treetable-scrollable': instance.scrollable,\n        'p-treetable-flex-scrollable': instance.scrollable && instance.scrollHeight === 'flex',\n        'p-treetable-gridlines': instance.showGridlines,\n        'p-treetable-sm': instance.size === 'small',\n        'p-treetable-lg': instance.size === 'large'\n    }),\n    loading: 'p-treetable-loading', //TODO: required?\n    mask: 'p-treetable-mask p-overlay-mask',\n    loadingIcon: 'p-treetable-loading-icon',\n    header: 'p-treetable-header',\n    paginator: ({ instance }) => 'p-treetable-paginator-' + instance.paginatorPosition,\n    tableContainer: 'p-treetable-table-container',\n    table: ({ instance }) => ({\n        'p-treetable-table': true,\n        'p-treetable-scrollable-table': instance.scrollable,\n        'p-treetable-resizable-table': instance.resizableColumns,\n        'p-treetable-resizable-table-fit': instance.resizableColumns && instance.columnResizeMode === 'fit'\n    }),\n    thead: 'p-treetable-thead',\n    headerCell: ({ instance }) => ({\n        'p-treetable-header-cell': true,\n        'p-treetable-sortable-column': instance.sortable,\n        'p-treetable-resizable-column': instance.resizableColumns,\n        'p-treetable-column-sorted': instance?.sorted,\n        'p-treetable-frozen-column': instance.columnProp('frozen')\n    }),\n    columnResizer: 'p-treetable-column-resizer',\n    columnHeaderContent: 'p-treetable-column-header-content',\n    columnTitle: 'p-treetable-column-title',\n    sortIcon: 'p-treetable-sort-icon',\n    pcSortBadge: 'p-treetable-sort-badge',\n    tbody: 'p-treetable-tbody',\n    row: ({ instance }) => ({\n        'p-treetable-row-selected': instance.selected\n    }),\n    bodyCell: ({ instance }) => ({\n        'p-treetable-frozen-column': instance.columnProp('frozen')\n    }),\n    bodyCellContent: ({ instance }) => ({\n        'p-treetable-body-cell-content': true,\n        'p-treetable-body-cell-content-expander': instance.columnProp('expander')\n    }),\n    toggler: 'p-treetable-body-cell-content-expander',\n    nodeToggleButton: 'p-treetable-node-toggle-button',\n    nodeToggleIcon: 'p-treetable-node-toggle-icon',\n    pcNodeCheckbox: 'p-treetable-node-checkbox',\n    emptyMessage: 'p-treetable-empty-message',\n    tfoot: 'p-treetable-tfoot',\n    footerCell: ({ instance }) => ({\n        'p-treetable-frozen-column': instance.columnProp('frozen')\n    }),\n    footer: 'p-treetable-footer',\n    columnResizeIndicator: 'p-treetable-column-resize-indicator'\n};\nconst inlineStyles = {\n    tableContainer: { overflow: 'auto' },\n    thead: { position: 'sticky' },\n    tfoot: { position: 'sticky' }\n};\nclass TreeTableStyle extends BaseStyle {\n    name = 'treetable';\n    theme = theme;\n    classes = classes;\n    inlineStyles = inlineStyles;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * TreeTable is used to display hierarchical data in tabular format.\n *\n * [Live Demo](https://www.primeng.org/treetable/)\n *\n * @module treetablestyle\n *\n */\nvar TreeTableClasses;\n(function (TreeTableClasses) {\n    /**\n     * Class name of the root element\n     */\n    TreeTableClasses[\"root\"] = \"p-treetable\";\n    /**\n     * Class name of the loading element\n     */\n    TreeTableClasses[\"loading\"] = \"p-treetable-loading\";\n    /**\n     * Class name of the mask element\n     */\n    TreeTableClasses[\"mask\"] = \"p-treetable-mask\";\n    /**\n     * Class name of the loading icon element\n     */\n    TreeTableClasses[\"loadingIcon\"] = \"p-treetable-loading-icon\";\n    /**\n     * Class name of the header element\n     */\n    TreeTableClasses[\"header\"] = \"p-treetable-header\";\n    /**\n     * Class name of the paginator element\n     */\n    TreeTableClasses[\"paginator\"] = \"p-treetable-paginator-[position]\";\n    /**\n     * Class name of the table container element\n     */\n    TreeTableClasses[\"tableContainer\"] = \"p-treetable-table-container\";\n    /**\n     * Class name of the table element\n     */\n    TreeTableClasses[\"table\"] = \"p-treetable-table\";\n    /**\n     * Class name of the thead element\n     */\n    TreeTableClasses[\"thead\"] = \"p-treetable-thead\";\n    /**\n     * Class name of the column resizer element\n     */\n    TreeTableClasses[\"columnResizer\"] = \"p-treetable-column-resizer\";\n    /**\n     * Class name of the column title element\n     */\n    TreeTableClasses[\"columnTitle\"] = \"p-treetable-column-title\";\n    /**\n     * Class name of the sort icon element\n     */\n    TreeTableClasses[\"sortIcon\"] = \"p-treetable-sort-icon\";\n    /**\n     * Class name of the sort badge element\n     */\n    TreeTableClasses[\"pcSortBadge\"] = \"p-treetable-sort-badge\";\n    /**\n     * Class name of the tbody element\n     */\n    TreeTableClasses[\"tbody\"] = \"p-treetable-tbody\";\n    /**\n     * Class name of the node toggle button element\n     */\n    TreeTableClasses[\"nodeToggleButton\"] = \"p-treetable-node-toggle-button\";\n    /**\n     * Class name of the node toggle icon element\n     */\n    TreeTableClasses[\"nodeToggleIcon\"] = \"p-treetable-node-toggle-icon\";\n    /**\n     * Class name of the node checkbox element\n     */\n    TreeTableClasses[\"pcNodeCheckbox\"] = \"p-treetable-node-checkbox\";\n    /**\n     * Class name of the empty message element\n     */\n    TreeTableClasses[\"emptyMessage\"] = \"p-treetable-empty-message\";\n    /**\n     * Class name of the tfoot element\n     */\n    TreeTableClasses[\"tfoot\"] = \"p-treetable-tfoot\";\n    /**\n     * Class name of the footer element\n     */\n    TreeTableClasses[\"footer\"] = \"p-treetable-footer\";\n    /**\n     * Class name of the column resize indicator element\n     */\n    TreeTableClasses[\"columnResizeIndicator\"] = \"p-treetable-column-resize-indicator\";\n})(TreeTableClasses || (TreeTableClasses = {}));\n\nclass TreeTableService {\n    sortSource = new Subject();\n    selectionSource = new Subject();\n    contextMenuSource = new Subject();\n    uiUpdateSource = new Subject();\n    totalRecordsSource = new Subject();\n    sortSource$ = this.sortSource.asObservable();\n    selectionSource$ = this.selectionSource.asObservable();\n    contextMenuSource$ = this.contextMenuSource.asObservable();\n    uiUpdateSource$ = this.uiUpdateSource.asObservable();\n    totalRecordsSource$ = this.totalRecordsSource.asObservable();\n    onSort(sortMeta) {\n        this.sortSource.next(sortMeta);\n    }\n    onSelectionChange() {\n        this.selectionSource.next(null);\n    }\n    onContextMenu(node) {\n        this.contextMenuSource.next(node);\n    }\n    onUIUpdate(value) {\n        this.uiUpdateSource.next(value);\n    }\n    onTotalRecordsChange(value) {\n        this.totalRecordsSource.next(value);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableService, decorators: [{\n            type: Injectable\n        }] });\n/**\n * TreeTable is used to display hierarchical data in tabular format.\n * @group Components\n */\nclass TreeTable extends BaseComponent {\n    _componentStyle = inject(TreeTableStyle);\n    /**\n     * An array of objects to represent dynamic columns.\n     * @group Props\n     */\n    columns;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the table.\n     * @group Props\n     */\n    tableStyle;\n    /**\n     * Style class of the table.\n     * @group Props\n     */\n    tableStyleClass;\n    /**\n     * Whether the cell widths scale according to their content or not.\n     * @group Props\n     */\n    autoLayout;\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether to call lazy loading on initialization.\n     * @group Props\n     */\n    lazyLoadOnInit = true;\n    /**\n     * When specified as true, enables the pagination.\n     * @group Props\n     */\n    paginator;\n    /**\n     * Number of rows to display per page.\n     * @group Props\n     */\n    rows;\n    /**\n     * Index of the first row to be displayed.\n     * @group Props\n     */\n    first = 0;\n    /**\n     * Number of page links to display in paginator.\n     * @group Props\n     */\n    pageLinks = 5;\n    /**\n     * Array of integer/object values to display inside rows per page dropdown of paginator\n     * @group Props\n     */\n    rowsPerPageOptions;\n    /**\n     * Whether to show it even there is only one page.\n     * @group Props\n     */\n    alwaysShowPaginator = true;\n    /**\n     * Position of the paginator.\n     * @group Props\n     */\n    paginatorPosition = 'bottom';\n    /**\n     * Custom style class for paginator\n     * @group Props\n     */\n    paginatorStyleClass;\n    /**\n     * Target element to attach the paginator dropdown overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    paginatorDropdownAppendTo;\n    /**\n     * Template of the current page report element. Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\n     * @group Props\n     */\n    currentPageReportTemplate = '{currentPage} of {totalPages}';\n    /**\n     * Whether to display current page report.\n     * @group Props\n     */\n    showCurrentPageReport;\n    /**\n     * Whether to display a dropdown to navigate to any page.\n     * @group Props\n     */\n    showJumpToPageDropdown;\n    /**\n     * When enabled, icons are displayed on paginator to go first and last page.\n     * @group Props\n     */\n    showFirstLastIcon = true;\n    /**\n     * Whether to show page links.\n     * @group Props\n     */\n    showPageLinks = true;\n    /**\n     * Sort order to use when an unsorted column gets sorted by user interaction.\n     * @group Props\n     */\n    defaultSortOrder = 1;\n    /**\n     * Defines whether sorting works on single column or on multiple columns.\n     * @group Props\n     */\n    sortMode = 'single';\n    /**\n     * When true, resets paginator to first page after sorting.\n     * @group Props\n     */\n    resetPageOnSort = true;\n    /**\n     * Whether to use the default sorting or a custom one using sortFunction.\n     * @group Props\n     */\n    customSort;\n    /**\n     * Specifies the selection mode, valid values are \"single\" and \"multiple\".\n     * @group Props\n     */\n    selectionMode;\n    /**\n     * Selected row with a context menu.\n     * @group Props\n     */\n    contextMenuSelection;\n    /**\n     * Mode of the contet menu selection.\n     * @group Props\n     */\n    contextMenuSelectionMode = 'separate';\n    /**\n     * A property to uniquely identify a record in data.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Defines whether metaKey is should be considered for the selection. On touch enabled devices, metaKeySelection is turned off automatically.\n     * @group Props\n     */\n    metaKeySelection = false;\n    /**\n     * Algorithm to define if a row is selected, valid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields.\n     * @group Props\n     */\n    compareSelectionBy = 'deepEquals';\n    /**\n     * Adds hover effect to rows without the need for selectionMode.\n     * @group Props\n     */\n    rowHover;\n    /**\n     * Displays a loader to indicate data load is in progress.\n     * @group Props\n     */\n    loading;\n    /**\n     * The icon to show while indicating data load is in progress.\n     * @group Props\n     */\n    loadingIcon;\n    /**\n     * Whether to show the loading mask when loading property is true.\n     * @group Props\n     */\n    showLoader = true;\n    /**\n     * When specified, enables horizontal and/or vertical scrolling.\n     * @group Props\n     */\n    scrollable;\n    /**\n     * Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size.\n     * @group Props\n     */\n    scrollHeight;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of a row to use in calculations of virtual scrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * The delay (in milliseconds) before triggering the virtual scroll. This determines the time gap between the user's scroll action and the actual rendering of the next set of items in the virtual scroll.\n     * @group Props\n     */\n    virtualScrollDelay = 150;\n    /**\n     * Width of the frozen columns container.\n     * @group Props\n     */\n    frozenWidth;\n    /**\n     * An array of objects to represent dynamic columns that are frozen.\n     * @group Props\n     */\n    frozenColumns;\n    /**\n     * When enabled, columns can be resized using drag and drop.\n     * @group Props\n     */\n    resizableColumns;\n    /**\n     * Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\".\n     * @group Props\n     */\n    columnResizeMode = 'fit';\n    /**\n     * When enabled, columns can be reordered using drag and drop.\n     * @group Props\n     */\n    reorderableColumns;\n    /**\n     * Local ng-template varilable of a ContextMenu.\n     * @group Props\n     */\n    contextMenu;\n    /**\n     * Function to optimize the dom operations by delegating to ngForTrackBy, default algorithm checks for object identity.\n     * @group Props\n     */\n    rowTrackBy = (index, item) => item;\n    /**\n     * An array of FilterMetadata objects to provide external filters.\n     * @group Props\n     */\n    filters = {};\n    /**\n     * An array of fields as string to use in global filtering.\n     * @group Props\n     */\n    globalFilterFields;\n    /**\n     * Delay in milliseconds before filtering the data.\n     * @group Props\n     */\n    filterDelay = 300;\n    /**\n     * Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.\n     * @group Props\n     */\n    filterMode = 'lenient';\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Locale to be used in paginator formatting.\n     * @group Props\n     */\n    paginatorLocale;\n    /**\n     * Number of total records, defaults to length of value when not defined.\n     * @group Props\n     */\n    get totalRecords() {\n        return this._totalRecords;\n    }\n    set totalRecords(val) {\n        this._totalRecords = val;\n        this.tableService.onTotalRecordsChange(this._totalRecords);\n    }\n    /**\n     * Name of the field to sort data by default.\n     * @group Props\n     */\n    get sortField() {\n        return this._sortField;\n    }\n    set sortField(val) {\n        this._sortField = val;\n    }\n    /**\n     * Order to sort when default sorting is enabled.\n     * @defaultValue 1\n     * @group Props\n     */\n    get sortOrder() {\n        return this._sortOrder;\n    }\n    set sortOrder(val) {\n        this._sortOrder = val;\n    }\n    /**\n     * An array of SortMeta objects to sort the data by default in multiple sort mode.\n     * @defaultValue null\n     * @group Props\n     */\n    get multiSortMeta() {\n        return this._multiSortMeta;\n    }\n    set multiSortMeta(val) {\n        this._multiSortMeta = val;\n    }\n    /**\n     * Selected row in single mode or an array of values in multiple mode.\n     * @defaultValue null\n     * @group Props\n     */\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n    }\n    /**\n     * An array of objects to display.\n     * @defaultValue null\n     * @group Props\n     */\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n    }\n    /**\n     * Indicates the height of rows to be scrolled.\n     * @defaultValue 28\n     * @group Props\n     * @deprecated use virtualScrollItemSize property instead.\n     */\n    get virtualRowHeight() {\n        return this._virtualRowHeight;\n    }\n    set virtualRowHeight(val) {\n        this._virtualRowHeight = val;\n        console.log('The virtualRowHeight property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    /**\n     * A map of keys to control the selection state.\n     * @group Props\n     */\n    get selectionKeys() {\n        return this._selectionKeys;\n    }\n    set selectionKeys(value) {\n        this._selectionKeys = value;\n        this.selectionKeysChange.emit(this._selectionKeys);\n    }\n    /**\n     * Whether to show grid lines between cells.\n     * @defaultValue false\n     * @group Props\n     */\n    showGridlines = false;\n    /**\n     * Callback to invoke on selected node change.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    selectionChange = new EventEmitter();\n    /**\n     * Callback to invoke on context menu selection change.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    contextMenuSelectionChange = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {TreeTableFilterEvent} event - Custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when a node is expanded.\n     * @param {TreeTableNodeExpandEvent} event - Node expand event.\n     * @group Emits\n     */\n    onNodeExpand = new EventEmitter();\n    /**\n     * Callback to invoke when a node is collapsed.\n     * @param {TreeTableNodeCollapseEvent} event - Node collapse event.\n     * @group Emits\n     */\n    onNodeCollapse = new EventEmitter();\n    /**\n     * Callback to invoke when pagination occurs.\n     * @param {TreeTablePaginatorState} object - Paginator state.\n     * @group Emits\n     */\n    onPage = new EventEmitter();\n    /**\n     * Callback to invoke when a column gets sorted.\n     * @param {Object} Object - Sort data.\n     * @group Emits\n     */\n    onSort = new EventEmitter();\n    /**\n     * Callback to invoke when paging, sorting or filtering happens in lazy mode.\n     * @param {TreeTableLazyLoadEvent} event - Custom lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    /**\n     * An event emitter to invoke on custom sorting, refer to sorting section for details.\n     * @param {TreeTableSortEvent} event - Custom sort event.\n     * @group Emits\n     */\n    sortFunction = new EventEmitter();\n    /**\n     * Callback to invoke when a column is resized.\n     * @param {TreeTableColResizeEvent} event - Custom column resize event.\n     * @group Emits\n     */\n    onColResize = new EventEmitter();\n    /**\n     * Callback to invoke when a column is reordered.\n     * @param {TreeTableColumnReorderEvent} event - Custom column reorder.\n     * @group Emits\n     */\n    onColReorder = new EventEmitter();\n    /**\n     * Callback to invoke when a node is selected.\n     * @param {TreeTableNode} object - Node instance.\n     * @group Emits\n     */\n    onNodeSelect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is unselected.\n     * @param {TreeTableNodeUnSelectEvent} event - Custom node unselect event.\n     * @group Emits\n     */\n    onNodeUnselect = new EventEmitter();\n    /**\n     * Callback to invoke when a node is selected with right click.\n     * @param {TreeTableContextMenuSelectEvent} event - Custom context menu select event.\n     * @group Emits\n     */\n    onContextMenuSelect = new EventEmitter();\n    /**\n     * Callback to invoke when state of header checkbox changes.\n     * @param {TreeTableHeaderCheckboxToggleEvent} event - Custom checkbox toggle event.\n     * @group Emits\n     */\n    onHeaderCheckboxToggle = new EventEmitter();\n    /**\n     * Callback to invoke when a cell switches to edit mode.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    onEditInit = new EventEmitter();\n    /**\n     * Callback to invoke when cell edit is completed.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    onEditComplete = new EventEmitter();\n    /**\n     * Callback to invoke when cell edit is cancelled with escape key.\n     * @param {TreeTableEditEvent} event - Custom edit event.\n     * @group Emits\n     */\n    onEditCancel = new EventEmitter();\n    /**\n     * Callback to invoke when selectionKeys are changed.\n     * @param {Object} object - updated value of the selectionKeys.\n     * @group Emits\n     */\n    selectionKeysChange = new EventEmitter();\n    containerViewChild;\n    resizeHelperViewChild;\n    reorderIndicatorUpViewChild;\n    reorderIndicatorDownViewChild;\n    tableViewChild;\n    scrollableViewChild;\n    scrollableFrozenViewChild;\n    _value = [];\n    _virtualRowHeight = 28;\n    _selectionKeys;\n    serializedValue;\n    _totalRecords = 0;\n    _multiSortMeta;\n    _sortField;\n    _sortOrder = 1;\n    filteredNodes;\n    filterTimeout;\n    _colGroupTemplate;\n    colGroupTemplate;\n    _captionTemplate;\n    captionTemplate;\n    _headerTemplate;\n    headerTemplate;\n    _bodyTemplate;\n    bodyTemplate;\n    _footerTemplate;\n    footerTemplate;\n    _summaryTemplate;\n    summaryTemplate;\n    _emptyMessageTemplate;\n    emptyMessageTemplate;\n    _paginatorLeftTemplate;\n    paginatorLeftTemplate;\n    _paginatorRightTemplate;\n    paginatorRightTemplate;\n    _paginatorDropdownItemTemplate;\n    paginatorDropdownItemTemplate;\n    _frozenHeaderTemplate;\n    frozenHeaderTemplate;\n    _frozenBodyTemplate;\n    frozenBodyTemplate;\n    _frozenFooterTemplate;\n    frozenFooterTemplate;\n    _frozenColGroupTemplate;\n    frozenColGroupTemplate;\n    _loadingIconTemplate;\n    loadingIconTemplate;\n    _reorderIndicatorUpIconTemplate;\n    reorderIndicatorUpIconTemplate;\n    _reorderIndicatorDownIconTemplate;\n    reorderIndicatorDownIconTemplate;\n    _sortIconTemplate;\n    sortIconTemplate;\n    _checkboxIconTemplate;\n    checkboxIconTemplate;\n    _headerCheckboxIconTemplate;\n    headerCheckboxIconTemplate;\n    _togglerIconTemplate;\n    togglerIconTemplate;\n    _paginatorFirstPageLinkIconTemplate;\n    paginatorFirstPageLinkIconTemplate;\n    _paginatorLastPageLinkIconTemplate;\n    paginatorLastPageLinkIconTemplate;\n    _paginatorPreviousPageLinkIconTemplate;\n    paginatorPreviousPageLinkIconTemplate;\n    _paginatorNextPageLinkIconTemplate;\n    paginatorNextPageLinkIconTemplate;\n    _loaderTemplate;\n    loaderTemplate;\n    lastResizerHelperX;\n    reorderIconWidth;\n    reorderIconHeight;\n    draggedColumn;\n    dropPosition;\n    preventSelectionSetterPropagation;\n    _selection;\n    selectedKeys = {};\n    rowTouched;\n    editingCell;\n    editingCellData;\n    editingCellField;\n    editingCellClick;\n    documentEditListener;\n    initialized;\n    toggleRowIndex;\n    ngOnInit() {\n        super.ngOnInit();\n        if (this.lazy && this.lazyLoadOnInit && !this.virtualScroll) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        this.initialized = true;\n    }\n    templates;\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'caption':\n                    this.captionTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'body':\n                    this.bodyTemplate = item.template;\n                    break;\n                case 'footer':\n                    this.footerTemplate = item.template;\n                    break;\n                case 'summary':\n                    this.summaryTemplate = item.template;\n                    break;\n                case 'colgroup':\n                    this.colGroupTemplate = item.template;\n                    break;\n                case 'emptymessage':\n                    this.emptyMessageTemplate = item.template;\n                    break;\n                case 'paginatorleft':\n                    this.paginatorLeftTemplate = item.template;\n                    break;\n                case 'paginatorright':\n                    this.paginatorRightTemplate = item.template;\n                    break;\n                case 'paginatordropdownitem':\n                    this.paginatorDropdownItemTemplate = item.template;\n                    break;\n                case 'frozenheader':\n                    this.frozenHeaderTemplate = item.template;\n                    break;\n                case 'frozenbody':\n                    this.frozenBodyTemplate = item.template;\n                    break;\n                case 'frozenfooter':\n                    this.frozenFooterTemplate = item.template;\n                    break;\n                case 'frozencolgroup':\n                    this.frozenColGroupTemplate = item.template;\n                    break;\n                case 'loadingicon':\n                    this.loadingIconTemplate = item.template;\n                    break;\n                case 'reorderindicatorupicon':\n                    this.reorderIndicatorUpIconTemplate = item.template;\n                    break;\n                case 'reorderindicatordownicon':\n                    this.reorderIndicatorDownIconTemplate = item.template;\n                    break;\n                case 'sorticon':\n                    this.sortIconTemplate = item.template;\n                    break;\n                case 'checkboxicon':\n                    this.checkboxIconTemplate = item.template;\n                    break;\n                case 'headercheckboxicon':\n                    this.headerCheckboxIconTemplate = item.template;\n                    break;\n                case 'togglericon':\n                    this.togglerIconTemplate = item.template;\n                    break;\n                case 'paginatorfirstpagelinkicon':\n                    this.paginatorFirstPageLinkIconTemplate = item.template;\n                    break;\n                case 'paginatorlastpagelinkicon':\n                    this.paginatorLastPageLinkIconTemplate = item.template;\n                    break;\n                case 'paginatorpreviouspagelinkicon':\n                    this.paginatorPreviousPageLinkIconTemplate = item.template;\n                    break;\n                case 'paginatornextpagelinkicon':\n                    this.paginatorNextPageLinkIconTemplate = item.template;\n                    break;\n                case 'loader':\n                    this.loaderTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    filterService = inject(FilterService);\n    tableService = inject(TreeTableService);\n    zone = inject(NgZone);\n    ngOnChanges(simpleChange) {\n        super.ngOnChanges(simpleChange);\n        if (simpleChange.value) {\n            this._value = simpleChange.value.currentValue;\n            if (!this.lazy) {\n                this.totalRecords = this._value ? this._value.length : 0;\n                if (this.sortMode == 'single' && this.sortField)\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\n                    this.sortMultiple();\n                else if (this.hasFilter())\n                    //sort already filters\n                    this._filter();\n            }\n            this.updateSerializedValue();\n            this.tableService.onUIUpdate(this.value);\n        }\n        if (simpleChange.sortField) {\n            this._sortField = simpleChange.sortField.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.sortOrder) {\n            this._sortOrder = simpleChange.sortOrder.currentValue;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        }\n        if (simpleChange.multiSortMeta) {\n            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;\n            if (this.sortMode === 'multiple') {\n                this.sortMultiple();\n            }\n        }\n        if (simpleChange.selection) {\n            this._selection = simpleChange.selection.currentValue;\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateselectedKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        }\n    }\n    updateSerializedValue() {\n        this.serializedValue = [];\n        if (this.paginator)\n            this.serializePageNodes();\n        else\n            this.serializeNodes(null, this.filteredNodes || this.value, 0, true);\n    }\n    serializeNodes(parent, nodes, level, visible) {\n        if (nodes && nodes.length) {\n            for (let node of nodes) {\n                node.parent = parent;\n                const rowNode = {\n                    node: node,\n                    parent: parent,\n                    level: level,\n                    visible: visible && (parent ? parent.expanded : true)\n                };\n                this.serializedValue.push(rowNode);\n                if (rowNode.visible && node.expanded) {\n                    this.serializeNodes(node, node.children, level + 1, rowNode.visible);\n                }\n            }\n        }\n    }\n    serializePageNodes() {\n        let data = this.filteredNodes || this.value;\n        this.serializedValue = [];\n        if (data && data.length) {\n            const first = this.lazy ? 0 : this.first;\n            for (let i = first; i < first + this.rows; i++) {\n                let node = data[i];\n                if (node) {\n                    this.serializedValue.push({\n                        node: node,\n                        parent: null,\n                        level: 0,\n                        visible: true\n                    });\n                    this.serializeNodes(node, node.children, 1, true);\n                }\n            }\n        }\n    }\n    updateselectedKeys() {\n        if (this.dataKey && this._selection) {\n            this.selectedKeys = {};\n            if (Array.isArray(this._selection)) {\n                for (let node of this._selection) {\n                    this.selectedKeys[String(resolveFieldData(node.data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectedKeys[String(resolveFieldData(this._selection.data, this.dataKey))] = 1;\n            }\n        }\n    }\n    onPageChange(event) {\n        this.first = event.first;\n        this.rows = event.rows;\n        if (this.lazy)\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        else\n            this.serializePageNodes();\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n        this.tableService.onUIUpdate(this.value);\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    sort(event) {\n        let originalEvent = event.originalEvent;\n        if (this.sortMode === 'single') {\n            this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            this.sortSingle();\n            if (this.resetPageOnSort && this.scrollable) {\n                this.resetScrollTop();\n            }\n        }\n        if (this.sortMode === 'multiple') {\n            let metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            let sortMeta = this.getSortMeta(event.field);\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n                    if (this.resetPageOnSort && this.scrollable) {\n                        this.resetScrollTop();\n                    }\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n                    if (this.resetPageOnSort && this.scrollable) {\n                        this.resetScrollTop();\n                    }\n                }\n                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n            this.sortMultiple();\n        }\n    }\n    sortSingle() {\n        if (this.sortField && this.sortOrder) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                this.sortNodes(this.value);\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            let sortMeta = {\n                field: this.sortField,\n                order: this.sortOrder\n            };\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n            this.updateSerializedValue();\n        }\n    }\n    sortNodes(nodes) {\n        if (!nodes || nodes.length === 0) {\n            return;\n        }\n        if (this.customSort) {\n            this.sortFunction.emit({\n                data: nodes,\n                mode: this.sortMode,\n                field: this.sortField,\n                order: this.sortOrder\n            });\n        }\n        else {\n            nodes.sort((node1, node2) => {\n                let value1 = resolveFieldData(node1.data, this.sortField);\n                let value2 = resolveFieldData(node2.data, this.sortField);\n                let result = null;\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\n                else\n                    result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n                return this.sortOrder * result;\n            });\n        }\n        for (let node of nodes) {\n            this.sortNodes(node.children);\n        }\n    }\n    sortMultiple() {\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                this.sortMultipleNodes(this.value);\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.updateSerializedValue();\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    }\n    sortMultipleNodes(nodes) {\n        if (!nodes || nodes.length === 0) {\n            return;\n        }\n        if (this.customSort) {\n            this.sortFunction.emit({\n                data: this.value,\n                mode: this.sortMode,\n                multiSortMeta: this.multiSortMeta\n            });\n        }\n        else {\n            nodes.sort((node1, node2) => {\n                return this.multisortField(node1, node2, this.multiSortMeta, 0);\n            });\n        }\n        for (let node of nodes) {\n            this.sortMultipleNodes(node.children);\n        }\n    }\n    multisortField(node1, node2, multiSortMeta, index) {\n        if (isEmpty(this.multiSortMeta) || isEmpty(multiSortMeta[index])) {\n            return 0;\n        }\n        let value1 = resolveFieldData(node1.data, multiSortMeta[index].field);\n        let value2 = resolveFieldData(node2.data, multiSortMeta[index].field);\n        let result = null;\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && value1 != value2) {\n                return multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true });\n            }\n        }\n        else {\n            result = value1 < value2 ? -1 : 1;\n        }\n        if (value1 == value2) {\n            return multiSortMeta.length - 1 > index ? this.multisortField(node1, node2, multiSortMeta, index + 1) : 0;\n        }\n        return multiSortMeta[index].order * result;\n    }\n    getSortMeta(field) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (let i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n        return null;\n    }\n    isSorted(field) {\n        if (this.sortMode === 'single') {\n            return this.sortField && this.sortField === field;\n        }\n        else if (this.sortMode === 'multiple') {\n            let sorted = false;\n            if (this.multiSortMeta) {\n                for (let i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    }\n    createLazyLoadMetadata() {\n        return {\n            first: this.first,\n            rows: this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta,\n            forceUpdate: () => this.cd.detectChanges()\n        };\n    }\n    onLazyItemLoad(event) {\n        this.onLazyLoad.emit({\n            ...this.createLazyLoadMetadata(),\n            ...event,\n            rows: event.last - event.first\n        });\n    }\n    /**\n     * Resets scroll to top.\n     * @group Method\n     */\n    resetScrollTop() {\n        if (this.virtualScroll)\n            this.scrollToVirtualIndex(0);\n        else\n            this.scrollTo({ top: 0 });\n    }\n    /**\n     * Scrolls to given index when using virtual scroll.\n     * @param {number} index - index of the element.\n     * @group Method\n     */\n    scrollToVirtualIndex(index) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollToVirtualIndex(index);\n        }\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableViewChild.scrollToVirtualIndex(index);\n        }\n    }\n    /**\n     * Scrolls to given index.\n     * @param {ScrollToOptions} options - Scroll options.\n     * @group Method\n     */\n    scrollTo(options) {\n        if (this.scrollableViewChild) {\n            this.scrollableViewChild.scrollTo(options);\n        }\n        if (this.scrollableFrozenViewChild) {\n            this.scrollableViewChild.scrollTo(options);\n        }\n    }\n    isEmpty() {\n        let data = this.filteredNodes || this.value;\n        return data == null || data.length == 0;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    onColumnResizeBegin(event) {\n        let containerLeft = getOffset(this.containerViewChild?.nativeElement).left;\n        this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft;\n        event.preventDefault();\n    }\n    onColumnResize(event) {\n        let containerLeft = getOffset(this.containerViewChild?.nativeElement).left;\n        addClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild?.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild?.nativeElement.scrollLeft + 'px';\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    }\n    onColumnResizeEnd(event, column) {\n        let delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        let columnWidth = column.offsetWidth;\n        let newColumnWidth = columnWidth + delta;\n        let minWidth = column.style.minWidth || 15;\n        if (columnWidth + delta > parseInt(minWidth)) {\n            if (this.columnResizeMode === 'fit') {\n                let nextColumn = column.nextElementSibling;\n                while (!nextColumn.offsetParent) {\n                    nextColumn = nextColumn.nextElementSibling;\n                }\n                if (nextColumn) {\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n                    let nextColumnMinWidth = nextColumn.style.minWidth || 15;\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n                        if (this.scrollable) {\n                            let scrollableView = this.findParentScrollableView(column);\n                            let scrollableBodyTable = findSingle(scrollableView, '.p-treetable-scrollable-body table') || findSingle(scrollableView, '.p-scroller-viewport table');\n                            let scrollableHeaderTable = findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n                            let scrollableFooterTable = findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n                            let resizeColumnIndex = getIndex(column);\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            column.style.width = newColumnWidth + 'px';\n                            if (nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                if (this.scrollable) {\n                    let scrollableView = this.findParentScrollableView(column);\n                    let scrollableBody = findSingle(scrollableView, '.p-treetable-scrollable-body') || findSingle(scrollableView, '.p-scroller-viewport');\n                    let scrollableHeader = findSingle(scrollableView, '.p-treetable-scrollable-header');\n                    let scrollableFooter = findSingle(scrollableView, '.p-treetable-scrollable-footer');\n                    let scrollableBodyTable = findSingle(scrollableView, '.p-treetable-scrollable-body table') || findSingle(scrollableView, '.p-scroller-viewport table');\n                    let scrollableHeaderTable = findSingle(scrollableView, 'table.p-treetable-scrollable-header-table');\n                    let scrollableFooterTable = findSingle(scrollableView, 'table.p-treetable-scrollable-footer-table');\n                    scrollableBodyTable.style.width = scrollableBodyTable.offsetWidth + delta + 'px';\n                    scrollableHeaderTable.style.width = scrollableHeaderTable.offsetWidth + delta + 'px';\n                    if (scrollableFooterTable) {\n                        scrollableFooterTable.style.width = scrollableFooterTable.offsetWidth + delta + 'px';\n                    }\n                    let resizeColumnIndex = getIndex(column);\n                    const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n                    const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n                    const isContainerInViewport = this.containerViewChild?.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n                    let setWidth = (container, table, width, isContainerInViewport) => {\n                        if (container && table) {\n                            container.style.width = isContainerInViewport ? width + calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n                            table.style.width = width + 'px';\n                        }\n                    };\n                    setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n                    setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n                    setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n                }\n                else {\n                    this.tableViewChild.nativeElement.style.width = this.tableViewChild?.nativeElement.offsetWidth + delta + 'px';\n                    column.style.width = newColumnWidth + 'px';\n                    let containerWidth = this.tableViewChild?.nativeElement.style.width;\n                    this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n                }\n            }\n            this.onColResize.emit({\n                element: column,\n                delta: delta\n            });\n        }\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        removeClass(this.containerViewChild?.nativeElement, 'p-unselectable-text');\n    }\n    findParentScrollableView(column) {\n        if (column) {\n            let parent = column.parentElement;\n            while (parent && !hasClass(parent, 'p-treetable-scrollable-view')) {\n                parent = parent.parentElement;\n            }\n            return parent;\n        }\n        else {\n            return null;\n        }\n    }\n    resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n        if (table) {\n            let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n            if (colGroup) {\n                let col = colGroup.children[resizeColumnIndex];\n                let nextCol = col.nextElementSibling;\n                col.style.width = newColumnWidth + 'px';\n                if (nextCol && nextColumnWidth) {\n                    nextCol.style.width = nextColumnWidth + 'px';\n                }\n            }\n            else {\n                throw 'Scrollable tables require a colgroup to support resizable columns';\n            }\n        }\n    }\n    onColumnDragStart(event, columnElement) {\n        this.reorderIconWidth = getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild?.nativeElement);\n        this.reorderIconHeight = getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild?.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    }\n    onColumnDragEnter(event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            let containerOffset = getOffset(this.containerViewChild?.nativeElement);\n            let dropHeaderOffset = getOffset(dropHeader);\n            if (this.draggedColumn != dropHeader) {\n                let targetLeft = dropHeaderOffset.left - containerOffset.left;\n                let targetTop = containerOffset.top - dropHeaderOffset.top;\n                let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';\n                    this.dropPosition = -1;\n                }\n                this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    }\n    onColumnDragLeave(event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    }\n    onColumnDrop(event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            let dragIndex = DomHandler.indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');\n            let dropIndex = DomHandler.indexWithinGroup(dropColumn, 'ttreorderablecolumn');\n            let allowDrop = dragIndex != dropIndex;\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n            if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {\n                dropIndex = dropIndex + 1;\n            }\n            if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {\n                dropIndex = dropIndex - 1;\n            }\n            if (allowDrop) {\n                reorderArray(this.columns, dragIndex, dropIndex);\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n            }\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    }\n    handleRowClick(event) {\n        let targetNode = event.originalEvent.target.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || hasClass(event.originalEvent.target, 'p-clickable')) {\n            return;\n        }\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            let rowNode = event.rowNode;\n            let selected = this.isSelected(rowNode.node);\n            let metaSelection = this.rowTouched ? false : this.metaKeySelection;\n            let dataKeyValue = this.dataKey ? String(resolveFieldData(rowNode.node.data, this.dataKey)) : null;\n            if (metaSelection) {\n                let keyboardEvent = event.originalEvent;\n                let metaKey = keyboardEvent.metaKey || keyboardEvent.ctrlKey;\n                if (selected && metaKey) {\n                    if (this.isSingleSelectionMode()) {\n                        this._selection = null;\n                        this.selectedKeys = {};\n                        this.selectionChange.emit(null);\n                    }\n                    else {\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\n                        this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            delete this.selectedKeys[dataKeyValue];\n                        }\n                    }\n                    this.onNodeUnselect.emit({\n                        originalEvent: event.originalEvent,\n                        node: rowNode.node,\n                        type: 'row'\n                    });\n                }\n                else {\n                    if (this.isSingleSelectionMode()) {\n                        this._selection = rowNode.node;\n                        this.selectionChange.emit(rowNode.node);\n                        if (dataKeyValue) {\n                            this.selectedKeys = {};\n                            this.selectedKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        if (metaKey) {\n                            this._selection = this.selection || [];\n                        }\n                        else {\n                            this._selection = [];\n                            this.selectedKeys = {};\n                        }\n                        this._selection = [...this.selection, rowNode.node];\n                        this.selectionChange.emit(this.selection);\n                        if (dataKeyValue) {\n                            this.selectedKeys[dataKeyValue] = 1;\n                        }\n                    }\n                    this.onNodeSelect.emit({\n                        originalEvent: event.originalEvent,\n                        node: rowNode.node,\n                        type: 'row',\n                        index: event.rowIndex\n                    });\n                }\n            }\n            else {\n                if (this.selectionMode === 'single') {\n                    if (selected) {\n                        this._selection = null;\n                        this.selectedKeys = {};\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeUnselect.emit({\n                            originalEvent: event.originalEvent,\n                            node: rowNode.node,\n                            type: 'row'\n                        });\n                    }\n                    else {\n                        this._selection = rowNode.node;\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeSelect.emit({\n                            originalEvent: event.originalEvent,\n                            node: rowNode.node,\n                            type: 'row',\n                            index: event.rowIndex\n                        });\n                        if (dataKeyValue) {\n                            this.selectedKeys = {};\n                            this.selectedKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n                else if (this.selectionMode === 'multiple') {\n                    if (selected) {\n                        let selectionIndex = this.findIndexInSelection(rowNode.node);\n                        this._selection = this.selection.filter((val, i) => i != selectionIndex);\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeUnselect.emit({\n                            originalEvent: event.originalEvent,\n                            node: rowNode.node,\n                            type: 'row'\n                        });\n                        if (dataKeyValue) {\n                            delete this.selectedKeys[dataKeyValue];\n                        }\n                    }\n                    else {\n                        this._selection = this.selection ? [...this.selection, rowNode.node] : [rowNode.node];\n                        this.selectionChange.emit(this.selection);\n                        this.onNodeSelect.emit({\n                            originalEvent: event.originalEvent,\n                            node: rowNode.node,\n                            type: 'row',\n                            index: event.rowIndex\n                        });\n                        if (dataKeyValue) {\n                            this.selectedKeys[dataKeyValue] = 1;\n                        }\n                    }\n                }\n            }\n            this.tableService.onSelectionChange();\n        }\n        this.rowTouched = false;\n    }\n    handleRowTouchEnd(event) {\n        this.rowTouched = true;\n    }\n    handleRowRightClick(event) {\n        if (this.contextMenu) {\n            const node = event.rowNode.node;\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = node;\n                this.contextMenuSelectionChange.emit(node);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, node: node });\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(node);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                let selected = this.isSelected(node);\n                let dataKeyValue = this.dataKey ? String(resolveFieldData(node.data, this.dataKey)) : null;\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = node;\n                        this.selectionChange.emit(node);\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this.selection = [node];\n                        this.selectionChange.emit(this.selection);\n                    }\n                    if (dataKeyValue) {\n                        this.selectedKeys[dataKeyValue] = 1;\n                    }\n                }\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, node: node });\n            }\n        }\n    }\n    toggleNodeWithCheckbox(event) {\n        // legacy selection support, will be removed in v18\n        this.selection = this.selection || [];\n        this.preventSelectionSetterPropagation = true;\n        let node = event.rowNode.node;\n        let selected = this.isSelected(node);\n        if (selected) {\n            this.propagateSelectionDown(node, false);\n            if (event.rowNode.parent) {\n                this.propagateSelectionUp(node.parent, false);\n            }\n            this.selectionChange.emit(this.selection);\n            this.onNodeUnselect.emit({ originalEvent: event, node: node });\n        }\n        else {\n            this.propagateSelectionDown(node, true);\n            if (event.rowNode.parent) {\n                this.propagateSelectionUp(node.parent, true);\n            }\n            this.selectionChange.emit(this.selection);\n            this.onNodeSelect.emit({ originalEvent: event, node: node });\n        }\n        this.tableService.onSelectionChange();\n    }\n    toggleNodesWithCheckbox(event, check) {\n        // legacy selection support, will be removed in v18\n        let data = this.filteredNodes || this.value;\n        this._selection = check && data ? data.slice() : [];\n        this.toggleAll(check);\n        if (!check) {\n            this._selection = [];\n            this.selectedKeys = {};\n        }\n        this.preventSelectionSetterPropagation = true;\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\n    }\n    toggleAll(checked) {\n        let data = this.filteredNodes || this.value;\n        if (!this.selectionKeys) {\n            if (data && data.length) {\n                for (let node of data) {\n                    this.propagateSelectionDown(node, checked);\n                }\n            }\n        }\n        else {\n            // legacy selection support, will be removed in v18\n            if (data && data.length) {\n                for (let node of data) {\n                    this.propagateDown(node, checked);\n                }\n                this.selectionKeysChange.emit(this.selectionKeys);\n            }\n        }\n    }\n    propagateSelectionUp(node, select) {\n        // legacy selection support, will be removed in v18\n        if (node.children && node.children.length) {\n            let selectedChildCount = 0;\n            let childPartialSelected = false;\n            let dataKeyValue = this.dataKey ? String(resolveFieldData(node.data, this.dataKey)) : null;\n            for (let child of node.children) {\n                if (this.isSelected(child))\n                    selectedChildCount++;\n                else if (child.partialSelected)\n                    childPartialSelected = true;\n            }\n            if (select && selectedChildCount == node.children.length) {\n                this._selection = [...(this.selection || []), node];\n                node.partialSelected = false;\n                if (dataKeyValue) {\n                    this.selectedKeys[dataKeyValue] = 1;\n                }\n            }\n            else {\n                if (!select) {\n                    let index = this.findIndexInSelection(node);\n                    if (index >= 0) {\n                        this._selection = this.selection.filter((val, i) => i != index);\n                        if (dataKeyValue) {\n                            delete this.selectedKeys[dataKeyValue];\n                        }\n                    }\n                }\n                if (childPartialSelected || (selectedChildCount > 0 && selectedChildCount != node.children.length))\n                    node.partialSelected = true;\n                else\n                    node.partialSelected = false;\n            }\n        }\n        let parent = node.parent;\n        node.checked = select;\n        if (parent) {\n            this.propagateSelectionUp(parent, select);\n        }\n    }\n    propagateSelectionDown(node, select) {\n        // legacy selection support, will be removed in v18\n        let index = this.findIndexInSelection(node);\n        let dataKeyValue = this.dataKey ? String(resolveFieldData(node.data, this.dataKey)) : null;\n        if (select && index == -1) {\n            this._selection = [...(this.selection || []), node];\n            if (dataKeyValue) {\n                this.selectedKeys[dataKeyValue] = 1;\n            }\n        }\n        else if (!select && index > -1) {\n            this._selection = this.selection.filter((val, i) => i != index);\n            if (dataKeyValue) {\n                delete this.selectedKeys[dataKeyValue];\n            }\n        }\n        node.partialSelected = false;\n        node.checked = select;\n        if (node.children && node.children.length) {\n            for (let child of node.children) {\n                this.propagateSelectionDown(child, select);\n            }\n        }\n    }\n    isSelected(node) {\n        // legacy selection support, will be removed in v18\n        if (node && this.selection) {\n            if (this.dataKey) {\n                if (node.hasOwnProperty('checked')) {\n                    return node['checked'];\n                }\n                else {\n                    return this.selectedKeys[resolveFieldData(node.data, this.dataKey)] !== undefined;\n                }\n            }\n            else {\n                if (Array.isArray(this.selection))\n                    return this.findIndexInSelection(node) > -1;\n                else\n                    return this.equals(node, this.selection);\n            }\n        }\n        return false;\n    }\n    isNodeSelected(node) {\n        return this.selectionMode && this.selectionKeys ? this.selectionKeys[this.nodeKey(node)]?.checked === true : false;\n    }\n    isNodePartialSelected(node) {\n        return this.selectionMode && this.selectionKeys ? this.selectionKeys[this.nodeKey(node)]?.partialChecked === true : false;\n    }\n    nodeKey(node) {\n        return resolveFieldData(node, this.dataKey) || resolveFieldData(node?.data, this.dataKey);\n    }\n    toggleCheckbox(event) {\n        let { rowNode, check, originalEvent } = event;\n        let node = rowNode.node;\n        if (this.selectionKeys) {\n            this.propagateDown(node, check);\n            if (node.parent) {\n                this.propagateUp(node.parent, check);\n            }\n            this.selectionKeysChange.emit(this.selectionKeys);\n        }\n        else {\n            this.toggleNodeWithCheckbox({ originalEvent, rowNode });\n        }\n        this.tableService.onSelectionChange();\n    }\n    propagateDown(node, check) {\n        if (check) {\n            this.selectionKeys[this.nodeKey(node)] = { checked: true, partialChecked: false };\n        }\n        else {\n            delete this.selectionKeys[this.nodeKey(node)];\n        }\n        if (node.children && node.children.length) {\n            for (let child of node.children) {\n                this.propagateDown(child, check);\n            }\n        }\n    }\n    propagateUp(node, check) {\n        let checkedChildCount = 0;\n        let childPartialSelected = false;\n        for (let child of node.children) {\n            if (this.selectionKeys[this.nodeKey(child)] && this.selectionKeys[this.nodeKey(child)].checked)\n                checkedChildCount++;\n            else if (this.selectionKeys[this.nodeKey(child)] && this.selectionKeys[this.nodeKey(child)].partialChecked)\n                childPartialSelected = true;\n        }\n        if (check && checkedChildCount === node.children.length) {\n            this.selectionKeys[this.nodeKey(node)] = { checked: true, partialChecked: false };\n        }\n        else {\n            if (!check) {\n                delete this.selectionKeys[this.nodeKey(node)];\n            }\n            if (childPartialSelected || (checkedChildCount > 0 && checkedChildCount !== node.children.length))\n                this.selectionKeys[this.nodeKey(node)] = { checked: false, partialChecked: true };\n            else\n                this.selectionKeys[this.nodeKey(node)] = { checked: false, partialChecked: false };\n        }\n        let parent = node.parent;\n        if (parent) {\n            this.propagateUp(parent, check);\n        }\n    }\n    findIndexInSelection(node) {\n        let index = -1;\n        if (this.selection && this.selection.length) {\n            for (let i = 0; i < this.selection.length; i++) {\n                if (this.equals(node, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    isSingleSelectionMode() {\n        return this.selectionMode === 'single';\n    }\n    isMultipleSelectionMode() {\n        return this.selectionMode === 'multiple';\n    }\n    equals(node1, node2) {\n        return this.compareSelectionBy === 'equals' ? equals(node1, node2) : equals(node1.data, node2.data, this.dataKey);\n    }\n    filter(value, field, matchMode) {\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        }\n        else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n        this.filterTimeout = setTimeout(() => {\n            this._filter();\n            this.filterTimeout = null;\n        }, this.filterDelay);\n    }\n    filterGlobal(value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    }\n    isFilterBlank(filter) {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (Array.isArray(filter) && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    }\n    _filter() {\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n            if (!this.hasFilter()) {\n                this.filteredNodes = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                let globalFilterFieldsArray;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields || this.columns;\n                }\n                this.filteredNodes = [];\n                const isStrictMode = this.filterMode === 'strict';\n                let isValueChanged = false;\n                for (let node of this.value) {\n                    let copyNode = { ...node };\n                    let localMatch = true;\n                    let globalMatch = false;\n                    let paramsWithoutNode;\n                    for (let prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            let filterMeta = this.filters[prop];\n                            let filterField = prop;\n                            let filterValue = filterMeta.value;\n                            let filterMatchMode = filterMeta.matchMode || 'startsWith';\n                            let filterConstraint = this.filterService.filters[filterMatchMode];\n                            paramsWithoutNode = { filterField, filterValue, filterConstraint, isStrictMode };\n                            if ((isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode))) ||\n                                (!isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode)))) {\n                                localMatch = false;\n                            }\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        let copyNodeForGlobal = { ...copyNode };\n                        let filterField = undefined;\n                        let filterValue = this.filters['global'].value;\n                        let filterConstraint = this.filterService.filters[this.filters['global'].matchMode];\n                        paramsWithoutNode = {\n                            filterField,\n                            filterValue,\n                            filterConstraint,\n                            isStrictMode,\n                            globalFilterFieldsArray\n                        };\n                        if ((isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode))) ||\n                            (!isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode)))) {\n                            globalMatch = true;\n                            copyNode = copyNodeForGlobal;\n                        }\n                    }\n                    let matches = localMatch;\n                    if (this.filters['global']) {\n                        matches = localMatch && globalMatch;\n                    }\n                    if (matches) {\n                        this.filteredNodes.push(copyNode);\n                    }\n                    isValueChanged = isValueChanged || !localMatch || globalMatch || (localMatch && this.filteredNodes.length > 0) || (!globalMatch && this.filteredNodes.length === 0);\n                }\n                if (!isValueChanged) {\n                    this.filteredNodes = null;\n                }\n                if (this.paginator) {\n                    this.totalRecords = this.filteredNodes ? this.filteredNodes.length : this.value ? this.value.length : 0;\n                }\n            }\n            this.cd.markForCheck();\n        }\n        this.first = 0;\n        const filteredValue = this.filteredNodes || this.value;\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: filteredValue\n        });\n        this.tableService.onUIUpdate(filteredValue);\n        this.updateSerializedValue();\n        if (this.scrollable) {\n            this.resetScrollTop();\n        }\n    }\n    findFilteredNodes(node, paramsWithoutNode) {\n        if (node) {\n            let matched = false;\n            if (node.children) {\n                let childNodes = [...node.children];\n                node.children = [];\n                for (let childNode of childNodes) {\n                    let copyChildNode = { ...childNode };\n                    if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {\n                        matched = true;\n                        node.children.push(copyChildNode);\n                    }\n                }\n            }\n            if (matched) {\n                return true;\n            }\n        }\n    }\n    isFilterMatched(node, filterOptions) {\n        let { filterField, filterValue, filterConstraint, isStrictMode, globalFilterFieldsArray } = filterOptions;\n        let matched = false;\n        const isMatched = (field) => filterConstraint(resolveFieldData(node.data, field), filterValue, this.filterLocale);\n        matched = globalFilterFieldsArray?.length ? globalFilterFieldsArray.some((globalFilterField) => isMatched(globalFilterField.field || globalFilterField)) : isMatched(filterField);\n        if (!matched || (isStrictMode && !this.isNodeLeaf(node))) {\n            matched =\n                this.findFilteredNodes(node, {\n                    filterField,\n                    filterValue,\n                    filterConstraint,\n                    isStrictMode,\n                    globalFilterFieldsArray\n                }) || matched;\n        }\n        return matched;\n    }\n    isNodeLeaf(node) {\n        return node.leaf === false ? false : !(node.children && node.children.length);\n    }\n    hasFilter() {\n        let empty = true;\n        for (let prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n        return !empty;\n    }\n    /**\n     * Clears the sort and paginator state.\n     * @group Method\n     */\n    reset() {\n        this._sortField = null;\n        this._sortOrder = 1;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n        this.filteredNodes = null;\n        this.filters = {};\n        this.first = 0;\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = this._value ? this._value.length : 0;\n        }\n    }\n    updateEditingCell(cell, data, field) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.bindDocumentEditListener();\n    }\n    isEditingCellValid() {\n        return this.editingCell && find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;\n    }\n    bindDocumentEditListener() {\n        if (!this.documentEditListener) {\n            this.documentEditListener = this.renderer.listen(this.document, 'click', (event) => {\n                if (this.editingCell && !this.editingCellClick && this.isEditingCellValid()) {\n                    removeClass(this.editingCell, 'p-cell-editing');\n                    this.editingCell = null;\n                    this.onEditComplete.emit({ field: this.editingCellField, data: this.editingCellData });\n                    this.editingCellField = null;\n                    this.editingCellData = null;\n                    this.unbindDocumentEditListener();\n                }\n                this.editingCellClick = false;\n            });\n        }\n    }\n    unbindDocumentEditListener() {\n        if (this.documentEditListener) {\n            this.documentEditListener();\n            this.documentEditListener = null;\n        }\n    }\n    ngOnDestroy() {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.editingCellField = null;\n        this.editingCellData = null;\n        this.initialized = null;\n        super.ngOnDestroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TreeTable, isStandalone: false, selector: \"p-treeTable, p-treetable, p-tree-table\", inputs: { columns: \"columns\", style: \"style\", styleClass: \"styleClass\", tableStyle: \"tableStyle\", tableStyleClass: \"tableStyleClass\", autoLayout: [\"autoLayout\", \"autoLayout\", booleanAttribute], lazy: [\"lazy\", \"lazy\", booleanAttribute], lazyLoadOnInit: [\"lazyLoadOnInit\", \"lazyLoadOnInit\", booleanAttribute], paginator: [\"paginator\", \"paginator\", booleanAttribute], rows: [\"rows\", \"rows\", numberAttribute], first: [\"first\", \"first\", numberAttribute], pageLinks: [\"pageLinks\", \"pageLinks\", numberAttribute], rowsPerPageOptions: \"rowsPerPageOptions\", alwaysShowPaginator: [\"alwaysShowPaginator\", \"alwaysShowPaginator\", booleanAttribute], paginatorPosition: \"paginatorPosition\", paginatorStyleClass: \"paginatorStyleClass\", paginatorDropdownAppendTo: \"paginatorDropdownAppendTo\", currentPageReportTemplate: \"currentPageReportTemplate\", showCurrentPageReport: [\"showCurrentPageReport\", \"showCurrentPageReport\", booleanAttribute], showJumpToPageDropdown: [\"showJumpToPageDropdown\", \"showJumpToPageDropdown\", booleanAttribute], showFirstLastIcon: [\"showFirstLastIcon\", \"showFirstLastIcon\", booleanAttribute], showPageLinks: [\"showPageLinks\", \"showPageLinks\", booleanAttribute], defaultSortOrder: [\"defaultSortOrder\", \"defaultSortOrder\", numberAttribute], sortMode: \"sortMode\", resetPageOnSort: [\"resetPageOnSort\", \"resetPageOnSort\", booleanAttribute], customSort: [\"customSort\", \"customSort\", booleanAttribute], selectionMode: \"selectionMode\", contextMenuSelection: \"contextMenuSelection\", contextMenuSelectionMode: \"contextMenuSelectionMode\", dataKey: \"dataKey\", metaKeySelection: [\"metaKeySelection\", \"metaKeySelection\", booleanAttribute], compareSelectionBy: \"compareSelectionBy\", rowHover: [\"rowHover\", \"rowHover\", booleanAttribute], loading: [\"loading\", \"loading\", booleanAttribute], loadingIcon: \"loadingIcon\", showLoader: [\"showLoader\", \"showLoader\", booleanAttribute], scrollable: [\"scrollable\", \"scrollable\", booleanAttribute], scrollHeight: \"scrollHeight\", virtualScroll: [\"virtualScroll\", \"virtualScroll\", booleanAttribute], virtualScrollItemSize: [\"virtualScrollItemSize\", \"virtualScrollItemSize\", numberAttribute], virtualScrollOptions: \"virtualScrollOptions\", virtualScrollDelay: [\"virtualScrollDelay\", \"virtualScrollDelay\", numberAttribute], frozenWidth: \"frozenWidth\", frozenColumns: \"frozenColumns\", resizableColumns: [\"resizableColumns\", \"resizableColumns\", booleanAttribute], columnResizeMode: \"columnResizeMode\", reorderableColumns: [\"reorderableColumns\", \"reorderableColumns\", booleanAttribute], contextMenu: \"contextMenu\", rowTrackBy: \"rowTrackBy\", filters: \"filters\", globalFilterFields: \"globalFilterFields\", filterDelay: [\"filterDelay\", \"filterDelay\", numberAttribute], filterMode: \"filterMode\", filterLocale: \"filterLocale\", paginatorLocale: \"paginatorLocale\", totalRecords: \"totalRecords\", sortField: \"sortField\", sortOrder: \"sortOrder\", multiSortMeta: \"multiSortMeta\", selection: \"selection\", value: \"value\", virtualRowHeight: \"virtualRowHeight\", selectionKeys: \"selectionKeys\", showGridlines: [\"showGridlines\", \"showGridlines\", booleanAttribute] }, outputs: { selectionChange: \"selectionChange\", contextMenuSelectionChange: \"contextMenuSelectionChange\", onFilter: \"onFilter\", onNodeExpand: \"onNodeExpand\", onNodeCollapse: \"onNodeCollapse\", onPage: \"onPage\", onSort: \"onSort\", onLazyLoad: \"onLazyLoad\", sortFunction: \"sortFunction\", onColResize: \"onColResize\", onColReorder: \"onColReorder\", onNodeSelect: \"onNodeSelect\", onNodeUnselect: \"onNodeUnselect\", onContextMenuSelect: \"onContextMenuSelect\", onHeaderCheckboxToggle: \"onHeaderCheckboxToggle\", onEditInit: \"onEditInit\", onEditComplete: \"onEditComplete\", onEditCancel: \"onEditCancel\", selectionKeysChange: \"selectionKeysChange\" }, providers: [TreeTableService, TreeTableStyle], queries: [{ propertyName: \"_colGroupTemplate\", first: true, predicate: [\"colgroup\"] }, { propertyName: \"_captionTemplate\", first: true, predicate: [\"caption\"] }, { propertyName: \"_headerTemplate\", first: true, predicate: [\"header\"] }, { propertyName: \"_bodyTemplate\", first: true, predicate: [\"body\"] }, { propertyName: \"_footerTemplate\", first: true, predicate: [\"footer\"] }, { propertyName: \"_summaryTemplate\", first: true, predicate: [\"summary\"] }, { propertyName: \"_emptyMessageTemplate\", first: true, predicate: [\"emptymessage\"] }, { propertyName: \"_paginatorLeftTemplate\", first: true, predicate: [\"paginatorleft\"] }, { propertyName: \"_paginatorRightTemplate\", first: true, predicate: [\"paginatorright\"] }, { propertyName: \"_paginatorDropdownItemTemplate\", first: true, predicate: [\"paginatordropdownitem\"] }, { propertyName: \"_frozenHeaderTemplate\", first: true, predicate: [\"frozenheader\"] }, { propertyName: \"_frozenBodyTemplate\", first: true, predicate: [\"frozenbody\"] }, { propertyName: \"_frozenFooterTemplate\", first: true, predicate: [\"frozenfooter\"] }, { propertyName: \"_frozenColGroupTemplate\", first: true, predicate: [\"frozencolgroup\"] }, { propertyName: \"_loadingIconTemplate\", first: true, predicate: [\"loadingicon\"] }, { propertyName: \"_reorderIndicatorUpIconTemplate\", first: true, predicate: [\"reorderindicatorupicon\"] }, { propertyName: \"_reorderIndicatorDownIconTemplate\", first: true, predicate: [\"reorderindicatordownicon\"] }, { propertyName: \"_sortIconTemplate\", first: true, predicate: [\"sorticon\"] }, { propertyName: \"_checkboxIconTemplate\", first: true, predicate: [\"checkboxicon\"] }, { propertyName: \"_headerCheckboxIconTemplate\", first: true, predicate: [\"headercheckboxicon\"] }, { propertyName: \"_togglerIconTemplate\", first: true, predicate: [\"togglericon\"] }, { propertyName: \"_paginatorFirstPageLinkIconTemplate\", first: true, predicate: [\"paginatorfirstpagelinkicon\"] }, { propertyName: \"_paginatorLastPageLinkIconTemplate\", first: true, predicate: [\"paginatorlastpagelinkicon\"] }, { propertyName: \"_paginatorPreviousPageLinkIconTemplate\", first: true, predicate: [\"paginatorpreviouspagelinkicon\"] }, { propertyName: \"_paginatorNextPageLinkIconTemplate\", first: true, predicate: [\"paginatornextpagelinkicon\"] }, { propertyName: \"_loaderTemplate\", first: true, predicate: [\"loader\"] }, { propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"resizeHelperViewChild\", first: true, predicate: [\"resizeHelper\"], descendants: true }, { propertyName: \"reorderIndicatorUpViewChild\", first: true, predicate: [\"reorderIndicatorUp\"], descendants: true }, { propertyName: \"reorderIndicatorDownViewChild\", first: true, predicate: [\"reorderIndicatorDown\"], descendants: true }, { propertyName: \"tableViewChild\", first: true, predicate: [\"table\"], descendants: true }, { propertyName: \"scrollableViewChild\", first: true, predicate: [\"scrollableView\"], descendants: true }, { propertyName: \"scrollableFrozenViewChild\", first: true, predicate: [\"scrollableFrozenView\"], descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            data-scrollselectors=\".p-treetable-scrollable-body\"\n            [ngClass]=\"{\n                'p-treetable p-component': true,\n                'p-treetable-gridlines': showGridlines,\n                'p-treetable-hoverable-rows': rowHover || selectionMode === 'single' || selectionMode === 'multiple',\n                'p-treetable-auto-layout': autoLayout,\n                'p-treetable-resizable': resizableColumns,\n                'p-treetable-resizable-fit': resizableColumns && columnResizeMode === 'fit',\n                'p-treetable-flex-scrollable': scrollable && scrollHeight === 'flex'\n            }\"\n        >\n            <div class=\"p-treetable-loading\" *ngIf=\"loading && showLoader\">\n                <div class=\"p-overlay-mask p-treetable-mask\">\n                    <i *ngIf=\"loadingIcon\" [class]=\"'p-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n                    <ng-container *ngIf=\"!loadingIcon\">\n                        <SpinnerIcon *ngIf=\"!loadingIconTemplate && !_loadingIconTemplate\" [spin]=\"true\" [styleClass]=\"'p-treetable-loading-icon'\" />\n                        <span *ngIf=\"loadingIconTemplate || _loadingIconTemplate\" class=\"p-treetable-loading-icon\">\n                            <ng-template *ngTemplateOutlet=\"loadingIconTemplate || _loadingIconTemplate\"></ng-template>\n                        </span>\n                    </ng-container>\n                </div>\n            </div>\n            <div *ngIf=\"captionTemplate || _captionTemplate\" class=\"p-treetable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate || _captionTemplate\"></ng-container>\n            </div>\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-top\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate ?? _paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate ?? _paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate ?? _paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n                [styleClass]=\"paginatorStyleClass\"\n                [locale]=\"paginatorLocale\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n\n            <div class=\"p-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"table\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate || _colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead role=\"rowgroup\" class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate || _headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-treetable-tbody\" role=\"rowgroup\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate ?? _bodyTemplate\"></tbody>\n                    <tfoot class=\"p-treetable-tfoot\" role=\"rowgroup\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate || _footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n                <div\n                    class=\"p-treetable-scrollable-view p-treetable-frozen-view\"\n                    *ngIf=\"frozenColumns || frozenBodyTemplate || _frozenBodyTemplate\"\n                    #scrollableFrozenView\n                    [ttScrollableView]=\"frozenColumns\"\n                    [frozen]=\"true\"\n                    [ngStyle]=\"{ width: frozenWidth }\"\n                    [scrollHeight]=\"scrollHeight\"\n                ></div>\n                <div class=\"p-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{ left: frozenWidth, width: 'calc(100% - ' + frozenWidth + ')' }\"></div>\n            </div>\n\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-bottom\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate ?? _paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate ?? _paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate ?? _paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n                [styleClass]=\"paginatorStyleClass\"\n                [locale]=\"paginatorLocale\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n            <div *ngIf=\"summaryTemplate || _summaryTemplate\" class=\"p-treetable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate || _summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"p-treetable-reorder-indicator-up\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowDownIcon *ngIf=\"!reorderIndicatorUpIconTemplate && !_reorderIndicatorUpIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorUpIconTemplate || _reorderIndicatorUpIconTemplate\"></ng-template>\n            </span>\n            <span #reorderIndicatorDown class=\"p-treetable-reorder-indicator-down\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowUpIcon *ngIf=\"!reorderIndicatorDownIconTemplate && !_reorderIndicatorDownIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorDownIconTemplate || _reorderIndicatorDownIconTemplate\"></ng-template>\n            </span>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(() => i2.Paginator), selector: \"p-paginator\", inputs: [\"pageLinkSize\", \"style\", \"styleClass\", \"alwaysShow\", \"dropdownAppendTo\", \"templateLeft\", \"templateRight\", \"appendTo\", \"dropdownScrollHeight\", \"currentPageReportTemplate\", \"showCurrentPageReport\", \"showFirstLastIcon\", \"totalRecords\", \"rows\", \"rowsPerPageOptions\", \"showJumpToPageDropdown\", \"showJumpToPageInput\", \"jumpToPageItemTemplate\", \"showPageLinks\", \"locale\", \"dropdownItemTemplate\", \"first\"], outputs: [\"onPageChange\"] }, { kind: \"directive\", type: i0.forwardRef(() => i3.PrimeTemplate), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"component\", type: i0.forwardRef(() => SpinnerIcon), selector: \"SpinnerIcon\" }, { kind: \"component\", type: i0.forwardRef(() => ArrowDownIcon), selector: \"ArrowDownIcon\" }, { kind: \"component\", type: i0.forwardRef(() => ArrowUpIcon), selector: \"ArrowUpIcon\" }, { kind: \"component\", type: i0.forwardRef(() => TTScrollableView), selector: \"[ttScrollableView]\", inputs: [\"ttScrollableView\", \"frozen\", \"scrollHeight\"] }, { kind: \"component\", type: i0.forwardRef(() => TTBody), selector: \"[pTreeTableBody]\", inputs: [\"pTreeTableBody\", \"pTreeTableBodyTemplate\", \"frozen\", \"serializedNodes\", \"scrollerOptions\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTable, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTable, p-treetable, p-tree-table',\n                    standalone: false,\n                    template: `\n        <div\n            #container\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            data-scrollselectors=\".p-treetable-scrollable-body\"\n            [ngClass]=\"{\n                'p-treetable p-component': true,\n                'p-treetable-gridlines': showGridlines,\n                'p-treetable-hoverable-rows': rowHover || selectionMode === 'single' || selectionMode === 'multiple',\n                'p-treetable-auto-layout': autoLayout,\n                'p-treetable-resizable': resizableColumns,\n                'p-treetable-resizable-fit': resizableColumns && columnResizeMode === 'fit',\n                'p-treetable-flex-scrollable': scrollable && scrollHeight === 'flex'\n            }\"\n        >\n            <div class=\"p-treetable-loading\" *ngIf=\"loading && showLoader\">\n                <div class=\"p-overlay-mask p-treetable-mask\">\n                    <i *ngIf=\"loadingIcon\" [class]=\"'p-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n                    <ng-container *ngIf=\"!loadingIcon\">\n                        <SpinnerIcon *ngIf=\"!loadingIconTemplate && !_loadingIconTemplate\" [spin]=\"true\" [styleClass]=\"'p-treetable-loading-icon'\" />\n                        <span *ngIf=\"loadingIconTemplate || _loadingIconTemplate\" class=\"p-treetable-loading-icon\">\n                            <ng-template *ngTemplateOutlet=\"loadingIconTemplate || _loadingIconTemplate\"></ng-template>\n                        </span>\n                    </ng-container>\n                </div>\n            </div>\n            <div *ngIf=\"captionTemplate || _captionTemplate\" class=\"p-treetable-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate || _captionTemplate\"></ng-container>\n            </div>\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-top\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate ?? _paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate ?? _paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate ?? _paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n                [styleClass]=\"paginatorStyleClass\"\n                [locale]=\"paginatorLocale\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n\n            <div class=\"p-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table role=\"table\" #table [ngClass]=\"tableStyleClass\" [ngStyle]=\"tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate || _colGroupTemplate; context: { $implicit: columns }\"></ng-container>\n                    <thead role=\"rowgroup\" class=\"p-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate || _headerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </thead>\n                    <tbody class=\"p-treetable-tbody\" role=\"rowgroup\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate ?? _bodyTemplate\"></tbody>\n                    <tfoot class=\"p-treetable-tfoot\" role=\"rowgroup\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate || _footerTemplate; context: { $implicit: columns }\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n\n            <div class=\"p-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n                <div\n                    class=\"p-treetable-scrollable-view p-treetable-frozen-view\"\n                    *ngIf=\"frozenColumns || frozenBodyTemplate || _frozenBodyTemplate\"\n                    #scrollableFrozenView\n                    [ttScrollableView]=\"frozenColumns\"\n                    [frozen]=\"true\"\n                    [ngStyle]=\"{ width: frozenWidth }\"\n                    [scrollHeight]=\"scrollHeight\"\n                ></div>\n                <div class=\"p-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{ left: frozenWidth, width: 'calc(100% - ' + frozenWidth + ')' }\"></div>\n            </div>\n\n            <p-paginator\n                [rows]=\"rows\"\n                [first]=\"first\"\n                [totalRecords]=\"totalRecords\"\n                [pageLinkSize]=\"pageLinks\"\n                styleClass=\"p-paginator-bottom\"\n                [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\"\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\n                *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition == 'both')\"\n                [templateLeft]=\"paginatorLeftTemplate ?? _paginatorLeftTemplate\"\n                [templateRight]=\"paginatorRightTemplate ?? _paginatorRightTemplate\"\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\n                [showFirstLastIcon]=\"showFirstLastIcon\"\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate ?? _paginatorDropdownItemTemplate\"\n                [showCurrentPageReport]=\"showCurrentPageReport\"\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\n                [showPageLinks]=\"showPageLinks\"\n                [styleClass]=\"paginatorStyleClass\"\n                [locale]=\"paginatorLocale\"\n            >\n                <ng-template pTemplate=\"firstpagelinkicon\" *ngIf=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorFirstPageLinkIconTemplate || _paginatorFirstPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"previouspagelinkicon\" *ngIf=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorPreviousPageLinkIconTemplate || _paginatorPreviousPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"lastpagelinkicon\" *ngIf=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorLastPageLinkIconTemplate || _paginatorLastPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n\n                <ng-template pTemplate=\"nextpagelinkicon\" *ngIf=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\">\n                    <ng-container *ngTemplateOutlet=\"paginatorNextPageLinkIconTemplate || _paginatorNextPageLinkIconTemplate\"></ng-container>\n                </ng-template>\n            </p-paginator>\n            <div *ngIf=\"summaryTemplate || _summaryTemplate\" class=\"p-treetable-footer\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate || _summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"p-column-resizer-helper\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n            <span #reorderIndicatorUp class=\"p-treetable-reorder-indicator-up\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowDownIcon *ngIf=\"!reorderIndicatorUpIconTemplate && !_reorderIndicatorUpIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorUpIconTemplate || _reorderIndicatorUpIconTemplate\"></ng-template>\n            </span>\n            <span #reorderIndicatorDown class=\"p-treetable-reorder-indicator-down\" style=\"display: none;\" *ngIf=\"reorderableColumns\">\n                <ArrowUpIcon *ngIf=\"!reorderIndicatorDownIconTemplate && !_reorderIndicatorDownIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"reorderIndicatorDownIconTemplate || _reorderIndicatorDownIconTemplate\"></ng-template>\n            </span>\n        </div>\n    `,\n                    providers: [TreeTableService, TreeTableStyle],\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], propDecorators: { columns: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], tableStyle: [{\n                type: Input\n            }], tableStyleClass: [{\n                type: Input\n            }], autoLayout: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], lazy: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], lazyLoadOnInit: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], paginator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], rows: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], first: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], pageLinks: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], rowsPerPageOptions: [{\n                type: Input\n            }], alwaysShowPaginator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], paginatorPosition: [{\n                type: Input\n            }], paginatorStyleClass: [{\n                type: Input\n            }], paginatorDropdownAppendTo: [{\n                type: Input\n            }], currentPageReportTemplate: [{\n                type: Input\n            }], showCurrentPageReport: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showJumpToPageDropdown: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showFirstLastIcon: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showPageLinks: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], defaultSortOrder: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], sortMode: [{\n                type: Input\n            }], resetPageOnSort: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], customSort: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectionMode: [{\n                type: Input\n            }], contextMenuSelection: [{\n                type: Input\n            }], contextMenuSelectionMode: [{\n                type: Input\n            }], dataKey: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareSelectionBy: [{\n                type: Input\n            }], rowHover: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], loading: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], loadingIcon: [{\n                type: Input\n            }], showLoader: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrollable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrollHeight: [{\n                type: Input\n            }], virtualScroll: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], virtualScrollItemSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], virtualScrollOptions: [{\n                type: Input\n            }], virtualScrollDelay: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], frozenWidth: [{\n                type: Input\n            }], frozenColumns: [{\n                type: Input\n            }], resizableColumns: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], columnResizeMode: [{\n                type: Input\n            }], reorderableColumns: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], contextMenu: [{\n                type: Input\n            }], rowTrackBy: [{\n                type: Input\n            }], filters: [{\n                type: Input\n            }], globalFilterFields: [{\n                type: Input\n            }], filterDelay: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], filterMode: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], paginatorLocale: [{\n                type: Input\n            }], totalRecords: [{\n                type: Input\n            }], sortField: [{\n                type: Input\n            }], sortOrder: [{\n                type: Input\n            }], multiSortMeta: [{\n                type: Input\n            }], selection: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], virtualRowHeight: [{\n                type: Input\n            }], selectionKeys: [{\n                type: Input\n            }], showGridlines: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectionChange: [{\n                type: Output\n            }], contextMenuSelectionChange: [{\n                type: Output\n            }], onFilter: [{\n                type: Output\n            }], onNodeExpand: [{\n                type: Output\n            }], onNodeCollapse: [{\n                type: Output\n            }], onPage: [{\n                type: Output\n            }], onSort: [{\n                type: Output\n            }], onLazyLoad: [{\n                type: Output\n            }], sortFunction: [{\n                type: Output\n            }], onColResize: [{\n                type: Output\n            }], onColReorder: [{\n                type: Output\n            }], onNodeSelect: [{\n                type: Output\n            }], onNodeUnselect: [{\n                type: Output\n            }], onContextMenuSelect: [{\n                type: Output\n            }], onHeaderCheckboxToggle: [{\n                type: Output\n            }], onEditInit: [{\n                type: Output\n            }], onEditComplete: [{\n                type: Output\n            }], onEditCancel: [{\n                type: Output\n            }], selectionKeysChange: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], resizeHelperViewChild: [{\n                type: ViewChild,\n                args: ['resizeHelper']\n            }], reorderIndicatorUpViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorUp']\n            }], reorderIndicatorDownViewChild: [{\n                type: ViewChild,\n                args: ['reorderIndicatorDown']\n            }], tableViewChild: [{\n                type: ViewChild,\n                args: ['table']\n            }], scrollableViewChild: [{\n                type: ViewChild,\n                args: ['scrollableView']\n            }], scrollableFrozenViewChild: [{\n                type: ViewChild,\n                args: ['scrollableFrozenView']\n            }], _colGroupTemplate: [{\n                type: ContentChild,\n                args: ['colgroup', { descendants: false }]\n            }], _captionTemplate: [{\n                type: ContentChild,\n                args: ['caption', { descendants: false }]\n            }], _headerTemplate: [{\n                type: ContentChild,\n                args: ['header', { descendants: false }]\n            }], _bodyTemplate: [{\n                type: ContentChild,\n                args: ['body', { descendants: false }]\n            }], _footerTemplate: [{\n                type: ContentChild,\n                args: ['footer', { descendants: false }]\n            }], _summaryTemplate: [{\n                type: ContentChild,\n                args: ['summary', { descendants: false }]\n            }], _emptyMessageTemplate: [{\n                type: ContentChild,\n                args: ['emptymessage', { descendants: false }]\n            }], _paginatorLeftTemplate: [{\n                type: ContentChild,\n                args: ['paginatorleft', { descendants: false }]\n            }], _paginatorRightTemplate: [{\n                type: ContentChild,\n                args: ['paginatorright', { descendants: false }]\n            }], _paginatorDropdownItemTemplate: [{\n                type: ContentChild,\n                args: ['paginatordropdownitem', { descendants: false }]\n            }], _frozenHeaderTemplate: [{\n                type: ContentChild,\n                args: ['frozenheader', { descendants: false }]\n            }], _frozenBodyTemplate: [{\n                type: ContentChild,\n                args: ['frozenbody', { descendants: false }]\n            }], _frozenFooterTemplate: [{\n                type: ContentChild,\n                args: ['frozenfooter', { descendants: false }]\n            }], _frozenColGroupTemplate: [{\n                type: ContentChild,\n                args: ['frozencolgroup', { descendants: false }]\n            }], _loadingIconTemplate: [{\n                type: ContentChild,\n                args: ['loadingicon', { descendants: false }]\n            }], _reorderIndicatorUpIconTemplate: [{\n                type: ContentChild,\n                args: ['reorderindicatorupicon', { descendants: false }]\n            }], _reorderIndicatorDownIconTemplate: [{\n                type: ContentChild,\n                args: ['reorderindicatordownicon', { descendants: false }]\n            }], _sortIconTemplate: [{\n                type: ContentChild,\n                args: ['sorticon', { descendants: false }]\n            }], _checkboxIconTemplate: [{\n                type: ContentChild,\n                args: ['checkboxicon', { descendants: false }]\n            }], _headerCheckboxIconTemplate: [{\n                type: ContentChild,\n                args: ['headercheckboxicon', { descendants: false }]\n            }], _togglerIconTemplate: [{\n                type: ContentChild,\n                args: ['togglericon', { descendants: false }]\n            }], _paginatorFirstPageLinkIconTemplate: [{\n                type: ContentChild,\n                args: ['paginatorfirstpagelinkicon', { descendants: false }]\n            }], _paginatorLastPageLinkIconTemplate: [{\n                type: ContentChild,\n                args: ['paginatorlastpagelinkicon', { descendants: false }]\n            }], _paginatorPreviousPageLinkIconTemplate: [{\n                type: ContentChild,\n                args: ['paginatorpreviouspagelinkicon', { descendants: false }]\n            }], _paginatorNextPageLinkIconTemplate: [{\n                type: ContentChild,\n                args: ['paginatornextpagelinkicon', { descendants: false }]\n            }], _loaderTemplate: [{\n                type: ContentChild,\n                args: ['loader', { descendants: false }]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TTBody {\n    tt;\n    treeTableService;\n    cd;\n    columns;\n    template;\n    frozen;\n    serializedNodes;\n    scrollerOptions;\n    subscription;\n    constructor(tt, treeTableService, cd) {\n        this.tt = tt;\n        this.treeTableService = treeTableService;\n        this.cd = cd;\n        this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n            if (this.tt.virtualScroll) {\n                this.cd.detectChanges();\n            }\n        });\n    }\n    getScrollerOption(option, options) {\n        if (this.tt.virtualScroll) {\n            options = options || this.scrollerOptions;\n            return options ? options[option] : null;\n        }\n        return null;\n    }\n    getRowIndex(rowIndex) {\n        const getItemOptions = this.getScrollerOption('getItemOptions');\n        return getItemOptions ? getItemOptions(rowIndex).index : rowIndex;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTBody, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTBody, isStandalone: false, selector: \"[pTreeTableBody]\", inputs: { columns: [\"pTreeTableBody\", \"columns\"], template: [\"pTreeTableBodyTemplate\", \"template\"], frozen: [\"frozen\", \"frozen\", booleanAttribute], serializedNodes: \"serializedNodes\", scrollerOptions: \"scrollerOptions\" }, ngImport: i0, template: `\n        <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"serializedNodes || tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n            <ng-container *ngIf=\"serializedNode.visible\">\n                <ng-container\n                    *ngTemplateOutlet=\"\n                        template;\n                        context: {\n                            $implicit: serializedNode,\n                            node: serializedNode.node,\n                            rowData: serializedNode.node.data,\n                            columns: columns\n                        }\n                    \"\n                ></ng-container>\n            </ng-container>\n        </ng-template>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: { $implicit: columns, frozen: frozen }\"></ng-container>\n        </ng-container>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTBody, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[pTreeTableBody]',\n                    standalone: false,\n                    template: `\n        <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"serializedNodes || tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n            <ng-container *ngIf=\"serializedNode.visible\">\n                <ng-container\n                    *ngTemplateOutlet=\"\n                        template;\n                        context: {\n                            $implicit: serializedNode,\n                            node: serializedNode.node,\n                            rowData: serializedNode.node.data,\n                            columns: columns\n                        }\n                    \"\n                ></ng-container>\n            </ng-container>\n        </ng-template>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: { $implicit: columns, frozen: frozen }\"></ng-container>\n        </ng-container>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ChangeDetectorRef }], propDecorators: { columns: [{\n                type: Input,\n                args: ['pTreeTableBody']\n            }], template: [{\n                type: Input,\n                args: ['pTreeTableBodyTemplate']\n            }], frozen: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], serializedNodes: [{\n                type: Input\n            }], scrollerOptions: [{\n                type: Input\n            }] } });\nclass TTScrollableView {\n    platformId;\n    renderer;\n    tt;\n    el;\n    zone;\n    columns;\n    frozen;\n    scrollHeaderViewChild;\n    scrollHeaderBoxViewChild;\n    scrollBodyViewChild;\n    scrollTableViewChild;\n    scrollLoadingTableViewChild;\n    scrollFooterViewChild;\n    scrollFooterBoxViewChild;\n    scrollableAlignerViewChild;\n    scroller;\n    headerScrollListener;\n    bodyScrollListener;\n    footerScrollListener;\n    frozenSiblingBody;\n    totalRecordsSubscription;\n    _scrollHeight;\n    preventBodyScrollPropagation;\n    get scrollHeight() {\n        return this._scrollHeight;\n    }\n    set scrollHeight(val) {\n        this._scrollHeight = val;\n        if (val != null && (val.includes('%') || val.includes('calc'))) {\n            console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight=\"flex\" instead.');\n        }\n    }\n    constructor(platformId, renderer, tt, el, zone) {\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (!this.frozen) {\n                if (this.tt.frozenColumns || this.tt.frozenBodyTemplate || this.tt._frozenBodyTemplate) {\n                    addClass(this.el.nativeElement, 'p-treetable-unfrozen-view');\n                }\n                let frozenView = this.el.nativeElement.previousElementSibling;\n                if (frozenView) {\n                    if (this.tt.virtualScroll)\n                        this.frozenSiblingBody = findSingle(frozenView, '.p-scroller-viewport');\n                    else\n                        this.frozenSiblingBody = findSingle(frozenView, '.p-treetable-scrollable-body');\n                }\n                if (this.scrollHeight) {\n                    let scrollBarWidth = calculateScrollbarWidth();\n                    this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n                    if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n                        this.scrollFooterBoxViewChild.nativeElement.style.paddingRight = scrollBarWidth + 'px';\n                    }\n                }\n            }\n            else {\n                if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {\n                    this.scrollableAlignerViewChild.nativeElement.style.height = calculateScrollbarHeight() + 'px';\n                }\n            }\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.zone.runOutsideAngular(() => {\n                if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n                    this.headerScrollListener = this.renderer.listen(this.scrollHeaderBoxViewChild?.nativeElement, 'scroll', this.onHeaderScroll.bind(this));\n                }\n                if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n                    this.footerScrollListener = this.renderer.listen(this.scrollFooterViewChild.nativeElement, 'scroll', this.onFooterScroll.bind(this));\n                }\n                if (!this.frozen) {\n                    if (this.tt.virtualScroll) {\n                        this.bodyScrollListener = this.renderer.listen((this.scroller?.getElementRef()).nativeElement, 'scroll', this.onBodyScroll.bind(this));\n                    }\n                    else {\n                        this.bodyScrollListener = this.renderer.listen(this.scrollBodyViewChild?.nativeElement, 'scroll', this.onBodyScroll.bind(this));\n                    }\n                }\n            });\n        }\n    }\n    unbindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n                if (this.headerScrollListener) {\n                    this.headerScrollListener();\n                    this.headerScrollListener = null;\n                }\n            }\n            if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n                if (this.footerScrollListener) {\n                    this.footerScrollListener();\n                    this.footerScrollListener = null;\n                }\n            }\n            if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n                if (this.bodyScrollListener) {\n                    this.bodyScrollListener();\n                    this.bodyScrollListener = null;\n                }\n            }\n            if (this.scroller && this.scroller.getElementRef()) {\n                if (this.bodyScrollListener) {\n                    this.bodyScrollListener();\n                    this.bodyScrollListener = null;\n                }\n            }\n        }\n    }\n    onHeaderScroll() {\n        const scrollLeft = this.scrollHeaderViewChild?.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    }\n    onFooterScroll() {\n        const scrollLeft = this.scrollFooterViewChild?.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    }\n    onBodyScroll(event) {\n        if (this.preventBodyScrollPropagation) {\n            this.preventBodyScrollPropagation = false;\n            return;\n        }\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';\n        }\n        if (this.frozenSiblingBody) {\n            this.frozenSiblingBody.scrollTop = event.target.scrollTop;\n        }\n    }\n    scrollToVirtualIndex(index) {\n        if (this.scroller) {\n            this.scroller.scrollToIndex(index);\n        }\n    }\n    scrollTo(options) {\n        if (this.scroller) {\n            this.scroller.scrollTo(options);\n        }\n        else {\n            if (this.scrollBodyViewChild?.nativeElement.scrollTo) {\n                this.scrollBodyViewChild.nativeElement.scrollTo(options);\n            }\n            else {\n                this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;\n                this.scrollBodyViewChild.nativeElement.scrollTop = options.top;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.frozenSiblingBody = null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTScrollableView, deps: [{ token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTScrollableView, isStandalone: false, selector: \"[ttScrollableView]\", inputs: { columns: [\"ttScrollableView\", \"columns\"], frozen: [\"frozen\", \"frozen\", booleanAttribute], scrollHeight: \"scrollHeight\" }, viewQueries: [{ propertyName: \"scrollHeaderViewChild\", first: true, predicate: [\"scrollHeader\"], descendants: true }, { propertyName: \"scrollHeaderBoxViewChild\", first: true, predicate: [\"scrollHeaderBox\"], descendants: true }, { propertyName: \"scrollBodyViewChild\", first: true, predicate: [\"scrollBody\"], descendants: true }, { propertyName: \"scrollTableViewChild\", first: true, predicate: [\"scrollTable\"], descendants: true }, { propertyName: \"scrollLoadingTableViewChild\", first: true, predicate: [\"loadingTable\"], descendants: true }, { propertyName: \"scrollFooterViewChild\", first: true, predicate: [\"scrollFooter\"], descendants: true }, { propertyName: \"scrollFooterBoxViewChild\", first: true, predicate: [\"scrollFooterBox\"], descendants: true }, { propertyName: \"scrollableAlignerViewChild\", first: true, predicate: [\"scrollableAligner\"], descendants: true }, { propertyName: \"scroller\", first: true, predicate: [\"scroller\"], descendants: true }], ngImport: i0, template: `\n        <div #scrollHeader class=\"p-treetable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-treetable-scrollable-header-box\">\n                <table class=\"p-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container\n                        *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                    ></ng-container>\n                    <thead role=\"rowgroup\" class=\"p-treetable-thead\">\n                        <ng-container\n                            *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate || tt._frozenHeaderTemplate || tt.headerTemplate || tt._headerTemplate : tt.headerTemplate || tt._headerTemplate; context: { $implicit: columns }\"\n                        ></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n\n        <p-scroller\n            *ngIf=\"tt.virtualScroll\"\n            #scroller\n            [items]=\"tt.serializedValue\"\n            styleClass=\"p-treetable-scrollable-body\"\n            [style]=\"{ height: tt.scrollHeight !== 'flex' ? tt.scrollHeight : undefined }\"\n            [scrollHeight]=\"scrollHeight !== 'flex' ? undefined : '100%'\"\n            [itemSize]=\"tt.virtualScrollItemSize || tt._virtualRowHeight\"\n            [lazy]=\"tt.lazy\"\n            (onLazyLoad)=\"tt.onLazyItemLoad($event)\"\n            [options]=\"tt.virtualScrollOptions\"\n        >\n            <ng-template #content let-items let-scrollerOptions=\"options\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n            </ng-template>\n            <ng-container *ngIf=\"tt.loaderTemplate || tt._loaderTemplate\">\n                <ng-template #loader let-scrollerOptions=\"options\">\n                    <ng-container *ngTemplateOutlet=\"tt.loaderTemplate || tt._loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                </ng-template>\n            </ng-container>\n        </p-scroller>\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <div\n                #scrollBody\n                class=\"p-treetable-scrollable-body\"\n                [ngStyle]=\"{\n                    'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined,\n                    'overflow-y': !frozen && tt.scrollHeight ? 'scroll' : undefined\n                }\"\n            >\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: serializedValue, options: {} }\"></ng-container>\n            </div>\n        </ng-container>\n\n        <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n            <table role=\"table\" #scrollTable [class]=\"tt.tableStyleClass\" [ngClass]=\"scrollerOptions.contentStyleClass\" [ngStyle]=\"tt.tableStyle\" [style]=\"scrollerOptions.contentStyle\">\n                <ng-container\n                    *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                ></ng-container>\n                <tbody\n                    role=\"rowgroup\"\n                    class=\"p-treetable-tbody\"\n                    [pTreeTableBody]=\"columns\"\n                    [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate || tt._frozenBodyTemplate || tt.bodyTemplate || tt._bodyTemplate : tt.bodyTemplate || tt._bodyTemplate\"\n                    [serializedNodes]=\"items\"\n                    [frozen]=\"frozen\"\n                ></tbody>\n            </table>\n            <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        </ng-template>\n\n        <div #scrollFooter *ngIf=\"tt.footerTemplate || tt._footerTemplate\" class=\"p-treetable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-treetable-scrollable-footer-box\">\n                <table class=\"p-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container\n                        *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                    ></ng-container>\n                    <tfoot role=\"rowgroup\" class=\"p-treetable-tfoot\">\n                        <ng-container\n                            *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate || tt._frozenFooterTemplate || tt.footerTemplate || tt._footerTemplate : tt.footerTemplate || tt._footerTemplate; context: { $implicit: columns }\"\n                        ></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgClass), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgStyle), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: i0.forwardRef(() => Scroller), selector: \"p-scroller, p-virtualscroller, p-virtual-scroller, p-virtualScroller\", inputs: [\"id\", \"style\", \"styleClass\", \"tabindex\", \"items\", \"itemSize\", \"scrollHeight\", \"scrollWidth\", \"orientation\", \"step\", \"delay\", \"resizeDelay\", \"appendOnly\", \"inline\", \"lazy\", \"disabled\", \"loaderDisabled\", \"columns\", \"showSpacer\", \"showLoader\", \"numToleratedItems\", \"loading\", \"autoSize\", \"trackBy\", \"options\"], outputs: [\"onLazyLoad\", \"onScroll\", \"onScrollIndexChange\"] }, { kind: \"component\", type: i0.forwardRef(() => TTBody), selector: \"[pTreeTableBody]\", inputs: [\"pTreeTableBody\", \"pTreeTableBodyTemplate\", \"frozen\", \"serializedNodes\", \"scrollerOptions\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTScrollableView, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ttScrollableView]',\n                    standalone: false,\n                    template: `\n        <div #scrollHeader class=\"p-treetable-scrollable-header\">\n            <div #scrollHeaderBox class=\"p-treetable-scrollable-header-box\">\n                <table class=\"p-treetable-scrollable-header-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container\n                        *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                    ></ng-container>\n                    <thead role=\"rowgroup\" class=\"p-treetable-thead\">\n                        <ng-container\n                            *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate || tt._frozenHeaderTemplate || tt.headerTemplate || tt._headerTemplate : tt.headerTemplate || tt._headerTemplate; context: { $implicit: columns }\"\n                        ></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n\n        <p-scroller\n            *ngIf=\"tt.virtualScroll\"\n            #scroller\n            [items]=\"tt.serializedValue\"\n            styleClass=\"p-treetable-scrollable-body\"\n            [style]=\"{ height: tt.scrollHeight !== 'flex' ? tt.scrollHeight : undefined }\"\n            [scrollHeight]=\"scrollHeight !== 'flex' ? undefined : '100%'\"\n            [itemSize]=\"tt.virtualScrollItemSize || tt._virtualRowHeight\"\n            [lazy]=\"tt.lazy\"\n            (onLazyLoad)=\"tt.onLazyItemLoad($event)\"\n            [options]=\"tt.virtualScrollOptions\"\n        >\n            <ng-template #content let-items let-scrollerOptions=\"options\">\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: items, options: scrollerOptions }\"></ng-container>\n            </ng-template>\n            <ng-container *ngIf=\"tt.loaderTemplate || tt._loaderTemplate\">\n                <ng-template #loader let-scrollerOptions=\"options\">\n                    <ng-container *ngTemplateOutlet=\"tt.loaderTemplate || tt._loaderTemplate; context: { options: scrollerOptions }\"></ng-container>\n                </ng-template>\n            </ng-container>\n        </p-scroller>\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <div\n                #scrollBody\n                class=\"p-treetable-scrollable-body\"\n                [ngStyle]=\"{\n                    'max-height': tt.scrollHeight !== 'flex' ? scrollHeight : undefined,\n                    'overflow-y': !frozen && tt.scrollHeight ? 'scroll' : undefined\n                }\"\n            >\n                <ng-container *ngTemplateOutlet=\"buildInItems; context: { $implicit: serializedValue, options: {} }\"></ng-container>\n            </div>\n        </ng-container>\n\n        <ng-template #buildInItems let-items let-scrollerOptions=\"options\">\n            <table role=\"table\" #scrollTable [class]=\"tt.tableStyleClass\" [ngClass]=\"scrollerOptions.contentStyleClass\" [ngStyle]=\"tt.tableStyle\" [style]=\"scrollerOptions.contentStyle\">\n                <ng-container\n                    *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                ></ng-container>\n                <tbody\n                    role=\"rowgroup\"\n                    class=\"p-treetable-tbody\"\n                    [pTreeTableBody]=\"columns\"\n                    [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate || tt._frozenBodyTemplate || tt.bodyTemplate || tt._bodyTemplate : tt.bodyTemplate || tt._bodyTemplate\"\n                    [serializedNodes]=\"items\"\n                    [frozen]=\"frozen\"\n                ></tbody>\n            </table>\n            <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n        </ng-template>\n\n        <div #scrollFooter *ngIf=\"tt.footerTemplate || tt._footerTemplate\" class=\"p-treetable-scrollable-footer\">\n            <div #scrollFooterBox class=\"p-treetable-scrollable-footer-box\">\n                <table class=\"p-treetable-scrollable-footer-table\" [ngClass]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container\n                        *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate || tt._frozenColGroupTemplate || tt.colGroupTemplate || tt._colGroupTemplate : tt.colGroupTemplate || tt._colGroupTemplate; context: { $implicit: columns }\"\n                    ></ng-container>\n                    <tfoot role=\"rowgroup\" class=\"p-treetable-tfoot\">\n                        <ng-container\n                            *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate || tt._frozenFooterTemplate || tt.footerTemplate || tt._footerTemplate : tt.footerTemplate || tt._footerTemplate; context: { $implicit: columns }\"\n                        ></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { columns: [{\n                type: Input,\n                args: ['ttScrollableView']\n            }], frozen: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], scrollHeaderViewChild: [{\n                type: ViewChild,\n                args: ['scrollHeader']\n            }], scrollHeaderBoxViewChild: [{\n                type: ViewChild,\n                args: ['scrollHeaderBox']\n            }], scrollBodyViewChild: [{\n                type: ViewChild,\n                args: ['scrollBody']\n            }], scrollTableViewChild: [{\n                type: ViewChild,\n                args: ['scrollTable']\n            }], scrollLoadingTableViewChild: [{\n                type: ViewChild,\n                args: ['loadingTable']\n            }], scrollFooterViewChild: [{\n                type: ViewChild,\n                args: ['scrollFooter']\n            }], scrollFooterBoxViewChild: [{\n                type: ViewChild,\n                args: ['scrollFooterBox']\n            }], scrollableAlignerViewChild: [{\n                type: ViewChild,\n                args: ['scrollableAligner']\n            }], scroller: [{\n                type: ViewChild,\n                args: ['scroller']\n            }], scrollHeight: [{\n                type: Input\n            }] } });\nclass TTSortableColumn {\n    tt;\n    field;\n    ttSortableColumnDisabled;\n    sorted;\n    subscription;\n    get ariaSorted() {\n        if (this.sorted && this.tt.sortOrder < 0)\n            return 'descending';\n        else if (this.sorted && this.tt.sortOrder > 0)\n            return 'ascending';\n        else\n            return 'none';\n    }\n    constructor(tt) {\n        this.tt = tt;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.sortSource$.subscribe((sortMeta) => {\n                this.updateSortState();\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    }\n    updateSortState() {\n        this.sorted = this.tt.isSorted(this.field);\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.updateSortState();\n            this.tt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n            clearSelection();\n        }\n    }\n    onEnterKey(event) {\n        this.onClick(event);\n    }\n    isEnabled() {\n        return this.ttSortableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSortableColumn, deps: [{ token: TreeTable }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTSortableColumn, isStandalone: false, selector: \"[ttSortableColumn]\", inputs: { field: [\"ttSortableColumn\", \"field\"], ttSortableColumnDisabled: [\"ttSortableColumnDisabled\", \"ttSortableColumnDisabled\", booleanAttribute] }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown.enter\": \"onEnterKey($event)\" }, properties: { \"class.p-sortable-column\": \"isEnabled()\", \"class.p-treetable-column-sorted\": \"sorted\", \"attr.tabindex\": \"isEnabled() ? \\\"0\\\" : null\", \"attr.role\": \"\\\"columnheader\\\"\", \"attr.aria-sort\": \"ariaSorted\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSortableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttSortableColumn]',\n                    standalone: false,\n                    host: {\n                        '[class.p-sortable-column]': 'isEnabled()',\n                        '[class.p-treetable-column-sorted]': 'sorted',\n                        '[attr.tabindex]': 'isEnabled() ? \"0\" : null',\n                        '[attr.role]': '\"columnheader\"',\n                        '[attr.aria-sort]': 'ariaSorted'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }], propDecorators: { field: [{\n                type: Input,\n                args: ['ttSortableColumn']\n            }], ttSortableColumnDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onEnterKey: [{\n                type: HostListener,\n                args: ['keydown.enter', ['$event']]\n            }] } });\nclass TTSortIcon {\n    tt;\n    cd;\n    field;\n    ariaLabelDesc;\n    ariaLabelAsc;\n    subscription;\n    sortOrder;\n    constructor(tt, cd) {\n        this.tt = tt;\n        this.cd = cd;\n        this.subscription = this.tt.tableService.sortSource$.subscribe((sortMeta) => {\n            this.updateSortState();\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        this.updateSortState();\n    }\n    onClick(event) {\n        event.preventDefault();\n    }\n    updateSortState() {\n        if (this.tt.sortMode === 'single') {\n            this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;\n        }\n        else if (this.tt.sortMode === 'multiple') {\n            let sortMeta = this.tt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSortIcon, deps: [{ token: TreeTable }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.10\", type: TTSortIcon, isStandalone: false, selector: \"p-treeTableSortIcon, p-treetable-sort-icon, p-tree-table-sort-icon\", inputs: { field: \"field\", ariaLabelDesc: \"ariaLabelDesc\", ariaLabelAsc: \"ariaLabelAsc\" }, ngImport: i0, template: ` <ng-container *ngIf=\"!tt.sortIconTemplate && !tt._sortIconTemplate\">\n            <SortAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 0\" />\n            <SortAmountUpAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 1\" />\n            <SortAmountDownIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === -1\" />\n        </ng-container>\n        <span *ngIf=\"tt.sortIconTemplate || tt._sortIconTemplate\" class=\"p-sortable-column-icon\">\n            <ng-template *ngTemplateOutlet=\"tt.sortIconTemplate || tt._sortIconTemplate; context: { $implicit: sortOrder }\"></ng-template>\n        </span>`, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: i0.forwardRef(() => SortAltIcon), selector: \"SortAltIcon\" }, { kind: \"component\", type: i0.forwardRef(() => SortAmountUpAltIcon), selector: \"SortAmountUpAltIcon\" }, { kind: \"component\", type: i0.forwardRef(() => SortAmountDownIcon), selector: \"SortAmountDownIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSortIcon, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableSortIcon, p-treetable-sort-icon, p-tree-table-sort-icon',\n                    standalone: false,\n                    template: ` <ng-container *ngIf=\"!tt.sortIconTemplate && !tt._sortIconTemplate\">\n            <SortAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 0\" />\n            <SortAmountUpAltIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === 1\" />\n            <SortAmountDownIcon [styleClass]=\"'p-sortable-column-icon'\" *ngIf=\"sortOrder === -1\" />\n        </ng-container>\n        <span *ngIf=\"tt.sortIconTemplate || tt._sortIconTemplate\" class=\"p-sortable-column-icon\">\n            <ng-template *ngTemplateOutlet=\"tt.sortIconTemplate || tt._sortIconTemplate; context: { $implicit: sortOrder }\"></ng-template>\n        </span>`,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: i0.ChangeDetectorRef }], propDecorators: { field: [{\n                type: Input\n            }], ariaLabelDesc: [{\n                type: Input\n            }], ariaLabelAsc: [{\n                type: Input\n            }] } });\nclass TTResizableColumn {\n    document;\n    platformId;\n    renderer;\n    tt;\n    el;\n    zone;\n    ttResizableColumnDisabled;\n    resizer;\n    resizerMouseDownListener;\n    documentMouseMoveListener;\n    documentMouseUpListener;\n    constructor(document, platformId, renderer, tt, el, zone) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.isEnabled()) {\n                addClass(this.el.nativeElement, 'p-resizable-column');\n                this.resizer = this.renderer.createElement('span');\n                this.renderer.addClass(this.resizer, 'p-column-resizer');\n                this.renderer.appendChild(this.el.nativeElement, this.resizer);\n                this.zone.runOutsideAngular(() => {\n                    this.resizerMouseDownListener = this.renderer.listen(this.resizer, 'mousedown', this.onMouseDown.bind(this));\n                });\n            }\n        }\n    }\n    bindDocumentEvents() {\n        this.zone.runOutsideAngular(() => {\n            this.documentMouseMoveListener = this.renderer.listen(this.document, 'mousemove', this.onDocumentMouseMove.bind(this));\n            this.documentMouseUpListener = this.renderer.listen(this.document, 'mouseup', this.onDocumentMouseUp.bind(this));\n        });\n    }\n    unbindDocumentEvents() {\n        if (this.documentMouseMoveListener) {\n            this.documentMouseMoveListener();\n            this.documentMouseMoveListener = null;\n        }\n        if (this.documentMouseUpListener) {\n            this.documentMouseUpListener();\n            this.documentMouseUpListener = null;\n        }\n    }\n    onMouseDown(event) {\n        this.tt.onColumnResizeBegin(event);\n        this.bindDocumentEvents();\n    }\n    onDocumentMouseMove(event) {\n        this.tt.onColumnResize(event);\n    }\n    onDocumentMouseUp(event) {\n        this.tt.onColumnResizeEnd(event, this.el.nativeElement);\n        this.unbindDocumentEvents();\n    }\n    isEnabled() {\n        return this.ttResizableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.resizerMouseDownListener) {\n            this.resizerMouseDownListener();\n            this.resizerMouseDownListener = null;\n        }\n        this.unbindDocumentEvents();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTResizableColumn, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTResizableColumn, isStandalone: false, selector: \"[ttResizableColumn]\", inputs: { ttResizableColumnDisabled: [\"ttResizableColumnDisabled\", \"ttResizableColumnDisabled\", booleanAttribute] }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTResizableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttResizableColumn]',\n                    standalone: false\n                }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { ttResizableColumnDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass TTReorderableColumn {\n    document;\n    platformId;\n    renderer;\n    tt;\n    el;\n    zone;\n    ttReorderableColumnDisabled;\n    dragStartListener;\n    dragOverListener;\n    dragEnterListener;\n    dragLeaveListener;\n    mouseDownListener;\n    constructor(document, platformId, renderer, tt, el, zone) {\n        this.document = document;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    }\n    bindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.zone.runOutsideAngular(() => {\n                this.mouseDownListener = this.renderer.listen(this.el.nativeElement, 'mousedown', this.onMouseDown.bind(this));\n                this.dragStartListener = this.renderer.listen(this.el.nativeElement, 'dragstart', this.onDragStart.bind(this));\n                this.dragOverListener = this.renderer.listen(this.el.nativeElement, 'dragover', this.onDragEnter.bind(this));\n                this.dragEnterListener = this.renderer.listen(this.el.nativeElement, 'dragenter', this.onDragEnter.bind(this));\n                this.dragLeaveListener = this.renderer.listen(this.el.nativeElement, 'dragleave', this.onDragLeave.bind(this));\n            });\n        }\n    }\n    unbindEvents() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.mouseDownListener) {\n                this.mouseDownListener();\n                this.mouseDownListener = null;\n            }\n            if (this.dragOverListener) {\n                this.dragOverListener();\n                this.dragOverListener = null;\n            }\n            if (this.dragEnterListener) {\n                this.dragEnterListener();\n                this.dragEnterListener = null;\n            }\n            if (this.dragLeaveListener) {\n                this.dragLeaveListener();\n                this.dragLeaveListener = null;\n            }\n        }\n    }\n    onMouseDown(event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || hasClass(event.target, 'p-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    }\n    onDragStart(event) {\n        this.tt.onColumnDragStart(event, this.el.nativeElement);\n    }\n    onDragOver(event) {\n        event.preventDefault();\n    }\n    onDragEnter(event) {\n        this.tt.onColumnDragEnter(event, this.el.nativeElement);\n    }\n    onDragLeave(event) {\n        this.tt.onColumnDragLeave(event);\n    }\n    onDrop(event) {\n        if (this.isEnabled()) {\n            this.tt.onColumnDrop(event, this.el.nativeElement);\n        }\n    }\n    isEnabled() {\n        return this.ttReorderableColumnDisabled !== true;\n    }\n    ngOnDestroy() {\n        this.unbindEvents();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTReorderableColumn, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTReorderableColumn, isStandalone: false, selector: \"[ttReorderableColumn]\", inputs: { ttReorderableColumnDisabled: [\"ttReorderableColumnDisabled\", \"ttReorderableColumnDisabled\", booleanAttribute] }, host: { listeners: { \"drop\": \"onDrop($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTReorderableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttReorderableColumn]',\n                    standalone: false\n                }]\n        }], ctorParameters: () => [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { ttReorderableColumnDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }] } });\nclass TTSelectableRow {\n    tt;\n    tableService;\n    rowNode;\n    ttSelectableRowDisabled;\n    selected;\n    subscription;\n    constructor(tt, tableService) {\n        this.tt = tt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.tt.isSelected(this.rowNode.node);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.tt.isSelected(this.rowNode.node);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n    }\n    onKeyDown(event) {\n        switch (event.code) {\n            case 'Enter':\n            case 'Space':\n                this.onEnterKey(event);\n                break;\n            default:\n                break;\n        }\n    }\n    onTouchEnd(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowTouchEnd(event);\n        }\n    }\n    onEnterKey(event) {\n        if (this.tt.selectionMode === 'checkbox') {\n            this.tt.toggleNodeWithCheckbox({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n        else {\n            this.onClick(event);\n        }\n        event.preventDefault();\n    }\n    isEnabled() {\n        return this.ttSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSelectableRow, deps: [{ token: TreeTable }, { token: TreeTableService }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTSelectableRow, isStandalone: false, selector: \"[ttSelectableRow]\", inputs: { rowNode: [\"ttSelectableRow\", \"rowNode\"], ttSelectableRowDisabled: [\"ttSelectableRowDisabled\", \"ttSelectableRowDisabled\", booleanAttribute] }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown\": \"onKeyDown($event)\", \"touchend\": \"onTouchEnd($event)\" }, properties: { \"class.p-treetable-row-selected\": \"selected\", \"attr.aria-checked\": \"selected\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSelectableRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttSelectableRow]',\n                    standalone: false,\n                    host: {\n                        '[class.p-treetable-row-selected]': 'selected',\n                        '[attr.aria-checked]': 'selected'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: TreeTableService }], propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttSelectableRow']\n            }], ttSelectableRowDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }], onTouchEnd: [{\n                type: HostListener,\n                args: ['touchend', ['$event']]\n            }] } });\nclass TTSelectableRowDblClick {\n    tt;\n    tableService;\n    rowNode;\n    ttSelectableRowDisabled;\n    selected;\n    subscription;\n    constructor(tt, tableService) {\n        this.tt = tt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n                this.selected = this.tt.isSelected(this.rowNode.node);\n            });\n        }\n    }\n    ngOnInit() {\n        if (this.isEnabled()) {\n            this.selected = this.tt.isSelected(this.rowNode.node);\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n        }\n    }\n    isEnabled() {\n        return this.ttSelectableRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSelectableRowDblClick, deps: [{ token: TreeTable }, { token: TreeTableService }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTSelectableRowDblClick, isStandalone: false, selector: \"[ttSelectableRowDblClick]\", inputs: { rowNode: [\"ttSelectableRowDblClick\", \"rowNode\"], ttSelectableRowDisabled: [\"ttSelectableRowDisabled\", \"ttSelectableRowDisabled\", booleanAttribute] }, host: { listeners: { \"dblclick\": \"onClick($event)\" }, properties: { \"class.p-treetable-row-selected\": \"selected\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTSelectableRowDblClick, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttSelectableRowDblClick]',\n                    standalone: false,\n                    host: {\n                        '[class.p-treetable-row-selected]': 'selected'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: TreeTableService }], propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttSelectableRowDblClick']\n            }], ttSelectableRowDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onClick: [{\n                type: HostListener,\n                args: ['dblclick', ['$event']]\n            }] } });\nclass TTContextMenuRow {\n    tt;\n    tableService;\n    el;\n    rowNode;\n    ttContextMenuRowDisabled;\n    selected;\n    subscription;\n    constructor(tt, tableService, el) {\n        this.tt = tt;\n        this.tableService = tableService;\n        this.el = el;\n        if (this.isEnabled()) {\n            this.subscription = this.tt.tableService.contextMenuSource$.subscribe((node) => {\n                this.selected = this.tt.equals(this.rowNode.node, node);\n            });\n        }\n    }\n    onContextMenu(event) {\n        if (this.isEnabled()) {\n            this.tt.handleRowRightClick({\n                originalEvent: event,\n                rowNode: this.rowNode\n            });\n            this.el.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n    isEnabled() {\n        return this.ttContextMenuRowDisabled !== true;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTContextMenuRow, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTContextMenuRow, isStandalone: false, selector: \"[ttContextMenuRow]\", inputs: { rowNode: [\"ttContextMenuRow\", \"rowNode\"], ttContextMenuRowDisabled: [\"ttContextMenuRowDisabled\", \"ttContextMenuRowDisabled\", booleanAttribute] }, host: { listeners: { \"contextmenu\": \"onContextMenu($event)\" }, properties: { \"class.p-treetable-contextmenu-row-selected\": \"selected\", \"attr.tabindex\": \"isEnabled() ? 0 : undefined\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTContextMenuRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttContextMenuRow]',\n                    standalone: false,\n                    host: {\n                        '[class.p-treetable-contextmenu-row-selected]': 'selected',\n                        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ElementRef }], propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttContextMenuRow']\n            }], ttContextMenuRowDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onContextMenu: [{\n                type: HostListener,\n                args: ['contextmenu', ['$event']]\n            }] } });\nclass TTCheckbox {\n    tt;\n    tableService;\n    cd;\n    disabled;\n    rowNode;\n    checked;\n    partialChecked;\n    focused;\n    subscription;\n    constructor(tt, tableService, cd) {\n        this.tt = tt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.subscription = this.tt.tableService.selectionSource$.subscribe(() => {\n            if (this.tt.selectionKeys) {\n                this.checked = this.tt.isNodeSelected(this.rowNode.node);\n                this.partialChecked = this.tt.isNodePartialSelected(this.rowNode.node);\n            }\n            else {\n                this.checked = this.tt.isSelected(this.rowNode.node);\n                this.partialChecked = this.rowNode.node.partialSelected;\n            }\n            this.cd.markForCheck();\n        });\n    }\n    ngOnInit() {\n        if (this.tt.selectionKeys) {\n            this.checked = this.tt.isNodeSelected(this.rowNode.node);\n            this.partialChecked = this.tt.isNodePartialSelected(this.rowNode.node);\n        }\n        else {\n            // for backward compatibility\n            this.checked = this.tt.isSelected(this.rowNode.node);\n            this.partialChecked = this.rowNode.node.partialSelected;\n        }\n    }\n    onClick(event) {\n        if (!this.disabled) {\n            if (this.tt.selectionKeys) {\n                const _check = !this.checked;\n                this.tt.toggleCheckbox({\n                    originalEvent: event,\n                    check: _check,\n                    rowNode: this.rowNode\n                });\n            }\n            else {\n                this.tt.toggleNodeWithCheckbox({\n                    originalEvent: event,\n                    rowNode: this.rowNode\n                });\n            }\n        }\n        clearSelection();\n    }\n    onFocus() {\n        this.focused = true;\n    }\n    onBlur() {\n        this.focused = false;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTCheckbox, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTCheckbox, isStandalone: false, selector: \"p-treeTableCheckbox, p-treetable-checkbox, p-tree-table-checkbox\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], rowNode: [\"value\", \"rowNode\"] }, ngImport: i0, template: `\n        <p-checkbox [ngModel]=\"checked\" (onChange)=\"onClick($event)\" [binary]=\"true\" [disabled]=\"disabled\" [indeterminate]=\"partialChecked\" styleClass=\"p-treetable-node-checkbox\" [tabIndex]=\"-1\">\n            <ng-container *ngIf=\"tt.checkboxIconTemplate || tt._checkboxIconTemplate\">\n                <ng-template pTemplate=\"icon\">\n                    <ng-template *ngTemplateOutlet=\"tt.checkboxIconTemplate || tt._checkboxIconTemplate; context: { $implicit: checked, partialSelected: partialChecked }\"></ng-template>\n                </ng-template>\n            </ng-container>\n        </p-checkbox>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i3.PrimeTemplate), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"component\", type: i0.forwardRef(() => Checkbox), selector: \"p-checkbox, p-checkBox, p-check-box\", inputs: [\"value\", \"name\", \"disabled\", \"binary\", \"ariaLabelledBy\", \"ariaLabel\", \"tabindex\", \"inputId\", \"style\", \"inputStyle\", \"styleClass\", \"inputClass\", \"indeterminate\", \"size\", \"formControl\", \"checkboxIcon\", \"readonly\", \"required\", \"autofocus\", \"trueValue\", \"falseValue\", \"variant\"], outputs: [\"onChange\", \"onFocus\", \"onBlur\"] }, { kind: \"directive\", type: i0.forwardRef(() => i4.NgControlStatus), selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i0.forwardRef(() => i4.NgModel), selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableCheckbox, p-treetable-checkbox, p-tree-table-checkbox',\n                    standalone: false,\n                    template: `\n        <p-checkbox [ngModel]=\"checked\" (onChange)=\"onClick($event)\" [binary]=\"true\" [disabled]=\"disabled\" [indeterminate]=\"partialChecked\" styleClass=\"p-treetable-node-checkbox\" [tabIndex]=\"-1\">\n            <ng-container *ngIf=\"tt.checkboxIconTemplate || tt._checkboxIconTemplate\">\n                <ng-template pTemplate=\"icon\">\n                    <ng-template *ngTemplateOutlet=\"tt.checkboxIconTemplate || tt._checkboxIconTemplate; context: { $implicit: checked, partialSelected: partialChecked }\"></ng-template>\n                </ng-template>\n            </ng-container>\n        </p-checkbox>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ChangeDetectorRef }], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], rowNode: [{\n                type: Input,\n                args: ['value']\n            }] } });\nclass TTHeaderCheckbox {\n    tt;\n    tableService;\n    cd;\n    checked;\n    disabled;\n    selectionChangeSubscription;\n    valueChangeSubscription;\n    constructor(tt, tableService, cd) {\n        this.tt = tt;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n        this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(() => {\n            this.checked = this.updateCheckedState();\n        });\n    }\n    ngOnInit() {\n        this.checked = this.updateCheckedState();\n    }\n    onClick(event) {\n        if ((this.tt.value || this.tt.filteredNodes) && (this.tt.value.length > 0 || this.tt.filteredNodes.length > 0)) {\n            this.tt.toggleNodesWithCheckbox(event, !this.checked);\n        }\n        clearSelection();\n    }\n    ngOnDestroy() {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    }\n    updateCheckedState() {\n        this.cd.markForCheck();\n        let checked;\n        const data = this.tt.filteredNodes || this.tt.value;\n        if (data) {\n            if (this.tt.selectionKeys) {\n                for (let node of data) {\n                    if (this.tt.isNodeSelected(node)) {\n                        checked = true;\n                    }\n                    else {\n                        checked = false;\n                        break;\n                    }\n                }\n            }\n            if (!this.tt.selectionKeys) {\n                // legacy selection support, will be removed in v18\n                for (let node of data) {\n                    if (this.tt.isSelected(node)) {\n                        checked = true;\n                    }\n                    else {\n                        checked = false;\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            checked = false;\n        }\n        return checked;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTHeaderCheckbox, deps: [{ token: TreeTable }, { token: TreeTableService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.10\", type: TTHeaderCheckbox, isStandalone: false, selector: \"p-treeTableHeaderCheckbox\", ngImport: i0, template: `\n        <p-checkbox [ngModel]=\"checked\" (onChange)=\"onClick($event)\" [binary]=\"true\" [disabled]=\"!tt.value || tt.value.length === 0\">\n            <ng-container *ngIf=\"tt.headerCheckboxIconTemplate || tt._headerCheckboxIconTemplate\">\n                <ng-template pTemplate=\"icon\">\n                    <ng-template *ngTemplateOutlet=\"tt.headerCheckboxIconTemplate || tt._headerCheckboxIconTemplate; context: { $implicit: checked }\"></ng-template>\n                </ng-template>\n            </ng-container>\n        </p-checkbox>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => i3.PrimeTemplate), selector: \"[pTemplate]\", inputs: [\"type\", \"pTemplate\"] }, { kind: \"component\", type: i0.forwardRef(() => Checkbox), selector: \"p-checkbox, p-checkBox, p-check-box\", inputs: [\"value\", \"name\", \"disabled\", \"binary\", \"ariaLabelledBy\", \"ariaLabel\", \"tabindex\", \"inputId\", \"style\", \"inputStyle\", \"styleClass\", \"inputClass\", \"indeterminate\", \"size\", \"formControl\", \"checkboxIcon\", \"readonly\", \"required\", \"autofocus\", \"trueValue\", \"falseValue\", \"variant\"], outputs: [\"onChange\", \"onFocus\", \"onBlur\"] }, { kind: \"directive\", type: i0.forwardRef(() => i4.NgControlStatus), selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i0.forwardRef(() => i4.NgModel), selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTHeaderCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableHeaderCheckbox',\n                    standalone: false,\n                    template: `\n        <p-checkbox [ngModel]=\"checked\" (onChange)=\"onClick($event)\" [binary]=\"true\" [disabled]=\"!tt.value || tt.value.length === 0\">\n            <ng-container *ngIf=\"tt.headerCheckboxIconTemplate || tt._headerCheckboxIconTemplate\">\n                <ng-template pTemplate=\"icon\">\n                    <ng-template *ngTemplateOutlet=\"tt.headerCheckboxIconTemplate || tt._headerCheckboxIconTemplate; context: { $implicit: checked }\"></ng-template>\n                </ng-template>\n            </ng-container>\n        </p-checkbox>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: TreeTableService }, { type: i0.ChangeDetectorRef }] });\nclass TTEditableColumn {\n    tt;\n    el;\n    zone;\n    data;\n    field;\n    ttEditableColumnDisabled;\n    constructor(tt, el, zone) {\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ngAfterViewInit() {\n        if (this.isEnabled()) {\n            addClass(this.el.nativeElement, 'p-editable-column');\n        }\n    }\n    onClick(event) {\n        if (this.isEnabled()) {\n            this.tt.editingCellClick = true;\n            if (this.tt.editingCell) {\n                if (this.tt.editingCell !== this.el.nativeElement) {\n                    if (!this.tt.isEditingCellValid()) {\n                        return;\n                    }\n                    removeClass(this.tt.editingCell, 'p-cell-editing');\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    }\n    openCell() {\n        this.tt.updateEditingCell(this.el.nativeElement, this.data, this.field);\n        addClass(this.el.nativeElement, 'p-cell-editing');\n        this.tt.onEditInit.emit({ field: this.field, data: this.data });\n        this.tt.editingCellClick = true;\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                let focusable = findSingle(this.el.nativeElement, 'input, textarea');\n                if (focusable) {\n                    focusable.focus();\n                }\n            }, 50);\n        });\n    }\n    closeEditingCell() {\n        removeClass(this.tt.editingCell, 'p-checkbox-icon');\n        this.tt.editingCell = null;\n        this.tt.unbindDocumentEditListener();\n    }\n    onKeyDown(event) {\n        if (this.isEnabled()) {\n            //enter\n            if (event.keyCode == 13 && !event.shiftKey) {\n                if (this.tt.isEditingCellValid()) {\n                    removeClass(this.tt.editingCell, 'p-cell-editing');\n                    this.closeEditingCell();\n                    this.tt.onEditComplete.emit({ field: this.field, data: this.data });\n                }\n                event.preventDefault();\n            }\n            //escape\n            else if (event.keyCode == 27) {\n                if (this.tt.isEditingCellValid()) {\n                    removeClass(this.tt.editingCell, 'p-cell-editing');\n                    this.closeEditingCell();\n                    this.tt.onEditCancel.emit({ field: this.field, data: this.data });\n                }\n                event.preventDefault();\n            }\n            //tab\n            else if (event.keyCode == 9) {\n                this.tt.onEditComplete.emit({ field: this.field, data: this.data });\n                if (event.shiftKey)\n                    this.moveToPreviousCell(event);\n                else\n                    this.moveToNextCell(event);\n            }\n        }\n    }\n    findCell(element) {\n        if (element) {\n            let cell = element;\n            while (cell && !hasClass(cell, 'p-cell-editing')) {\n                cell = cell.parentElement;\n            }\n            return cell;\n        }\n        else {\n            return null;\n        }\n    }\n    moveToPreviousCell(event) {\n        let currentCell = this.findCell(event.target);\n        let row = currentCell.parentElement;\n        let targetCell = this.findPreviousEditableColumn(currentCell);\n        if (targetCell) {\n            invokeElementMethod(targetCell, 'click', undefined);\n            event.preventDefault();\n        }\n    }\n    moveToNextCell(event) {\n        let currentCell = this.findCell(event.target);\n        let row = currentCell.parentElement;\n        let targetCell = this.findNextEditableColumn(currentCell);\n        if (targetCell) {\n            invokeElementMethod(targetCell, 'click', undefined);\n            event.preventDefault();\n        }\n    }\n    findPreviousEditableColumn(cell) {\n        let prevCell = cell.previousElementSibling;\n        if (!prevCell) {\n            let previousRow = cell.parentElement ? cell.parentElement.previousElementSibling : null;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n        if (prevCell) {\n            if (hasClass(prevCell, 'p-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    }\n    findNextEditableColumn(cell) {\n        let nextCell = cell.nextElementSibling;\n        if (!nextCell) {\n            let nextRow = cell.parentElement ? cell.parentElement.nextElementSibling : null;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n        if (nextCell) {\n            if (hasClass(nextCell, 'p-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    }\n    isEnabled() {\n        return this.ttEditableColumnDisabled !== true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTEditableColumn, deps: [{ token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.10\", type: TTEditableColumn, isStandalone: false, selector: \"[ttEditableColumn]\", inputs: { data: [\"ttEditableColumn\", \"data\"], field: [\"ttEditableColumnField\", \"field\"], ttEditableColumnDisabled: [\"ttEditableColumnDisabled\", \"ttEditableColumnDisabled\", booleanAttribute] }, host: { listeners: { \"click\": \"onClick($event)\", \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTEditableColumn, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttEditableColumn]',\n                    standalone: false\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { data: [{\n                type: Input,\n                args: ['ttEditableColumn']\n            }], field: [{\n                type: Input,\n                args: ['ttEditableColumnField']\n            }], ttEditableColumnDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\nclass TreeTableCellEditor extends BaseComponent {\n    tt;\n    editableColumn;\n    templates;\n    inputTemplate;\n    outputTemplate;\n    constructor(tt, editableColumn) {\n        super();\n        this.tt = tt;\n        this.editableColumn = editableColumn;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'input':\n                    this.inputTemplate = item.template;\n                    break;\n                case 'output':\n                    this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableCellEditor, deps: [{ token: TreeTable }, { token: TTEditableColumn }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.10\", type: TreeTableCellEditor, isStandalone: false, selector: \"p-treeTableCellEditor, p-treetablecelleditor, p-treetable-cell-editor\", queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], usesInheritance: true, ngImport: i0, template: `\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableCellEditor, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableCellEditor, p-treetablecelleditor, p-treetable-cell-editor',\n                    standalone: false,\n                    template: `\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: TTEditableColumn }], propDecorators: { templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass TTRow {\n    tt;\n    el;\n    zone;\n    get level() {\n        return this.rowNode?.['level'] + 1;\n    }\n    get styleClass() {\n        return this.rowNode?.node['styleClass'] || '';\n    }\n    get expanded() {\n        return this.rowNode?.node['expanded'];\n    }\n    rowNode;\n    constructor(tt, el, zone) {\n        this.tt = tt;\n        this.el = el;\n        this.zone = zone;\n    }\n    onKeyDown(event) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onArrowUpKey(event);\n                break;\n            case 'ArrowRight':\n                this.onArrowRightKey(event);\n                break;\n            case 'ArrowLeft':\n                this.onArrowLeftKey(event);\n                break;\n            case 'Tab':\n                this.onTabKey(event);\n                break;\n            case 'Home':\n                this.onHomeKey(event);\n                break;\n            case 'End':\n                this.onEndKey(event);\n                break;\n            default:\n                break;\n        }\n    }\n    onArrowDownKey(event) {\n        let nextRow = this.el?.nativeElement?.nextElementSibling;\n        if (nextRow) {\n            this.focusRowChange(event.currentTarget, nextRow);\n        }\n        event.preventDefault();\n    }\n    onArrowUpKey(event) {\n        let prevRow = this.el?.nativeElement?.previousElementSibling;\n        if (prevRow) {\n            this.focusRowChange(event.currentTarget, prevRow);\n        }\n        event.preventDefault();\n    }\n    onArrowRightKey(event) {\n        const currentTarget = event.currentTarget;\n        const isHiddenIcon = findSingle(currentTarget, 'button').style.visibility === 'hidden';\n        if (!isHiddenIcon && !this.expanded && this.rowNode.node['children']) {\n            this.expand(event);\n            currentTarget.tabIndex = -1;\n        }\n        event.preventDefault();\n    }\n    onArrowLeftKey(event) {\n        const container = this.tt.containerViewChild?.nativeElement;\n        const expandedRows = find(container, '[aria-expanded=\"true\"]');\n        const lastExpandedRow = expandedRows[expandedRows.length - 1];\n        if (this.expanded) {\n            this.collapse(event);\n        }\n        if (lastExpandedRow) {\n            this.tt.toggleRowIndex = getIndex(lastExpandedRow);\n        }\n        this.restoreFocus();\n        event.preventDefault();\n    }\n    onHomeKey(event) {\n        const firstElement = findSingle(this.tt.containerViewChild?.nativeElement, `tr[aria-level=\"${this.level}\"]`);\n        firstElement && focus(firstElement);\n        event.preventDefault();\n    }\n    onEndKey(event) {\n        const nodes = find(this.tt.containerViewChild?.nativeElement, `tr[aria-level=\"${this.level}\"]`);\n        const lastElement = nodes[nodes.length - 1];\n        focus(lastElement);\n        event.preventDefault();\n    }\n    onTabKey(event) {\n        const rows = this.el.nativeElement ? [...find(this.el.nativeElement.parentNode, 'tr')] : undefined;\n        if (rows && isNotEmpty(rows)) {\n            const hasSelectedRow = rows.some((row) => getAttribute(row, 'data-p-highlight') || row.getAttribute('aria-checked') === 'true');\n            rows.forEach((row) => {\n                row.tabIndex = -1;\n            });\n            if (hasSelectedRow) {\n                const selectedNodes = rows.filter((node) => getAttribute(node, 'data-p-highlight') || node.getAttribute('aria-checked') === 'true');\n                selectedNodes[0].tabIndex = 0;\n                return;\n            }\n            rows[0].tabIndex = 0;\n        }\n    }\n    expand(event) {\n        this.tt.toggleRowIndex = getIndex(this.el.nativeElement);\n        this.rowNode.node['expanded'] = true;\n        this.tt.updateSerializedValue();\n        this.tt.tableService.onUIUpdate(this.tt.value);\n        this.rowNode.node['children'] ? this.restoreFocus(this.tt.toggleRowIndex + 1) : this.restoreFocus();\n        this.tt.onNodeExpand.emit({\n            originalEvent: event,\n            node: this.rowNode.node\n        });\n    }\n    collapse(event) {\n        this.rowNode.node['expanded'] = false;\n        this.tt.updateSerializedValue();\n        this.tt.tableService.onUIUpdate(this.tt.value);\n        this.tt.onNodeCollapse.emit({ originalEvent: event, node: this.rowNode.node });\n    }\n    focusRowChange(firstFocusableRow, currentFocusedRow, lastVisibleDescendant) {\n        firstFocusableRow.tabIndex = '-1';\n        currentFocusedRow.tabIndex = '0';\n        focus(currentFocusedRow);\n    }\n    restoreFocus(index) {\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                const container = this.tt.containerViewChild?.nativeElement;\n                const row = findSingle(container, '.p-treetable-tbody').children[index || this.tt.toggleRowIndex];\n                const rows = [...find(container, 'tr')];\n                rows &&\n                    rows.forEach((r) => {\n                        if (!row.isSameNode(r)) {\n                            r.tabIndex = -1;\n                        }\n                    });\n                if (row) {\n                    row.tabIndex = 0;\n                    row.focus();\n                }\n            }, 25);\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTRow, deps: [{ token: TreeTable }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.10\", type: TTRow, isStandalone: false, selector: \"[ttRow]\", inputs: { rowNode: [\"ttRow\", \"rowNode\"] }, host: { listeners: { \"keydown\": \"onKeyDown($event)\" }, properties: { \"class\": \"'p-element ' + styleClass\", \"attr.tabindex\": \"'0'\", \"attr.aria-expanded\": \"expanded\", \"attr.aria-level\": \"level\", \"attr.data-pc-section\": \"row\", \"attr.role\": \"row\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TTRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ttRow]',\n                    standalone: false,\n                    host: {\n                        '[class]': `'p-element ' + styleClass`,\n                        '[attr.tabindex]': \"'0'\",\n                        '[attr.aria-expanded]': 'expanded',\n                        '[attr.aria-level]': 'level',\n                        '[attr.data-pc-section]': 'row',\n                        '[attr.role]': 'row'\n                    }\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { rowNode: [{\n                type: Input,\n                args: ['ttRow']\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\nclass TreeTableToggler extends BaseComponent {\n    tt;\n    rowNode;\n    constructor(tt) {\n        super();\n        this.tt = tt;\n    }\n    get toggleButtonAriaLabel() {\n        return this.config.translation ? (this.rowNode.expanded ? this.config.translation.aria.collapseRow : this.config.translation.aria.expandRow) : undefined;\n    }\n    onClick(event) {\n        this.rowNode.node.expanded = !this.rowNode.node.expanded;\n        if (this.rowNode.node.expanded) {\n            this.tt.onNodeExpand.emit({\n                originalEvent: event,\n                node: this.rowNode.node\n            });\n        }\n        else {\n            this.tt.onNodeCollapse.emit({\n                originalEvent: event,\n                node: this.rowNode.node\n            });\n        }\n        this.tt.updateSerializedValue();\n        this.tt.tableService.onUIUpdate(this.tt.value);\n        event.preventDefault();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableToggler, deps: [{ token: TreeTable }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.10\", type: TreeTableToggler, isStandalone: false, selector: \"p-treeTableToggler, p-treetabletoggler, p-treetable-toggler\", inputs: { rowNode: \"rowNode\" }, usesInheritance: true, ngImport: i0, template: `\n        <button\n            type=\"button\"\n            class=\"p-treetable-toggler\"\n            (click)=\"onClick($event)\"\n            tabindex=\"-1\"\n            pRipple\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\"\n            [style.marginInlineStart]=\"rowNode.level * 16 + 'px'\"\n            [attr.data-pc-section]=\"'rowtoggler'\"\n            [attr.data-pc-group-section]=\"'rowactionbutton'\"\n            [attr.aria-label]=\"toggleButtonAriaLabel\"\n        >\n            <ng-container *ngIf=\"!tt.togglerIconTemplate && !tt._togglerIconTemplate\">\n                <ChevronDownIcon *ngIf=\"rowNode.node.expanded\" [attr.aria-hidden]=\"true\" />\n                <ChevronRightIcon *ngIf=\"!rowNode.node.expanded\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n            <ng-template *ngTemplateOutlet=\"tt.togglerIconTemplate || tt._togglerIconTemplate; context: { $implicit: rowNode.node.expanded }\"></ng-template>\n        </button>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i0.forwardRef(() => i1.NgIf), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(() => i1.NgTemplateOutlet), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(() => Ripple), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(() => ChevronDownIcon), selector: \"ChevronDownIcon\" }, { kind: \"component\", type: i0.forwardRef(() => ChevronRightIcon), selector: \"ChevronRightIcon\" }], encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableToggler, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-treeTableToggler, p-treetabletoggler, p-treetable-toggler',\n                    standalone: false,\n                    template: `\n        <button\n            type=\"button\"\n            class=\"p-treetable-toggler\"\n            (click)=\"onClick($event)\"\n            tabindex=\"-1\"\n            pRipple\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\"\n            [style.marginInlineStart]=\"rowNode.level * 16 + 'px'\"\n            [attr.data-pc-section]=\"'rowtoggler'\"\n            [attr.data-pc-group-section]=\"'rowactionbutton'\"\n            [attr.aria-label]=\"toggleButtonAriaLabel\"\n        >\n            <ng-container *ngIf=\"!tt.togglerIconTemplate && !tt._togglerIconTemplate\">\n                <ChevronDownIcon *ngIf=\"rowNode.node.expanded\" [attr.aria-hidden]=\"true\" />\n                <ChevronRightIcon *ngIf=\"!rowNode.node.expanded\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n            <ng-template *ngTemplateOutlet=\"tt.togglerIconTemplate || tt._togglerIconTemplate; context: { $implicit: rowNode.node.expanded }\"></ng-template>\n        </button>\n    `,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], ctorParameters: () => [{ type: TreeTable }], propDecorators: { rowNode: [{\n                type: Input\n            }] } });\nclass TreeTableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableModule, declarations: [TreeTable, TreeTableToggler, TTScrollableView, TTBody, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor], imports: [CommonModule,\n            PaginatorModule,\n            Ripple,\n            Scroller,\n            SpinnerIcon,\n            ArrowDownIcon,\n            ArrowUpIcon,\n            SortAltIcon,\n            SortAmountUpAltIcon,\n            SortAmountDownIcon,\n            CheckIcon,\n            MinusIcon,\n            ChevronDownIcon,\n            ChevronRightIcon,\n            Checkbox,\n            SharedModule,\n            FormsModule], exports: [TreeTable, SharedModule, TreeTableToggler, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor, Scroller] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableModule, imports: [CommonModule,\n            PaginatorModule,\n            Scroller,\n            SpinnerIcon,\n            ArrowDownIcon,\n            ArrowUpIcon,\n            SortAltIcon,\n            SortAmountUpAltIcon,\n            SortAmountDownIcon,\n            CheckIcon,\n            MinusIcon,\n            ChevronDownIcon,\n            ChevronRightIcon,\n            Checkbox,\n            SharedModule,\n            FormsModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: TreeTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        PaginatorModule,\n                        Ripple,\n                        Scroller,\n                        SpinnerIcon,\n                        ArrowDownIcon,\n                        ArrowUpIcon,\n                        SortAltIcon,\n                        SortAmountUpAltIcon,\n                        SortAmountDownIcon,\n                        CheckIcon,\n                        MinusIcon,\n                        ChevronDownIcon,\n                        ChevronRightIcon,\n                        Checkbox,\n                        SharedModule,\n                        FormsModule\n                    ],\n                    exports: [\n                        TreeTable,\n                        SharedModule,\n                        TreeTableToggler,\n                        TTSortableColumn,\n                        TTSortIcon,\n                        TTResizableColumn,\n                        TTRow,\n                        TTReorderableColumn,\n                        TTSelectableRow,\n                        TTSelectableRowDblClick,\n                        TTContextMenuRow,\n                        TTCheckbox,\n                        TTHeaderCheckbox,\n                        TTEditableColumn,\n                        TreeTableCellEditor,\n                        Scroller\n                    ],\n                    declarations: [\n                        TreeTable,\n                        TreeTableToggler,\n                        TTScrollableView,\n                        TTBody,\n                        TTSortableColumn,\n                        TTSortIcon,\n                        TTResizableColumn,\n                        TTRow,\n                        TTReorderableColumn,\n                        TTSelectableRow,\n                        TTSelectableRowDblClick,\n                        TTContextMenuRow,\n                        TTCheckbox,\n                        TTHeaderCheckbox,\n                        TTEditableColumn,\n                        TreeTableCellEditor\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TTBody, TTCheckbox, TTContextMenuRow, TTEditableColumn, TTHeaderCheckbox, TTReorderableColumn, TTResizableColumn, TTRow, TTScrollableView, TTSelectableRow, TTSelectableRowDblClick, TTSortIcon, TTSortableColumn, TreeTable, TreeTableCellEditor, TreeTableClasses, TreeTableModule, TreeTableService, TreeTableStyle, TreeTableToggler };\n"],"mappings":"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AC;IAxqIiC5W,EAAE,CAAA+H,SAAA,CAyqIlC,CAAC;IAzqI+B/H,EAAE,CAAAwH,UAAA,UAAAL,MAAA,CAAAwP,OAAA,CAAAhH,IAAA,CAAAiH,QAyqIlC,CAAC;EAAA;AAAA;AAAA,SAAAC,0CAAA7P,EAAA,EAAAC,GAAA;AAAA,SAAA6P,4BAAA9P,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAzqI+BhH,EAAE,CAAA2H,UAAA,IAAAkP,yCAAA,qBA2qI6C,CAAC;EAAA;AAAA;AAlrJ9I,MAAME,KAAK,GAAGA,CAAC;EAAEC;AAAG,CAAC,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaA,EAAE,CAAC,gCAAgC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaA,EAAE,CAAC,kCAAkC,CAAC;AACnD;AACA;AACA;AACA,kBAAkBA,EAAE,CAAC,kCAAkC,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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ACA;AACA;EACIxE,SAAS;EACT;AACJ;AACA;AACA;EACInN,IAAI;EACJ;AACJ;AACA;AACA;EACIC,KAAK,GAAG,CAAC;EACT;AACJ;AACA;AACA;EACIE,SAAS,GAAG,CAAC;EACb;AACJ;AACA;AACA;EACIE,kBAAkB;EAClB;AACJ;AACA;AACA;EACID,mBAAmB,GAAG,IAAI;EAC1B;AACJ;AACA;AACA;EACIgN,iBAAiB,GAAG,QAAQ;EAC5B;AACJ;AACA;AACA;EACIjM,mBAAmB;EACnB;AACJ;AACA;AACA;EACIR,yBAAyB;EACzB;AACJ;AACA;AACA;EACIC,yBAAyB,GAAG,+BAA+B;EAC3D;AACJ;AACA;AACA;EACII,qBAAqB;EACrB;AACJ;AACA;AACA;EACIC,sBAAsB;EACtB;AACJ;AACA;AACA;EACIJ,iBAAiB,GAAG,IAAI;EACxB;AACJ;AACA;AACA;EACIK,aAAa,GAAG,IAAI;EACpB;AACJ;AACA;AACA;EACI0Q,gBAAgB,GAAG,CAAC;EACpB;AACJ;AACA;AACA;EACIC,QAAQ,GAAG,QAAQ;EACnB;AACJ;AACA;AACA;EACIC,eAAe,GAAG,IAAI;EACtB;AACJ;AACA;AACA;EACIC,UAAU;EACV;AACJ;AACA;AACA;EACIrF,aAAa;EACb;AACJ;AACA;AACA;EACIsF,oBAAoB;EACpB;AACJ;AACA;AACA;EACIC,wBAAwB,GAAG,UAAU;EACrC;AACJ;AACA;AACA;EACIC,OAAO;EACP;AACJ;AACA;AACA;EACIC,gBAAgB,GAAG,KAAK;EACxB;AACJ;AACA;AACA;EACIC,kBAAkB,GAAG,YAAY;EACjC;AACJ;AACA;AACA;EACI3F,QAAQ;EACR;AACJ;AACA;AACA;EACIO,OAAO;EACP;AACJ;AACA;AACA;EACIrQ,WAAW;EACX;AACJ;AACA;AACA;EACI0V,UAAU,GAAG,IAAI;EACjB;AACJ;AACA;AACA;EACIxF,UAAU;EACV;AACJ;AACA;AACA;EACIpK,YAAY;EACZ;AACJ;AACA;AACA;EACI6P,aAAa;EACb;AACJ;AACA;AACA;EACI/J,qBAAqB;EACrB;AACJ;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}