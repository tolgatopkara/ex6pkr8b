{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, contentChild, forwardRef, computed, ChangeDetectionStrategy, Component, EventEmitter, inject, numberAttribute, ContentChildren, ViewChild, Output, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { hasClass, getWidth, getHeight, getOuterWidth, getOuterHeight, addClass, isRTL, removeClass } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst _c1 = [\"panel\"];\nconst _c2 = [\"container\"];\nconst _c3 = a0 => ({\n  display: \"flex\",\n  \"flex-wrap\": \"nowrap\",\n  \"flex-direction\": a0\n});\nfunction Splitter_ng_template_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Splitter_ng_template_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"mousedown\", function Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onGutterMouseDown($event, i_r2));\n    })(\"touchstart\", function Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onGutterTouchStart($event, i_r2));\n    })(\"touchmove\", function Splitter_ng_template_2_div_2_Template_div_touchmove_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onGutterTouchMove($event));\n    })(\"touchend\", function Splitter_ng_template_2_div_2_Template_div_touchend_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onGutterTouchEnd($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵlistener(\"keyup\", function Splitter_ng_template_2_div_2_Template_div_keyup_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onGutterKeyUp($event));\n    })(\"keydown\", function Splitter_ng_template_2_div_2_Template_div_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onGutterKeyDown($event, i_r2));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-p-gutter-resizing\", false)(\"data-pc-section\", \"gutter\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.gutterStyle());\n    i0.ɵɵattribute(\"aria-orientation\", ctx_r2.layout)(\"aria-valuenow\", ctx_r2.prevSize)(\"data-pc-section\", \"gutterhandle\");\n  }\n}\nfunction Splitter_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, Splitter_ng_template_2_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, Splitter_ng_template_2_div_2_Template, 2, 6, \"div\", 5);\n  }\n  if (rf & 2) {\n    const panel_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.panelContainerClass())(\"ngStyle\", ctx_r2.panelStyle);\n    i0.ɵɵattribute(\"data-pc-name\", \"splitter\")(\"data-pc-section\", \"root\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r2 !== ctx_r2.panels.length - 1);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-splitter {\n    display: flex;\n    flex-wrap: nowrap;\n    border: 1px solid ${dt('splitter.border.color')};\n    background: ${dt('splitter.background')};\n    border-radius: ${dt('border.radius.md')};\n    color: ${dt('splitter.color')};\n}\n\n.p-splitter-vertical {\n    flex-direction: column;\n}\n\n.p-splitter-gutter {\n    flex-grow: 0;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1;\n    background: ${dt('splitter.gutter.background')};\n}\n\n.p-splitter-gutter-handle {\n    border-radius: ${dt('splitter.handle.border.radius')};\n    background: ${dt('splitter.handle.background')};\n    transition: outline-color ${dt('splitter.transition.duration')}, box-shadow ${dt('splitter.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-splitter-gutter-handle:focus-visible {\n    box-shadow: ${dt('splitter.handle.focus.ring.shadow')};\n    outline: ${dt('splitter.handle.focus.ring.width')} ${dt('splitter.handle.focus.ring.style')} ${dt('splitter.handle.focus.ring.color')};\n    outline-offset: ${dt('splitter.handle.focus.ring.offset')};\n}\n\n.p-splitter-horizontal.p-splitter-resizing {\n    cursor: col-resize;\n    user-select: none;\n}\n\n.p-splitter-vertical.p-splitter-resizing {\n    cursor: row-resize;\n    user-select: none;\n}\n\n.p-splitter-horizontal > .p-splitter-gutter > .p-splitter-gutter-handle {\n    height: ${dt('splitter.handle.size')};\n    width: 100%;\n}\n\n.p-splitter-vertical > .p-splitter-gutter > .p-splitter-gutter-handle {\n    width: ${dt('splitter.handle.size')};\n    height: 100%;\n}\n\n.p-splitter-horizontal > .p-splitter-gutter {\n    cursor: col-resize;\n}\n\n.p-splitter-vertical > .p-splitter-gutter {\n    cursor: row-resize;\n}\n\n.p-splitterpanel {\n    flex-grow: 1;\n    overflow: hidden;\n}\n\n.p-splitterpanel-nested {\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n}\n\n.p-splitterpanel .p-splitter {\n    flex-grow: 1;\n    border: 0 none;\n}\n`;\nconst classes = {\n  root: ({\n    props\n  }) => ['p-splitter p-component', 'p-splitter-' + props.layout],\n  gutter: 'p-splitter-gutter',\n  gutterHandle: 'p-splitter-gutter-handle'\n};\n/*const inlineStyles = {\n    root: ({ props }) => [{ display: 'flex', 'flex-wrap': 'nowrap' }, props.layout === 'vertical' ? { 'flex-direction': 'column' } : '']\n};*/\nclass SplitterStyle extends BaseStyle {\n  name = 'splitter';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSplitterStyle_BaseFactory;\n    return function SplitterStyle_Factory(__ngFactoryType__) {\n      return (ɵSplitterStyle_BaseFactory || (ɵSplitterStyle_BaseFactory = i0.ɵɵgetInheritedFactory(SplitterStyle)))(__ngFactoryType__ || SplitterStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SplitterStyle,\n    factory: SplitterStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Splitter is utilized to separate and resize panels.\n *\n * [Live Demo](https://www.primeng.org/splitter/)\n *\n * @module splitterstyle\n *\n */\nvar SplitterClasses;\n(function (SplitterClasses) {\n  /**\n   * Class name of the root element\n   */\n  SplitterClasses[\"root\"] = \"p-splitter\";\n  /**\n   * Class name of the gutter element\n   */\n  SplitterClasses[\"gutter\"] = \"p-splitter-gutter\";\n  /**\n   * Class name of the gutter handle element\n   */\n  SplitterClasses[\"gutterHandle\"] = \"p-splitter-gutter-handle\";\n})(SplitterClasses || (SplitterClasses = {}));\nclass SplitterPanel extends BaseComponent {\n  splitter = contentChild(forwardRef(() => Splitter));\n  nestedState = computed(() => this.splitter());\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSplitterPanel_BaseFactory;\n    return function SplitterPanel_Factory(__ngFactoryType__) {\n      return (ɵSplitterPanel_BaseFactory || (ɵSplitterPanel_BaseFactory = i0.ɵɵgetInheritedFactory(SplitterPanel)))(__ngFactoryType__ || SplitterPanel);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: SplitterPanel,\n    selectors: [[\"p-splitter-panel\"]],\n    contentQueries: function SplitterPanel_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.splitter, Splitter, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    hostAttrs: [1, \"p-splitterpanel\"],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function SplitterPanel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterPanel, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter-panel',\n      standalone: true,\n      imports: [CommonModule],\n      template: `<ng-content></ng-content>`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'p-splitterpanel'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Splitter is utilized to separate and resize panels.\n * @group Components\n */\nclass Splitter extends BaseComponent {\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Style class of the panel.\n   * @group Props\n   */\n  panelStyleClass;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Inline style of the panel.\n   * @group Props\n   */\n  panelStyle;\n  /**\n   * Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage.\n   * @group Props\n   */\n  stateStorage = 'session';\n  /**\n   * Storage identifier of a stateful Splitter.\n   * @group Props\n   */\n  stateKey = null;\n  /**\n   * Orientation of the panels. Valid values are 'horizontal' and 'vertical'.\n   * @group Props\n   */\n  layout = 'horizontal';\n  /**\n   * Size of the divider in pixels.\n   * @group Props\n   */\n  gutterSize = 4;\n  /**\n   * Step factor to increment/decrement the size of the panels while pressing the arrow keys.\n   * @group Props\n   */\n  step = 5;\n  /**\n   * Minimum size of the elements relative to 100%.\n   * @group Props\n   */\n  minSizes = [];\n  /**\n   * Size of the elements relative to 100%.\n   * @group Props\n   */\n  get panelSizes() {\n    return this._panelSizes;\n  }\n  set panelSizes(val) {\n    this._panelSizes = val;\n    if (this.el && this.el.nativeElement && this.panels.length > 0) {\n      let children = [...this.el.nativeElement.children[0].children].filter(child => hasClass(child, 'p-splitterpanel'));\n      let _panelSizes = [];\n      this.panels.map((panel, i) => {\n        let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n        let panelSize = panelInitialSize || 100 / this.panels.length;\n        _panelSizes[i] = panelSize;\n        children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n    }\n  }\n  /**\n   * Callback to invoke when resize ends.\n   * @param {SplitterResizeEndEvent} event - Custom panel resize end event\n   * @group Emits\n   */\n  onResizeEnd = new EventEmitter();\n  /**\n   * Callback to invoke when resize starts.\n   * @param {SplitterResizeStartEvent} event - Custom panel resize start event\n   * @group Emits\n   */\n  onResizeStart = new EventEmitter();\n  containerViewChild;\n  templates;\n  panelChildren;\n  nested = false;\n  panels = [];\n  dragging = false;\n  mouseMoveListener;\n  mouseUpListener;\n  touchMoveListener;\n  touchEndListener;\n  size;\n  gutterElement;\n  startPos;\n  prevPanelElement;\n  nextPanelElement;\n  nextPanelSize;\n  prevPanelSize;\n  _panelSizes = [];\n  prevPanelIndex;\n  timer;\n  prevSize;\n  _componentStyle = inject(SplitterStyle);\n  ngOnInit() {\n    super.ngOnInit();\n    this.nested = this.isNested();\n  }\n  ngAfterContentInit() {\n    if (this.templates && this.templates.toArray().length > 0) {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'panel':\n            this.panels.push(item.template);\n            break;\n          default:\n            this.panels.push(item.template);\n            break;\n        }\n      });\n    }\n    if (this.panelChildren && this.panelChildren.toArray().length > 0) {\n      this.panelChildren.forEach(item => {\n        this.panels.push(item);\n      });\n    }\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.panels && this.panels.length) {\n        let initialized = false;\n        if (this.isStateful()) {\n          initialized = this.restoreState();\n        }\n        if (!initialized) {\n          let children = [...this.el.nativeElement.children[0].children].filter(child => hasClass(child, 'p-splitterpanel'));\n          let _panelSizes = [];\n          this.panels.map((panel, i) => {\n            let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n            let panelSize = panelInitialSize || 100 / this.panels.length;\n            _panelSizes[i] = panelSize;\n            children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n          });\n          this._panelSizes = _panelSizes;\n          this.prevSize = parseFloat(_panelSizes[0]).toFixed(4);\n        }\n      }\n    }\n  }\n  resizeStart(event, index, isKeyDown) {\n    this.gutterElement = event.currentTarget || event.target.parentElement;\n    this.size = this.horizontal() ? getWidth(this.containerViewChild.nativeElement) : getHeight(this.containerViewChild.nativeElement);\n    if (!isKeyDown) {\n      this.dragging = true;\n      this.startPos = this.horizontal() ? event instanceof MouseEvent ? event.pageX : event.changedTouches[0].pageX : event instanceof MouseEvent ? event.pageY : event.changedTouches[0].pageY;\n    }\n    this.prevPanelElement = this.gutterElement.previousElementSibling;\n    this.nextPanelElement = this.gutterElement.nextElementSibling;\n    if (isKeyDown) {\n      this.prevPanelSize = this.horizontal() ? getOuterWidth(this.prevPanelElement, true) : getOuterHeight(this.prevPanelElement, true);\n      this.nextPanelSize = this.horizontal() ? getOuterWidth(this.nextPanelElement, true) : getOuterHeight(this.nextPanelElement, true);\n    } else {\n      this.prevPanelSize = 100 * (this.horizontal() ? getOuterWidth(this.prevPanelElement, true) : getOuterHeight(this.prevPanelElement, true)) / this.size;\n      this.nextPanelSize = 100 * (this.horizontal() ? getOuterWidth(this.nextPanelElement, true) : getOuterHeight(this.nextPanelElement, true)) / this.size;\n    }\n    this.prevPanelIndex = index;\n    addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    this.gutterElement.setAttribute('data-p-gutter-resizing', 'true');\n    addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.containerViewChild.nativeElement.setAttribute('data-p-resizing', 'true');\n    this.onResizeStart.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n  }\n  onResize(event, step, isKeyDown) {\n    let newPos, newPrevPanelSize, newNextPanelSize;\n    if (isKeyDown) {\n      if (this.horizontal()) {\n        newPrevPanelSize = 100 * (this.prevPanelSize + step) / this.size;\n        newNextPanelSize = 100 * (this.nextPanelSize - step) / this.size;\n      } else {\n        newPrevPanelSize = 100 * (this.prevPanelSize - step) / this.size;\n        newNextPanelSize = 100 * (this.nextPanelSize + step) / this.size;\n      }\n    } else {\n      if (this.horizontal()) {\n        if (isRTL(this.el.nativeElement)) {\n          newPos = (this.startPos - event.pageX) * 100 / this.size;\n        } else {\n          newPos = (event.pageX - this.startPos) * 100 / this.size;\n        }\n      } else {\n        newPos = (event.pageY - this.startPos) * 100 / this.size;\n      }\n      newPrevPanelSize = this.prevPanelSize + newPos;\n      newNextPanelSize = this.nextPanelSize - newPos;\n    }\n    this.prevSize = parseFloat(newPrevPanelSize).toFixed(4);\n    if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n      this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n      this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n    }\n  }\n  resizeEnd(event) {\n    if (this.isStateful()) {\n      this.saveState();\n    }\n    this.onResizeEnd.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n    removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n    this.clear();\n  }\n  onGutterMouseDown(event, index) {\n    this.resizeStart(event, index);\n    this.bindMouseListeners();\n  }\n  onGutterTouchStart(event, index) {\n    if (event.cancelable) {\n      this.resizeStart(event, index);\n      this.bindTouchListeners();\n      event.preventDefault();\n    }\n  }\n  onGutterTouchMove(event) {\n    this.onResize(event);\n    event.preventDefault();\n  }\n  onGutterTouchEnd(event) {\n    this.resizeEnd(event);\n    this.unbindTouchListeners();\n    if (event.cancelable) event.preventDefault();\n  }\n  repeat(event, index, step) {\n    this.resizeStart(event, index, true);\n    this.onResize(event, step, true);\n  }\n  setTimer(event, index, step) {\n    this.clearTimer();\n    this.timer = setTimeout(() => {\n      this.repeat(event, index, step);\n    }, 40);\n  }\n  clearTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n  onGutterKeyUp(event) {\n    this.clearTimer();\n    this.resizeEnd(event);\n  }\n  onGutterKeyDown(event, index) {\n    switch (event.code) {\n      case 'ArrowLeft':\n        {\n          if (this.layout === 'horizontal') {\n            this.setTimer(event, index, this.step * -1);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowRight':\n        {\n          if (this.layout === 'horizontal') {\n            this.setTimer(event, index, this.step);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowDown':\n        {\n          if (this.layout === 'vertical') {\n            this.setTimer(event, index, this.step * -1);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (this.layout === 'vertical') {\n            this.setTimer(event, index, this.step);\n          }\n          event.preventDefault();\n          break;\n        }\n      default:\n        //no op\n        break;\n    }\n  }\n  validateResize(newPrevPanelSize, newNextPanelSize) {\n    if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n      return false;\n    }\n    if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n      return false;\n    }\n    return true;\n  }\n  bindMouseListeners() {\n    if (!this.mouseMoveListener) {\n      this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', event => {\n        this.onResize(event);\n      });\n    }\n    if (!this.mouseUpListener) {\n      this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', event => {\n        this.resizeEnd(event);\n        this.unbindMouseListeners();\n      });\n    }\n  }\n  bindTouchListeners() {\n    if (!this.touchMoveListener) {\n      this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', event => {\n        this.onResize(event.changedTouches[0]);\n      });\n    }\n    if (!this.touchEndListener) {\n      this.touchEndListener = this.renderer.listen(this.document, 'touchend', event => {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n      });\n    }\n  }\n  unbindMouseListeners() {\n    if (this.mouseMoveListener) {\n      this.mouseMoveListener();\n      this.mouseMoveListener = null;\n    }\n    if (this.mouseUpListener) {\n      this.mouseUpListener();\n      this.mouseUpListener = null;\n    }\n  }\n  unbindTouchListeners() {\n    if (this.touchMoveListener) {\n      this.touchMoveListener();\n      this.touchMoveListener = null;\n    }\n    if (this.touchEndListener) {\n      this.touchEndListener();\n      this.touchEndListener = null;\n    }\n  }\n  clear() {\n    this.dragging = false;\n    this.size = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.prevPanelSize = null;\n    this.nextPanelSize = null;\n    this.gutterElement = null;\n    this.prevPanelIndex = null;\n  }\n  isNested() {\n    if (this.el.nativeElement) {\n      let parent = this.el.nativeElement.parentElement;\n      while (parent && !hasClass(parent, 'p-splitter')) {\n        parent = parent.parentElement;\n      }\n      return parent !== null;\n    } else {\n      return false;\n    }\n  }\n  isStateful() {\n    return this.stateKey != null;\n  }\n  getStorage() {\n    if (isPlatformBrowser(this.platformId)) {\n      switch (this.stateStorage) {\n        case 'local':\n          return this.document.defaultView.localStorage;\n        case 'session':\n          return this.document.defaultView.sessionStorage;\n        default:\n          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    } else {\n      throw new Error('Storage is not a available by default on the server.');\n    }\n  }\n  saveState() {\n    this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n  }\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage.getItem(this.stateKey);\n    if (stateString) {\n      this._panelSizes = JSON.parse(stateString);\n      let children = [...this.containerViewChild.nativeElement.children].filter(child => hasClass(child, 'p-splitterpanel'));\n      children.forEach((child, i) => {\n        child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n      return true;\n    }\n    return false;\n  }\n  containerClass() {\n    return {\n      'p-splitter p-component': true,\n      'p-splitter-horizontal': this.layout === 'horizontal',\n      'p-splitter-vertical': this.layout === 'vertical'\n    };\n  }\n  panelContainerClass() {\n    return {\n      'p-splitterpanel': true,\n      'p-splitterpanel-nested': true\n    };\n  }\n  gutterStyle() {\n    if (this.horizontal()) return {\n      width: this.gutterSize + 'px'\n    };else return {\n      height: this.gutterSize + 'px'\n    };\n  }\n  horizontal() {\n    return this.layout === 'horizontal';\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSplitter_BaseFactory;\n    return function Splitter_Factory(__ngFactoryType__) {\n      return (ɵSplitter_BaseFactory || (ɵSplitter_BaseFactory = i0.ɵɵgetInheritedFactory(Splitter)))(__ngFactoryType__ || Splitter);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Splitter,\n    selectors: [[\"p-splitter\"]],\n    contentQueries: function Splitter_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panelChildren = _t);\n      }\n    },\n    viewQuery: function Splitter_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function Splitter_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-splitterpanel-nested\", ctx.nested);\n      }\n    },\n    inputs: {\n      styleClass: \"styleClass\",\n      panelStyleClass: \"panelStyleClass\",\n      style: \"style\",\n      panelStyle: \"panelStyle\",\n      stateStorage: \"stateStorage\",\n      stateKey: \"stateKey\",\n      layout: \"layout\",\n      gutterSize: [2, \"gutterSize\", \"gutterSize\", numberAttribute],\n      step: [2, \"step\", \"step\", numberAttribute],\n      minSizes: \"minSizes\",\n      panelSizes: \"panelSizes\"\n    },\n    outputs: {\n      onResizeEnd: \"onResizeEnd\",\n      onResizeStart: \"onResizeStart\"\n    },\n    features: [i0.ɵɵProvidersFeature([SplitterStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 12,\n    consts: [[\"container\", \"\"], [3, \"ngClass\", \"ngStyle\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"tabindex\", \"-1\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-splitter-gutter\", \"role\", \"separator\", \"tabindex\", \"-1\", 3, \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", 4, \"ngIf\"], [\"role\", \"separator\", \"tabindex\", \"-1\", 1, \"p-splitter-gutter\", 3, \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\"], [\"tabindex\", \"0\", 1, \"p-splitter-gutter-handle\", 3, \"keyup\", \"keydown\", \"ngStyle\"]],\n    template: function Splitter_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 1, 0);\n        i0.ɵɵtemplate(2, Splitter_ng_template_2_Template, 3, 8, \"ng-template\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction1(10, _c3, ctx.layout === \"vertical\" ? \"column\" : \"\"));\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", ctx.containerClass())(\"ngStyle\", ctx.style);\n        i0.ɵɵattribute(\"data-pc-name\", \"splitter\")(\"data-p-gutter-resizing\", false)(\"data-pc-section\", \"root\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      template: `\n        <div\n            #container\n            [ngClass]=\"containerClass()\"\n            [class]=\"styleClass\"\n            [ngStyle]=\"style\"\n            [style]=\"{ display: 'flex', 'flex-wrap': 'nowrap', 'flex-direction': layout === 'vertical' ? 'column' : '' }\"\n            [attr.data-pc-name]=\"'splitter'\"\n            [attr.data-p-gutter-resizing]=\"false\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <ng-template ngFor let-panel [ngForOf]=\"panels\" let-i=\"index\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" tabindex=\"-1\" [attr.data-pc-name]=\"'splitter'\" [attr.data-pc-section]=\"'root'\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div\n                    *ngIf=\"i !== panels.length - 1\"\n                    class=\"p-splitter-gutter\"\n                    role=\"separator\"\n                    tabindex=\"-1\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\"\n                    (touchstart)=\"onGutterTouchStart($event, i)\"\n                    (touchmove)=\"onGutterTouchMove($event)\"\n                    (touchend)=\"onGutterTouchEnd($event)\"\n                    [attr.data-p-gutter-resizing]=\"false\"\n                    [attr.data-pc-section]=\"'gutter'\"\n                >\n                    <div\n                        class=\"p-splitter-gutter-handle\"\n                        tabindex=\"0\"\n                        [ngStyle]=\"gutterStyle()\"\n                        [attr.aria-orientation]=\"layout\"\n                        [attr.aria-valuenow]=\"prevSize\"\n                        [attr.data-pc-section]=\"'gutterhandle'\"\n                        (keyup)=\"onGutterKeyUp($event)\"\n                        (keydown)=\"onGutterKeyDown($event, i)\"\n                    ></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.p-splitterpanel-nested]': 'nested'\n      },\n      providers: [SplitterStyle]\n    }]\n  }], null, {\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    step: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    panelSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    onResizeStart: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container', {\n        static: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    panelChildren: [{\n      type: ContentChildren,\n      args: ['panel', {\n        descendants: false\n      }]\n    }]\n  });\n})();\nclass SplitterModule {\n  static ɵfac = function SplitterModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SplitterModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SplitterModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Splitter, SplitterPanel, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Splitter, SplitterPanel, SharedModule],\n      exports: [Splitter, SplitterPanel, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterClasses, SplitterModule, SplitterPanel, SplitterStyle };","map":{"version":3,"names":["i1","CommonModule","isPlatformBrowser","i0","Injectable","contentChild","forwardRef","computed","ChangeDetectionStrategy","Component","EventEmitter","inject","numberAttribute","ContentChildren","ViewChild","Output","Input","ViewEncapsulation","NgModule","hasClass","getWidth","getHeight","getOuterWidth","getOuterHeight","addClass","isRTL","removeClass","SharedModule","PrimeTemplate","BaseComponent","BaseStyle","_c0","_c1","_c2","_c3","a0","display","Splitter_ng_template_2_ng_container_1_Template","rf","ctx","ɵɵelementContainer","Splitter_ng_template_2_div_2_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","Splitter_ng_template_2_div_2_Template_div_mousedown_0_listener","$event","ɵɵrestoreView","i_r2","ɵɵnextContext","index","ctx_r2","ɵɵresetView","onGutterMouseDown","Splitter_ng_template_2_div_2_Template_div_touchstart_0_listener","onGutterTouchStart","Splitter_ng_template_2_div_2_Template_div_touchmove_0_listener","onGutterTouchMove","Splitter_ng_template_2_div_2_Template_div_touchend_0_listener","onGutterTouchEnd","Splitter_ng_template_2_div_2_Template_div_keyup_1_listener","onGutterKeyUp","Splitter_ng_template_2_div_2_Template_div_keydown_1_listener","onGutterKeyDown","ɵɵelementEnd","ɵɵattribute","ɵɵadvance","ɵɵproperty","gutterStyle","layout","prevSize","Splitter_ng_template_2_Template","ɵɵtemplate","panel_r4","$implicit","ɵɵclassMap","panelStyleClass","panelContainerClass","panelStyle","panels","length","theme","dt","classes","root","props","gutter","gutterHandle","SplitterStyle","name","ɵfac","ɵSplitterStyle_BaseFactory","SplitterStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","SplitterClasses","SplitterPanel","splitter","Splitter","nestedState","ɵSplitterPanel_BaseFactory","SplitterPanel_Factory","ɵcmp","ɵɵdefineComponent","selectors","contentQueries","SplitterPanel_ContentQueries","dirIndex","ɵɵcontentQuerySignal","ɵɵqueryAdvance","hostAttrs","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","SplitterPanel_Template","ɵɵprojectionDef","ɵɵprojection","dependencies","encapsulation","changeDetection","args","selector","standalone","imports","OnPush","host","class","styleClass","style","stateStorage","stateKey","gutterSize","step","minSizes","panelSizes","_panelSizes","val","el","nativeElement","children","filter","child","map","panel","i","panelInitialSize","panelSize","flexBasis","onResizeEnd","onResizeStart","containerViewChild","templates","panelChildren","nested","dragging","mouseMoveListener","mouseUpListener","touchMoveListener","touchEndListener","size","gutterElement","startPos","prevPanelElement","nextPanelElement","nextPanelSize","prevPanelSize","prevPanelIndex","timer","_componentStyle","ngOnInit","isNested","ngAfterContentInit","toArray","forEach","item","getType","push","ngAfterViewInit","platformId","initialized","isStateful","restoreState","parseFloat","toFixed","resizeStart","event","isKeyDown","currentTarget","target","parentElement","horizontal","MouseEvent","pageX","changedTouches","pageY","previousElementSibling","nextElementSibling","setAttribute","emit","originalEvent","sizes","onResize","newPos","newPrevPanelSize","newNextPanelSize","validateResize","resizeEnd","saveState","clear","bindMouseListeners","cancelable","bindTouchListeners","preventDefault","unbindTouchListeners","repeat","setTimer","clearTimer","setTimeout","clearTimeout","code","renderer","listen","document","unbindMouseListeners","parent","getStorage","defaultView","localStorage","sessionStorage","Error","setItem","JSON","stringify","storage","stateString","getItem","parse","containerClass","width","height","ɵSplitter_BaseFactory","Splitter_Factory","Splitter_ContentQueries","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","Splitter_Query","ɵɵviewQuery","first","hostVars","hostBindings","Splitter_HostBindings","ɵɵclassProp","inputs","outputs","ɵɵProvidersFeature","consts","Splitter_Template","ɵɵstyleMap","ɵɵpureFunction1","NgClass","NgForOf","NgIf","NgTemplateOutlet","NgStyle","None","providers","transform","static","descendants","SplitterModule","SplitterModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-splitter.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, contentChild, forwardRef, computed, ChangeDetectionStrategy, Component, EventEmitter, inject, numberAttribute, ContentChildren, ViewChild, Output, Input, ViewEncapsulation, NgModule } from '@angular/core';\nimport { hasClass, getWidth, getHeight, getOuterWidth, getOuterHeight, addClass, isRTL, removeClass } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-splitter {\n    display: flex;\n    flex-wrap: nowrap;\n    border: 1px solid ${dt('splitter.border.color')};\n    background: ${dt('splitter.background')};\n    border-radius: ${dt('border.radius.md')};\n    color: ${dt('splitter.color')};\n}\n\n.p-splitter-vertical {\n    flex-direction: column;\n}\n\n.p-splitter-gutter {\n    flex-grow: 0;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1;\n    background: ${dt('splitter.gutter.background')};\n}\n\n.p-splitter-gutter-handle {\n    border-radius: ${dt('splitter.handle.border.radius')};\n    background: ${dt('splitter.handle.background')};\n    transition: outline-color ${dt('splitter.transition.duration')}, box-shadow ${dt('splitter.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-splitter-gutter-handle:focus-visible {\n    box-shadow: ${dt('splitter.handle.focus.ring.shadow')};\n    outline: ${dt('splitter.handle.focus.ring.width')} ${dt('splitter.handle.focus.ring.style')} ${dt('splitter.handle.focus.ring.color')};\n    outline-offset: ${dt('splitter.handle.focus.ring.offset')};\n}\n\n.p-splitter-horizontal.p-splitter-resizing {\n    cursor: col-resize;\n    user-select: none;\n}\n\n.p-splitter-vertical.p-splitter-resizing {\n    cursor: row-resize;\n    user-select: none;\n}\n\n.p-splitter-horizontal > .p-splitter-gutter > .p-splitter-gutter-handle {\n    height: ${dt('splitter.handle.size')};\n    width: 100%;\n}\n\n.p-splitter-vertical > .p-splitter-gutter > .p-splitter-gutter-handle {\n    width: ${dt('splitter.handle.size')};\n    height: 100%;\n}\n\n.p-splitter-horizontal > .p-splitter-gutter {\n    cursor: col-resize;\n}\n\n.p-splitter-vertical > .p-splitter-gutter {\n    cursor: row-resize;\n}\n\n.p-splitterpanel {\n    flex-grow: 1;\n    overflow: hidden;\n}\n\n.p-splitterpanel-nested {\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n}\n\n.p-splitterpanel .p-splitter {\n    flex-grow: 1;\n    border: 0 none;\n}\n`;\nconst classes = {\n    root: ({ props }) => ['p-splitter p-component', 'p-splitter-' + props.layout],\n    gutter: 'p-splitter-gutter',\n    gutterHandle: 'p-splitter-gutter-handle'\n};\n/*const inlineStyles = {\n    root: ({ props }) => [{ display: 'flex', 'flex-wrap': 'nowrap' }, props.layout === 'vertical' ? { 'flex-direction': 'column' } : '']\n};*/\nclass SplitterStyle extends BaseStyle {\n    name = 'splitter';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Splitter is utilized to separate and resize panels.\n *\n * [Live Demo](https://www.primeng.org/splitter/)\n *\n * @module splitterstyle\n *\n */\nvar SplitterClasses;\n(function (SplitterClasses) {\n    /**\n     * Class name of the root element\n     */\n    SplitterClasses[\"root\"] = \"p-splitter\";\n    /**\n     * Class name of the gutter element\n     */\n    SplitterClasses[\"gutter\"] = \"p-splitter-gutter\";\n    /**\n     * Class name of the gutter handle element\n     */\n    SplitterClasses[\"gutterHandle\"] = \"p-splitter-gutter-handle\";\n})(SplitterClasses || (SplitterClasses = {}));\n\nclass SplitterPanel extends BaseComponent {\n    splitter = contentChild(forwardRef(() => Splitter));\n    nestedState = computed(() => this.splitter());\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterPanel, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.2.0\", version: \"19.2.10\", type: SplitterPanel, isStandalone: true, selector: \"p-splitter-panel\", host: { classAttribute: \"p-splitterpanel\" }, queries: [{ propertyName: \"splitter\", first: true, predicate: i0.forwardRef(() => Splitter), descendants: true, isSignal: true }], usesInheritance: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-splitter-panel',\n                    standalone: true,\n                    imports: [CommonModule],\n                    template: `<ng-content></ng-content>`,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        class: 'p-splitterpanel'\n                    }\n                }]\n        }] });\n/**\n * Splitter is utilized to separate and resize panels.\n * @group Components\n */\nclass Splitter extends BaseComponent {\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the panel.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline style of the panel.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage.\n     * @group Props\n     */\n    stateStorage = 'session';\n    /**\n     * Storage identifier of a stateful Splitter.\n     * @group Props\n     */\n    stateKey = null;\n    /**\n     * Orientation of the panels. Valid values are 'horizontal' and 'vertical'.\n     * @group Props\n     */\n    layout = 'horizontal';\n    /**\n     * Size of the divider in pixels.\n     * @group Props\n     */\n    gutterSize = 4;\n    /**\n     * Step factor to increment/decrement the size of the panels while pressing the arrow keys.\n     * @group Props\n     */\n    step = 5;\n    /**\n     * Minimum size of the elements relative to 100%.\n     * @group Props\n     */\n    minSizes = [];\n    /**\n     * Size of the elements relative to 100%.\n     * @group Props\n     */\n    get panelSizes() {\n        return this._panelSizes;\n    }\n    set panelSizes(val) {\n        this._panelSizes = val;\n        if (this.el && this.el.nativeElement && this.panels.length > 0) {\n            let children = [...this.el.nativeElement.children[0].children].filter((child) => hasClass(child, 'p-splitterpanel'));\n            let _panelSizes = [];\n            this.panels.map((panel, i) => {\n                let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                let panelSize = panelInitialSize || 100 / this.panels.length;\n                _panelSizes[i] = panelSize;\n                children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n        }\n    }\n    /**\n     * Callback to invoke when resize ends.\n     * @param {SplitterResizeEndEvent} event - Custom panel resize end event\n     * @group Emits\n     */\n    onResizeEnd = new EventEmitter();\n    /**\n     * Callback to invoke when resize starts.\n     * @param {SplitterResizeStartEvent} event - Custom panel resize start event\n     * @group Emits\n     */\n    onResizeStart = new EventEmitter();\n    containerViewChild;\n    templates;\n    panelChildren;\n    nested = false;\n    panels = [];\n    dragging = false;\n    mouseMoveListener;\n    mouseUpListener;\n    touchMoveListener;\n    touchEndListener;\n    size;\n    gutterElement;\n    startPos;\n    prevPanelElement;\n    nextPanelElement;\n    nextPanelSize;\n    prevPanelSize;\n    _panelSizes = [];\n    prevPanelIndex;\n    timer;\n    prevSize;\n    _componentStyle = inject(SplitterStyle);\n    ngOnInit() {\n        super.ngOnInit();\n        this.nested = this.isNested();\n    }\n    ngAfterContentInit() {\n        if (this.templates && this.templates.toArray().length > 0) {\n            this.templates.forEach((item) => {\n                switch (item.getType()) {\n                    case 'panel':\n                        this.panels.push(item.template);\n                        break;\n                    default:\n                        this.panels.push(item.template);\n                        break;\n                }\n            });\n        }\n        if (this.panelChildren && this.panelChildren.toArray().length > 0) {\n            this.panelChildren.forEach((item) => {\n                this.panels.push(item);\n            });\n        }\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.panels && this.panels.length) {\n                let initialized = false;\n                if (this.isStateful()) {\n                    initialized = this.restoreState();\n                }\n                if (!initialized) {\n                    let children = [...this.el.nativeElement.children[0].children].filter((child) => hasClass(child, 'p-splitterpanel'));\n                    let _panelSizes = [];\n                    this.panels.map((panel, i) => {\n                        let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n                        let panelSize = panelInitialSize || 100 / this.panels.length;\n                        _panelSizes[i] = panelSize;\n                        children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n                    });\n                    this._panelSizes = _panelSizes;\n                    this.prevSize = parseFloat(_panelSizes[0]).toFixed(4);\n                }\n            }\n        }\n    }\n    resizeStart(event, index, isKeyDown) {\n        this.gutterElement = event.currentTarget || event.target.parentElement;\n        this.size = this.horizontal() ? getWidth(this.containerViewChild.nativeElement) : getHeight(this.containerViewChild.nativeElement);\n        if (!isKeyDown) {\n            this.dragging = true;\n            this.startPos = this.horizontal() ? (event instanceof MouseEvent ? event.pageX : event.changedTouches[0].pageX) : event instanceof MouseEvent ? event.pageY : event.changedTouches[0].pageY;\n        }\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\n        if (isKeyDown) {\n            this.prevPanelSize = this.horizontal() ? getOuterWidth(this.prevPanelElement, true) : getOuterHeight(this.prevPanelElement, true);\n            this.nextPanelSize = this.horizontal() ? getOuterWidth(this.nextPanelElement, true) : getOuterHeight(this.nextPanelElement, true);\n        }\n        else {\n            this.prevPanelSize = (100 * (this.horizontal() ? getOuterWidth(this.prevPanelElement, true) : getOuterHeight(this.prevPanelElement, true))) / this.size;\n            this.nextPanelSize = (100 * (this.horizontal() ? getOuterWidth(this.nextPanelElement, true) : getOuterHeight(this.nextPanelElement, true))) / this.size;\n        }\n        this.prevPanelIndex = index;\n        addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        this.gutterElement.setAttribute('data-p-gutter-resizing', 'true');\n        addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.containerViewChild.nativeElement.setAttribute('data-p-resizing', 'true');\n        this.onResizeStart.emit({ originalEvent: event, sizes: this._panelSizes });\n    }\n    onResize(event, step, isKeyDown) {\n        let newPos, newPrevPanelSize, newNextPanelSize;\n        if (isKeyDown) {\n            if (this.horizontal()) {\n                newPrevPanelSize = (100 * (this.prevPanelSize + step)) / this.size;\n                newNextPanelSize = (100 * (this.nextPanelSize - step)) / this.size;\n            }\n            else {\n                newPrevPanelSize = (100 * (this.prevPanelSize - step)) / this.size;\n                newNextPanelSize = (100 * (this.nextPanelSize + step)) / this.size;\n            }\n        }\n        else {\n            if (this.horizontal()) {\n                if (isRTL(this.el.nativeElement)) {\n                    newPos = ((this.startPos - event.pageX) * 100) / this.size;\n                }\n                else {\n                    newPos = ((event.pageX - this.startPos) * 100) / this.size;\n                }\n            }\n            else {\n                newPos = ((event.pageY - this.startPos) * 100) / this.size;\n            }\n            newPrevPanelSize = this.prevPanelSize + newPos;\n            newNextPanelSize = this.nextPanelSize - newPos;\n        }\n        this.prevSize = parseFloat(newPrevPanelSize).toFixed(4);\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n        }\n    }\n    resizeEnd(event) {\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.onResizeEnd.emit({ originalEvent: event, sizes: this._panelSizes });\n        removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n        removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\n        this.clear();\n    }\n    onGutterMouseDown(event, index) {\n        this.resizeStart(event, index);\n        this.bindMouseListeners();\n    }\n    onGutterTouchStart(event, index) {\n        if (event.cancelable) {\n            this.resizeStart(event, index);\n            this.bindTouchListeners();\n            event.preventDefault();\n        }\n    }\n    onGutterTouchMove(event) {\n        this.onResize(event);\n        event.preventDefault();\n    }\n    onGutterTouchEnd(event) {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n        if (event.cancelable)\n            event.preventDefault();\n    }\n    repeat(event, index, step) {\n        this.resizeStart(event, index, true);\n        this.onResize(event, step, true);\n    }\n    setTimer(event, index, step) {\n        this.clearTimer();\n        this.timer = setTimeout(() => {\n            this.repeat(event, index, step);\n        }, 40);\n    }\n    clearTimer() {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    }\n    onGutterKeyUp(event) {\n        this.clearTimer();\n        this.resizeEnd(event);\n    }\n    onGutterKeyDown(event, index) {\n        switch (event.code) {\n            case 'ArrowLeft': {\n                if (this.layout === 'horizontal') {\n                    this.setTimer(event, index, this.step * -1);\n                }\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowRight': {\n                if (this.layout === 'horizontal') {\n                    this.setTimer(event, index, this.step);\n                }\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowDown': {\n                if (this.layout === 'vertical') {\n                    this.setTimer(event, index, this.step * -1);\n                }\n                event.preventDefault();\n                break;\n            }\n            case 'ArrowUp': {\n                if (this.layout === 'vertical') {\n                    this.setTimer(event, index, this.step);\n                }\n                event.preventDefault();\n                break;\n            }\n            default:\n                //no op\n                break;\n        }\n    }\n    validateResize(newPrevPanelSize, newNextPanelSize) {\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n            return false;\n        }\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n            return false;\n        }\n        return true;\n    }\n    bindMouseListeners() {\n        if (!this.mouseMoveListener) {\n            this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', (event) => {\n                this.onResize(event);\n            });\n        }\n        if (!this.mouseUpListener) {\n            this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', (event) => {\n                this.resizeEnd(event);\n                this.unbindMouseListeners();\n            });\n        }\n    }\n    bindTouchListeners() {\n        if (!this.touchMoveListener) {\n            this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', (event) => {\n                this.onResize(event.changedTouches[0]);\n            });\n        }\n        if (!this.touchEndListener) {\n            this.touchEndListener = this.renderer.listen(this.document, 'touchend', (event) => {\n                this.resizeEnd(event);\n                this.unbindTouchListeners();\n            });\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseMoveListener) {\n            this.mouseMoveListener();\n            this.mouseMoveListener = null;\n        }\n        if (this.mouseUpListener) {\n            this.mouseUpListener();\n            this.mouseUpListener = null;\n        }\n    }\n    unbindTouchListeners() {\n        if (this.touchMoveListener) {\n            this.touchMoveListener();\n            this.touchMoveListener = null;\n        }\n        if (this.touchEndListener) {\n            this.touchEndListener();\n            this.touchEndListener = null;\n        }\n    }\n    clear() {\n        this.dragging = false;\n        this.size = null;\n        this.startPos = null;\n        this.prevPanelElement = null;\n        this.nextPanelElement = null;\n        this.prevPanelSize = null;\n        this.nextPanelSize = null;\n        this.gutterElement = null;\n        this.prevPanelIndex = null;\n    }\n    isNested() {\n        if (this.el.nativeElement) {\n            let parent = this.el.nativeElement.parentElement;\n            while (parent && !hasClass(parent, 'p-splitter')) {\n                parent = parent.parentElement;\n            }\n            return parent !== null;\n        }\n        else {\n            return false;\n        }\n    }\n    isStateful() {\n        return this.stateKey != null;\n    }\n    getStorage() {\n        if (isPlatformBrowser(this.platformId)) {\n            switch (this.stateStorage) {\n                case 'local':\n                    return this.document.defaultView.localStorage;\n                case 'session':\n                    return this.document.defaultView.sessionStorage;\n                default:\n                    throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n            }\n        }\n        else {\n            throw new Error('Storage is not a available by default on the server.');\n        }\n    }\n    saveState() {\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\n    }\n    restoreState() {\n        const storage = this.getStorage();\n        const stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            this._panelSizes = JSON.parse(stateString);\n            let children = [...this.containerViewChild.nativeElement.children].filter((child) => hasClass(child, 'p-splitterpanel'));\n            children.forEach((child, i) => {\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n            });\n            return true;\n        }\n        return false;\n    }\n    containerClass() {\n        return {\n            'p-splitter p-component': true,\n            'p-splitter-horizontal': this.layout === 'horizontal',\n            'p-splitter-vertical': this.layout === 'vertical'\n        };\n    }\n    panelContainerClass() {\n        return {\n            'p-splitterpanel': true,\n            'p-splitterpanel-nested': true\n        };\n    }\n    gutterStyle() {\n        if (this.horizontal())\n            return { width: this.gutterSize + 'px' };\n        else\n            return { height: this.gutterSize + 'px' };\n    }\n    horizontal() {\n        return this.layout === 'horizontal';\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Splitter, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: Splitter, isStandalone: true, selector: \"p-splitter\", inputs: { styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", style: \"style\", panelStyle: \"panelStyle\", stateStorage: \"stateStorage\", stateKey: \"stateKey\", layout: \"layout\", gutterSize: [\"gutterSize\", \"gutterSize\", numberAttribute], step: [\"step\", \"step\", numberAttribute], minSizes: \"minSizes\", panelSizes: \"panelSizes\" }, outputs: { onResizeEnd: \"onResizeEnd\", onResizeStart: \"onResizeStart\" }, host: { properties: { \"class.p-splitterpanel-nested\": \"nested\" } }, providers: [SplitterStyle], queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }, { propertyName: \"panelChildren\", predicate: [\"panel\"] }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n        <div\n            #container\n            [ngClass]=\"containerClass()\"\n            [class]=\"styleClass\"\n            [ngStyle]=\"style\"\n            [style]=\"{ display: 'flex', 'flex-wrap': 'nowrap', 'flex-direction': layout === 'vertical' ? 'column' : '' }\"\n            [attr.data-pc-name]=\"'splitter'\"\n            [attr.data-p-gutter-resizing]=\"false\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <ng-template ngFor let-panel [ngForOf]=\"panels\" let-i=\"index\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" tabindex=\"-1\" [attr.data-pc-name]=\"'splitter'\" [attr.data-pc-section]=\"'root'\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div\n                    *ngIf=\"i !== panels.length - 1\"\n                    class=\"p-splitter-gutter\"\n                    role=\"separator\"\n                    tabindex=\"-1\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\"\n                    (touchstart)=\"onGutterTouchStart($event, i)\"\n                    (touchmove)=\"onGutterTouchMove($event)\"\n                    (touchend)=\"onGutterTouchEnd($event)\"\n                    [attr.data-p-gutter-resizing]=\"false\"\n                    [attr.data-pc-section]=\"'gutter'\"\n                >\n                    <div\n                        class=\"p-splitter-gutter-handle\"\n                        tabindex=\"0\"\n                        [ngStyle]=\"gutterStyle()\"\n                        [attr.aria-orientation]=\"layout\"\n                        [attr.aria-valuenow]=\"prevSize\"\n                        [attr.data-pc-section]=\"'gutterhandle'\"\n                        (keyup)=\"onGutterKeyUp($event)\"\n                        (keydown)=\"onGutterKeyDown($event, i)\"\n                    ></div>\n                </div>\n            </ng-template>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Splitter, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-splitter',\n                    standalone: true,\n                    imports: [CommonModule, SharedModule],\n                    template: `\n        <div\n            #container\n            [ngClass]=\"containerClass()\"\n            [class]=\"styleClass\"\n            [ngStyle]=\"style\"\n            [style]=\"{ display: 'flex', 'flex-wrap': 'nowrap', 'flex-direction': layout === 'vertical' ? 'column' : '' }\"\n            [attr.data-pc-name]=\"'splitter'\"\n            [attr.data-p-gutter-resizing]=\"false\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <ng-template ngFor let-panel [ngForOf]=\"panels\" let-i=\"index\">\n                <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" tabindex=\"-1\" [attr.data-pc-name]=\"'splitter'\" [attr.data-pc-section]=\"'root'\">\n                    <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n                </div>\n                <div\n                    *ngIf=\"i !== panels.length - 1\"\n                    class=\"p-splitter-gutter\"\n                    role=\"separator\"\n                    tabindex=\"-1\"\n                    (mousedown)=\"onGutterMouseDown($event, i)\"\n                    (touchstart)=\"onGutterTouchStart($event, i)\"\n                    (touchmove)=\"onGutterTouchMove($event)\"\n                    (touchend)=\"onGutterTouchEnd($event)\"\n                    [attr.data-p-gutter-resizing]=\"false\"\n                    [attr.data-pc-section]=\"'gutter'\"\n                >\n                    <div\n                        class=\"p-splitter-gutter-handle\"\n                        tabindex=\"0\"\n                        [ngStyle]=\"gutterStyle()\"\n                        [attr.aria-orientation]=\"layout\"\n                        [attr.aria-valuenow]=\"prevSize\"\n                        [attr.data-pc-section]=\"'gutterhandle'\"\n                        (keyup)=\"onGutterKeyUp($event)\"\n                        (keydown)=\"onGutterKeyDown($event, i)\"\n                    ></div>\n                </div>\n            </ng-template>\n        </div>\n    `,\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        '[class.p-splitterpanel-nested]': 'nested'\n                    },\n                    providers: [SplitterStyle]\n                }]\n        }], propDecorators: { styleClass: [{\n                type: Input\n            }], panelStyleClass: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], panelStyle: [{\n                type: Input\n            }], stateStorage: [{\n                type: Input\n            }], stateKey: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], step: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], minSizes: [{\n                type: Input\n            }], panelSizes: [{\n                type: Input\n            }], onResizeEnd: [{\n                type: Output\n            }], onResizeStart: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container', { static: false }]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], panelChildren: [{\n                type: ContentChildren,\n                args: ['panel', { descendants: false }]\n            }] } });\nclass SplitterModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterModule, imports: [Splitter, SplitterPanel, SharedModule], exports: [Splitter, SplitterPanel, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterModule, imports: [Splitter, SplitterPanel, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SplitterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Splitter, SplitterPanel, SharedModule],\n                    exports: [Splitter, SplitterPanel, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterClasses, SplitterModule, SplitterPanel, SplitterStyle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}