{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { computed, effect, inject, PLATFORM_ID, signal } from '@angular/core';\nimport { $t, updatePreset, updateSurfacePalette } from '@primeng/themes';\nimport Aura from '@primeng/themes/aura';\nimport Lara from '@primeng/themes/lara';\nimport Material from '@primeng/themes/material';\nimport Nora from '@primeng/themes/nora';\nimport { PrimeNG } from 'primeng/config';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { StyleClassModule } from 'primeng/styleclass';\nimport { ToggleSwitchModule } from 'primeng/toggleswitch';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"primeng/styleclass\";\nimport * as i4 from \"primeng/selectbutton\";\nimport * as i5 from \"primeng/toggleswitch\";\nconst _c0 = (a0, a1) => ({\n  \"background-color\": a0,\n  \"outline-color\": a1\n});\nconst _forTrack0 = ($index, $item) => $item.name;\nfunction ThemeSwitcher_For_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ThemeSwitcher_For_14_Template_button_click_0_listener($event) {\n      const primaryColor_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateColors($event, \"primary\", primaryColor_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const primaryColor_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", primaryColor_r2.name)(\"ngStyle\", i0.ɵɵpureFunction2(2, _c0, primaryColor_r2.name === \"noir\" ? \"var(--text-color)\" : primaryColor_r2.palette[\"500\"], ctx_r2.selectedPrimaryColor() === primaryColor_r2.name ? \"var(--p-primary-color)\" : \"\"));\n  }\n}\nfunction ThemeSwitcher_For_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ThemeSwitcher_For_20_Template_button_click_0_listener($event) {\n      const surface_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateColors($event, \"surface\", surface_r5));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const surface_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"title\", surface_r5.name)(\"ngStyle\", i0.ɵɵpureFunction2(2, _c0, surface_r5.palette[\"500\"], ctx_r2.selectedSurfaceColor() === surface_r5.name ? \"var(--p-primary-color)\" : \"\"));\n  }\n}\nconst presets = {\n  Aura,\n  Material,\n  Lara,\n  Nora\n};\nexport class ThemeSwitcher {\n  STORAGE_KEY = 'themeSwitcherState';\n  document = inject(DOCUMENT);\n  iconClass = computed(() => this.themeState().darkTheme ? 'pi-sun' : 'pi-moon');\n  presets = Object.keys(presets);\n  platformId = inject(PLATFORM_ID);\n  config = inject(PrimeNG);\n  themeState = signal(null);\n  theme = computed(() => this.themeState()?.darkTheme ? 'dark' : 'light');\n  selectedPreset = computed(() => this.themeState().preset);\n  selectedSurfaceColor = computed(() => this.themeState().surface);\n  selectedPrimaryColor = computed(() => {\n    return this.themeState().primary;\n  });\n  constructor() {\n    this.themeState.set({\n      ...this.loadthemeState()\n    });\n    effect(() => {\n      const state = this.themeState();\n      this.savethemeState(state);\n      this.handleDarkModeTransition(state);\n    });\n  }\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onPresetChange(this.themeState().preset);\n    }\n  }\n  get ripple() {\n    return this.config.ripple();\n  }\n  set ripple(value) {\n    this.config.ripple.set(value);\n  }\n  transitionComplete = signal(false);\n  primaryColors = computed(() => {\n    const presetPalette = presets[this.themeState().preset].primitive;\n    const colors = ['emerald', 'green', 'lime', 'orange', 'amber', 'yellow', 'teal', 'cyan', 'sky', 'blue', 'indigo', 'violet', 'purple', 'fuchsia', 'pink', 'rose'];\n    const palettes = [{\n      name: 'noir',\n      palette: {}\n    }];\n    colors.forEach(color => {\n      palettes.push({\n        name: color,\n        palette: presetPalette[color]\n      });\n    });\n    return palettes;\n  });\n  surfaces = [{\n    name: 'slate',\n    palette: {\n      0: '#ffffff',\n      50: '#f8fafc',\n      100: '#f1f5f9',\n      200: '#e2e8f0',\n      300: '#cbd5e1',\n      400: '#94a3b8',\n      500: '#64748b',\n      600: '#475569',\n      700: '#334155',\n      800: '#1e293b',\n      900: '#0f172a',\n      950: '#020617'\n    }\n  }, {\n    name: 'gray',\n    palette: {\n      0: '#ffffff',\n      50: '#f9fafb',\n      100: '#f3f4f6',\n      200: '#e5e7eb',\n      300: '#d1d5db',\n      400: '#9ca3af',\n      500: '#6b7280',\n      600: '#4b5563',\n      700: '#374151',\n      800: '#1f2937',\n      900: '#111827',\n      950: '#030712'\n    }\n  }, {\n    name: 'zinc',\n    palette: {\n      0: '#ffffff',\n      50: '#fafafa',\n      100: '#f4f4f5',\n      200: '#e4e4e7',\n      300: '#d4d4d8',\n      400: '#a1a1aa',\n      500: '#71717a',\n      600: '#52525b',\n      700: '#3f3f46',\n      800: '#27272a',\n      900: '#18181b',\n      950: '#09090b'\n    }\n  }, {\n    name: 'neutral',\n    palette: {\n      0: '#ffffff',\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#e5e5e5',\n      300: '#d4d4d4',\n      400: '#a3a3a3',\n      500: '#737373',\n      600: '#525252',\n      700: '#404040',\n      800: '#262626',\n      900: '#171717',\n      950: '#0a0a0a'\n    }\n  }, {\n    name: 'stone',\n    palette: {\n      0: '#ffffff',\n      50: '#fafaf9',\n      100: '#f5f5f4',\n      200: '#e7e5e4',\n      300: '#d6d3d1',\n      400: '#a8a29e',\n      500: '#78716c',\n      600: '#57534e',\n      700: '#44403c',\n      800: '#292524',\n      900: '#1c1917',\n      950: '#0c0a09'\n    }\n  }, {\n    name: 'soho',\n    palette: {\n      0: '#ffffff',\n      50: '#ececec',\n      100: '#dedfdf',\n      200: '#c4c4c6',\n      300: '#adaeb0',\n      400: '#97979b',\n      500: '#7f8084',\n      600: '#6a6b70',\n      700: '#55565b',\n      800: '#3f4046',\n      900: '#2c2c34',\n      950: '#16161d'\n    }\n  }, {\n    name: 'viva',\n    palette: {\n      0: '#ffffff',\n      50: '#f3f3f3',\n      100: '#e7e7e8',\n      200: '#cfd0d0',\n      300: '#b7b8b9',\n      400: '#9fa1a1',\n      500: '#87898a',\n      600: '#6e7173',\n      700: '#565a5b',\n      800: '#3e4244',\n      900: '#262b2c',\n      950: '#0e1315'\n    }\n  }, {\n    name: 'ocean',\n    palette: {\n      0: '#ffffff',\n      50: '#fbfcfc',\n      100: '#F7F9F8',\n      200: '#EFF3F2',\n      300: '#DADEDD',\n      400: '#B1B7B6',\n      500: '#828787',\n      600: '#5F7274',\n      700: '#415B61',\n      800: '#29444E',\n      900: '#183240',\n      950: '#0c1920'\n    }\n  }];\n  onThemeToggler() {\n    this.themeState.update(state => ({\n      ...state,\n      darkTheme: !state.darkTheme\n    }));\n  }\n  getPresetExt() {\n    const color = this.primaryColors().find(c => c.name === this.selectedPrimaryColor());\n    if (color.name === 'noir') {\n      return {\n        semantic: {\n          primary: {\n            50: '{surface.50}',\n            100: '{surface.100}',\n            200: '{surface.200}',\n            300: '{surface.300}',\n            400: '{surface.400}',\n            500: '{surface.500}',\n            600: '{surface.600}',\n            700: '{surface.700}',\n            800: '{surface.800}',\n            900: '{surface.900}',\n            950: '{surface.950}'\n          },\n          colorScheme: {\n            light: {\n              primary: {\n                color: '{primary.950}',\n                contrastColor: '#ffffff',\n                hoverColor: '{primary.800}',\n                activeColor: '{primary.700}'\n              },\n              highlight: {\n                background: '{primary.950}',\n                focusBackground: '{primary.700}',\n                color: '#ffffff',\n                focusColor: '#ffffff'\n              }\n            },\n            dark: {\n              primary: {\n                color: '{primary.50}',\n                contrastColor: '{primary.950}',\n                hoverColor: '{primary.200}',\n                activeColor: '{primary.300}'\n              },\n              highlight: {\n                background: '{primary.50}',\n                focusBackground: '{primary.300}',\n                color: '{primary.950}',\n                focusColor: '{primary.950}'\n              }\n            }\n          }\n        }\n      };\n    } else {\n      if (this.themeState().preset === 'Nora') {\n        return {\n          semantic: {\n            primary: color.palette,\n            colorScheme: {\n              light: {\n                primary: {\n                  color: '{primary.600}',\n                  contrastColor: '#ffffff',\n                  hoverColor: '{primary.700}',\n                  activeColor: '{primary.800}'\n                },\n                highlight: {\n                  background: '{primary.600}',\n                  focusBackground: '{primary.700}',\n                  color: '#ffffff',\n                  focusColor: '#ffffff'\n                }\n              },\n              dark: {\n                primary: {\n                  color: '{primary.500}',\n                  contrastColor: '{surface.900}',\n                  hoverColor: '{primary.400}',\n                  activeColor: '{primary.300}'\n                },\n                highlight: {\n                  background: '{primary.500}',\n                  focusBackground: '{primary.400}',\n                  color: '{surface.900}',\n                  focusColor: '{surface.900}'\n                }\n              }\n            }\n          }\n        };\n      } else if (this.themeState().preset === 'Material') {\n        return {\n          semantic: {\n            primary: color.palette,\n            colorScheme: {\n              light: {\n                primary: {\n                  color: '{primary.500}',\n                  contrastColor: '#ffffff',\n                  hoverColor: '{primary.400}',\n                  activeColor: '{primary.300}'\n                },\n                highlight: {\n                  background: 'color-mix(in srgb, {primary.color}, transparent 88%)',\n                  focusBackground: 'color-mix(in srgb, {primary.color}, transparent 76%)',\n                  color: '{primary.700}',\n                  focusColor: '{primary.800}'\n                }\n              },\n              dark: {\n                primary: {\n                  color: '{primary.400}',\n                  contrastColor: '{surface.900}',\n                  hoverColor: '{primary.300}',\n                  activeColor: '{primary.200}'\n                },\n                highlight: {\n                  background: 'color-mix(in srgb, {primary.400}, transparent 84%)',\n                  focusBackground: 'color-mix(in srgb, {primary.400}, transparent 76%)',\n                  color: 'rgba(255,255,255,.87)',\n                  focusColor: 'rgba(255,255,255,.87)'\n                }\n              }\n            }\n          }\n        };\n      } else {\n        return {\n          semantic: {\n            primary: color.palette,\n            colorScheme: {\n              light: {\n                primary: {\n                  color: '{primary.500}',\n                  contrastColor: '#ffffff',\n                  hoverColor: '{primary.600}',\n                  activeColor: '{primary.700}'\n                },\n                highlight: {\n                  background: '{primary.50}',\n                  focusBackground: '{primary.100}',\n                  color: '{primary.700}',\n                  focusColor: '{primary.800}'\n                }\n              },\n              dark: {\n                primary: {\n                  color: '{primary.400}',\n                  contrastColor: '{surface.900}',\n                  hoverColor: '{primary.300}',\n                  activeColor: '{primary.200}'\n                },\n                highlight: {\n                  background: 'color-mix(in srgb, {primary.400}, transparent 84%)',\n                  focusBackground: 'color-mix(in srgb, {primary.400}, transparent 76%)',\n                  color: 'rgba(255,255,255,.87)',\n                  focusColor: 'rgba(255,255,255,.87)'\n                }\n              }\n            }\n          }\n        };\n      }\n    }\n  }\n  startViewTransition(state) {\n    const transition = document.startViewTransition(() => {\n      this.toggleDarkMode(state);\n    });\n    transition.ready.then(() => this.onTransitionEnd());\n  }\n  toggleDarkMode(state) {\n    if (state.darkTheme) {\n      this.document.documentElement.classList.add('p-dark');\n    } else {\n      this.document.documentElement.classList.remove('p-dark');\n    }\n  }\n  onTransitionEnd() {\n    this.transitionComplete.set(true);\n    setTimeout(() => {\n      this.transitionComplete.set(false);\n    });\n  }\n  handleDarkModeTransition(state) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (document.startViewTransition) {\n        this.startViewTransition(state);\n      } else {\n        this.toggleDarkMode(state);\n        this.onTransitionEnd();\n      }\n    }\n  }\n  updateColors(event, type, color) {\n    if (type === 'primary') {\n      this.themeState.update(state => ({\n        ...state,\n        primary: color.name\n      }));\n    } else if (type === 'surface') {\n      this.themeState.update(state => ({\n        ...state,\n        surface: color.name\n      }));\n    }\n    this.applyTheme(type, color);\n    event.stopPropagation();\n  }\n  applyTheme(type, color) {\n    if (type === 'primary') {\n      updatePreset(this.getPresetExt());\n    } else if (type === 'surface') {\n      updateSurfacePalette(color.palette);\n    }\n  }\n  onPresetChange(event) {\n    this.themeState.update(state => ({\n      ...state,\n      preset: event\n    }));\n    const preset = presets[event];\n    const surfacePalette = this.surfaces.find(s => s.name === this.selectedSurfaceColor())?.palette;\n    if (this.themeState().preset === 'Material') {\n      document.body.classList.add('material');\n      this.config.ripple.set(true);\n    } else {\n      document.body.classList.remove('material');\n      this.config.ripple.set(false);\n    }\n    $t().preset(preset).preset(this.getPresetExt()).surfacePalette(surfacePalette).use({\n      useDefaultOptions: true\n    });\n  }\n  loadthemeState() {\n    if (isPlatformBrowser(this.platformId)) {\n      const storedState = localStorage.getItem(this.STORAGE_KEY);\n      if (storedState) {\n        return JSON.parse(storedState);\n      }\n    }\n    return {\n      preset: 'Aura',\n      primary: 'noir',\n      surface: null,\n      darkTheme: false\n    };\n  }\n  savethemeState(state) {\n    if (isPlatformBrowser(this.platformId)) {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(state));\n    }\n  }\n  static ɵfac = function ThemeSwitcher_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ThemeSwitcher)();\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ThemeSwitcher,\n    selectors: [[\"theme-switcher\"]],\n    decls: 30,\n    vars: 6,\n    consts: [[1, \"card\", \"flex\", \"justify-end\", \"p-2\", \"mb-4\"], [1, \"flex\", \"list-none\", \"m-0\", \"p-0\", \"gap-2\", \"items-center\"], [\"type\", \"button\", 1, \"inline-flex\", \"w-8\", \"h-8\", \"p-0\", \"items-center\", \"justify-center\", \"surface-0\", \"dark:surface-800\", \"border\", \"border-surface-200\", \"dark:border-surface-600\", \"rounded\", 3, \"click\"], [1, \"dark:text-white\", 3, \"ngClass\"], [1, \"relative\"], [\"pStyleClass\", \"@next\", \"enterFromClass\", \"hidden\", \"enterActiveClass\", \"animate-scalein\", \"leaveToClass\", \"hidden\", \"leaveActiveClass\", \"animate-fadeout\", \"type\", \"button\", 1, \"inline-flex\", \"w-8\", \"h-8\", \"p-0\", \"items-center\", \"justify-center\", \"surface-0\", \"dark:surface-800\", \"border\", \"border-surface-200\", \"dark:border-surface-600\", \"rounded\", 3, \"hideOnOutsideClick\"], [1, \"pi\", \"pi-palette\", \"dark:text-white\"], [1, \"absolute\", \"top-[2.5rem]\", \"right-0\", \"hidden\", \"w-[18rem]\", \"p-3\", \"bg-white\", \"dark:bg-surface-800\", \"rounded-md\", \"shadow\", \"border\", \"border-surface-200\", \"dark:border-surface-700\", \"flex-col\", \"justify-start\", \"items-start\", \"gap-3.5\", \"inline-flex\", \"origin-top\", \"z-10\"], [1, \"flex-col\", \"justify-start\", \"items-start\", \"gap-2\", \"inline-flex\", \"pr-4\"], [1, \"text-sm\", \"font-medium\"], [1, \"self-stretch\", \"justify-start\", \"items-start\", \"gap-2\", \"inline-flex\", \"flex-wrap\"], [\"type\", \"button\", 1, \"outline\", \"outline-2\", \"outline-offset-1\", \"outline-transparent\", \"cursor-pointer\", \"p-0\", \"rounded-[50%]\", \"w-5\", \"h-5\", 3, \"title\", \"ngStyle\"], [1, \"flex-col\", \"justify-start\", \"items-start\", \"gap-2\", \"inline-flex\", \"pr-2\"], [1, \"self-stretch\", \"justify-start\", \"items-start\", \"gap-2\", \"inline-flex\"], [1, \"flex-col\", \"justify-start\", \"items-start\", \"gap-2\", \"inline-flex\", \"w-full\"], [1, \"inline-flex\", \"p-[0.28rem]\", \"items-start\", \"gap-[0.28rem]\", \"rounded-[0.71rem]\", \"border\", \"border-[#00000003]\", \"w-full\"], [\"size\", \"small\", 3, \"ngModelChange\", \"options\", \"ngModel\", \"unselectable\"], [1, \"inline-flex\", \"flex-col\", \"justify-start\", \"items-start\", \"gap-2\", \"w-full\", \"pt-4\", \"pb-2\"], [1, \"text-sm\", \"font-medium\", \"m-0\"], [3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", 1, \"outline\", \"outline-2\", \"outline-offset-1\", \"outline-transparent\", \"cursor-pointer\", \"p-0\", \"rounded-[50%]\", \"w-5\", \"h-5\", 3, \"click\", \"title\", \"ngStyle\"]],\n    template: function ThemeSwitcher_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1)(2, \"li\")(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ThemeSwitcher_Template_button_click_3_listener() {\n          return ctx.onThemeToggler();\n        });\n        i0.ɵɵelement(4, \"i\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"li\", 4)(6, \"button\", 5);\n        i0.ɵɵelement(7, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"span\", 9);\n        i0.ɵɵtext(11, \"Primary Colors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵrepeaterCreate(13, ThemeSwitcher_For_14_Template, 1, 5, \"button\", 11, _forTrack0);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 12)(16, \"span\", 9);\n        i0.ɵɵtext(17, \"Surface Colors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵrepeaterCreate(19, ThemeSwitcher_For_20_Template, 1, 5, \"button\", 11, _forTrack0);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 14)(22, \"span\", 9);\n        i0.ɵɵtext(23, \"Preset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 15)(25, \"p-selectbutton\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function ThemeSwitcher_Template_p_selectbutton_ngModelChange_25_listener($event) {\n          return ctx.onPresetChange($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 17)(27, \"span\", 18);\n        i0.ɵɵtext(28, \"Ripple Effect\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"p-toggleswitch\", 19);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function ThemeSwitcher_Template_p_toggleswitch_ngModelChange_29_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.ripple, $event) || (ctx.ripple = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", \"pi \" + ctx.iconClass());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hideOnOutsideClick\", true);\n        i0.ɵɵadvance(7);\n        i0.ɵɵrepeater(ctx.primaryColors());\n        i0.ɵɵadvance(6);\n        i0.ɵɵrepeater(ctx.surfaces);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"options\", ctx.presets)(\"ngModel\", ctx.selectedPreset())(\"unselectable\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.ripple);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgStyle, FormsModule, i2.NgControlStatus, i2.NgModel, StyleClassModule, i3.StyleClass, SelectButtonModule, i4.SelectButton, ToggleSwitchModule, i5.ToggleSwitch],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["CommonModule","FormsModule","computed","effect","inject","PLATFORM_ID","signal","$t","updatePreset","updateSurfacePalette","Aura","Lara","Material","Nora","PrimeNG","SelectButtonModule","StyleClassModule","ToggleSwitchModule","DOCUMENT","isPlatformBrowser","i0","ɵɵelementStart","ɵɵlistener","ThemeSwitcher_For_14_Template_button_click_0_listener","$event","primaryColor_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","updateColors","ɵɵelementEnd","ɵɵproperty","name","ɵɵpureFunction2","_c0","palette","selectedPrimaryColor","ThemeSwitcher_For_20_Template_button_click_0_listener","surface_r5","_r4","selectedSurfaceColor","presets","ThemeSwitcher","STORAGE_KEY","document","iconClass","themeState","darkTheme","Object","keys","platformId","config","theme","selectedPreset","preset","surface","primary","constructor","set","loadthemeState","state","savethemeState","handleDarkModeTransition","ngOnInit","onPresetChange","ripple","value","transitionComplete","primaryColors","presetPalette","primitive","colors","palettes","forEach","color","push","surfaces","onThemeToggler","update","getPresetExt","find","c","semantic","colorScheme","light","contrastColor","hoverColor","activeColor","highlight","background","focusBackground","focusColor","dark","startViewTransition","transition","toggleDarkMode","ready","then","onTransitionEnd","documentElement","classList","add","remove","setTimeout","event","type","applyTheme","stopPropagation","surfacePalette","s","body","use","useDefaultOptions","storedState","localStorage","getItem","JSON","parse","setItem","stringify","selectors","decls","vars","consts","template","ThemeSwitcher_Template","rf","ctx","ThemeSwitcher_Template_button_click_3_listener","ɵɵelement","ɵɵtext","ɵɵrepeaterCreate","ThemeSwitcher_For_14_Template","_forTrack0","ThemeSwitcher_For_20_Template","ThemeSwitcher_Template_p_selectbutton_ngModelChange_25_listener","ɵɵtwoWayListener","ThemeSwitcher_Template_p_toggleswitch_ngModelChange_29_listener","ɵɵtwoWayBindingSet","ɵɵadvance","ɵɵrepeater","ɵɵtwoWayProperty","i1","NgClass","NgStyle","i2","NgControlStatus","NgModel","i3","StyleClass","i4","SelectButton","i5","ToggleSwitch","encapsulation"],"sources":["/home/project/src/app/themeswitcher.ts"],"sourcesContent":["\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Component, computed, effect, inject, PLATFORM_ID, signal } from '@angular/core';\r\nimport { $t, updatePreset, updateSurfacePalette } from '@primeng/themes';\r\nimport Aura from '@primeng/themes/aura';\r\nimport Lara from '@primeng/themes/lara';\r\nimport Material from '@primeng/themes/material';\r\nimport Nora from '@primeng/themes/nora';\r\nimport { PrimeNG } from 'primeng/config';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { StyleClassModule } from 'primeng/styleclass';\r\nimport { ToggleSwitchModule } from 'primeng/toggleswitch';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\n\r\nconst presets = {\r\n    Aura,\r\n    Material,\r\n    Lara,\r\n    Nora\r\n};\r\n\r\nexport interface ThemeState {\r\n    preset?: string;\r\n    primary?: string;\r\n    surface?: string;\r\n    darkTheme?: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'theme-switcher',\r\n    standalone: true,\r\n    imports: [CommonModule, FormsModule, StyleClassModule, SelectButtonModule, ToggleSwitchModule],\r\n    template: ` <div class=\"card flex justify-end p-2 mb-4\">\r\n        <ul class=\"flex list-none m-0 p-0 gap-2 items-center\">\r\n            <li>\r\n                <button type=\"button\" class=\"inline-flex w-8 h-8 p-0 items-center justify-center surface-0 dark:surface-800 border border-surface-200 dark:border-surface-600 rounded\" (click)=\"onThemeToggler()\">\r\n                    <i [ngClass]=\"'pi ' + iconClass()\" class=\"dark:text-white\"></i>\r\n                </button>\r\n            </li>\r\n            <li class=\"relative\">\r\n                <button\r\n                    pStyleClass=\"@next\"\r\n                    enterFromClass=\"hidden\"\r\n                    enterActiveClass=\"animate-scalein\"\r\n                    leaveToClass=\"hidden\"\r\n                    leaveActiveClass=\"animate-fadeout\"\r\n                    [hideOnOutsideClick]=\"true\"\r\n                    type=\"button\"\r\n                    class=\"inline-flex w-8 h-8 p-0 items-center justify-center surface-0 dark:surface-800 border border-surface-200 dark:border-surface-600 rounded\"\r\n                >\r\n                    <i class=\"pi pi-palette dark:text-white\"></i>\r\n                </button>\r\n                <div class=\"absolute top-[2.5rem] right-0 hidden w-[18rem] p-3 bg-white dark:bg-surface-800 rounded-md shadow border border-surface-200 dark:border-surface-700 flex-col justify-start items-start gap-3.5 inline-flex origin-top z-10\">\r\n                    <div class=\"flex-col justify-start items-start gap-2 inline-flex pr-4\">\r\n                        <span class=\"text-sm font-medium\">Primary Colors</span>\r\n                        <div class=\"self-stretch justify-start items-start gap-2 inline-flex flex-wrap\">\r\n                            @for (primaryColor of primaryColors(); track primaryColor.name) {\r\n                                <button\r\n                                    type=\"button\"\r\n                                    [title]=\"primaryColor.name\"\r\n                                    (click)=\"updateColors($event, 'primary', primaryColor)\"\r\n                                    class=\"outline outline-2 outline-offset-1 outline-transparent cursor-pointer p-0 rounded-[50%] w-5 h-5\"\r\n                                    [ngStyle]=\"{\r\n                                        'background-color': primaryColor.name === 'noir' ? 'var(--text-color)' : primaryColor.palette['500'],\r\n                                        'outline-color': selectedPrimaryColor() === primaryColor.name ? 'var(--p-primary-color)' : ''\r\n                                    }\"\r\n                                ></button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex-col justify-start items-start gap-2 inline-flex pr-2\">\r\n                        <span class=\"text-sm font-medium\">Surface Colors</span>\r\n                        <div class=\"self-stretch justify-start items-start gap-2 inline-flex\">\r\n                            @for (surface of surfaces; track surface.name) {\r\n                                <button\r\n                                    type=\"button\"\r\n                                    [title]=\"surface.name\"\r\n                                    (click)=\"updateColors($event, 'surface', surface)\"\r\n                                    class=\"outline outline-2 outline-offset-1 outline-transparent cursor-pointer p-0 rounded-[50%] w-5 h-5\"\r\n                                    [ngStyle]=\"{\r\n                                        'background-color': surface.palette['500'],\r\n                                        'outline-color': selectedSurfaceColor() === surface.name ? 'var(--p-primary-color)' : ''\r\n                                    }\"\r\n                                ></button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex-col justify-start items-start gap-2 inline-flex w-full\">\r\n                        <span class=\"text-sm font-medium\">Preset</span>\r\n                        <div class=\"inline-flex p-[0.28rem] items-start gap-[0.28rem] rounded-[0.71rem] border border-[#00000003] w-full\">\r\n                            <p-selectbutton [options]=\"presets\" [ngModel]=\"selectedPreset()\" (ngModelChange)=\"onPresetChange($event)\" [unselectable]=\"false\" size=\"small\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"inline-flex flex-col justify-start items-start gap-2 w-full pt-4 pb-2\">\r\n                        <span class=\"text-sm font-medium m-0\">Ripple Effect</span>\r\n                        <p-toggleswitch [(ngModel)]=\"ripple\" />\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>`\r\n})\r\nexport class ThemeSwitcher {\r\n  private readonly STORAGE_KEY = 'themeSwitcherState';\r\n\r\n  document = inject(DOCUMENT);\r\n\r\n  iconClass = computed(() =>\r\n    this.themeState().darkTheme ? 'pi-sun' : 'pi-moon'\r\n  );\r\n\r\n  presets = Object.keys(presets);\r\n\r\n  platformId = inject(PLATFORM_ID);\r\n\r\n  config: PrimeNG = inject(PrimeNG);\r\n\r\n  themeState = signal<ThemeState>(null);\r\n\r\n  theme = computed(() => (this.themeState()?.darkTheme ? 'dark' : 'light'));\r\n\r\n  selectedPreset = computed(() => this.themeState().preset);\r\n\r\n  selectedSurfaceColor = computed(() => this.themeState().surface);\r\n\r\n  selectedPrimaryColor = computed(() => {\r\n    return this.themeState().primary;\r\n  });\r\n\r\n  constructor() {\r\n    this.themeState.set({ ...this.loadthemeState() });\r\n\r\n    effect(() => {\r\n      const state = this.themeState();\r\n\r\n      this.savethemeState(state);\r\n      this.handleDarkModeTransition(state);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      this.onPresetChange(this.themeState().preset);\r\n    }\r\n  }\r\n\r\n  get ripple() {\r\n    return this.config.ripple();\r\n  }\r\n\r\n  set ripple(value: boolean) {\r\n    this.config.ripple.set(value);\r\n  }\r\n\r\n  transitionComplete = signal<boolean>(false);\r\n\r\n  primaryColors = computed(() => {\r\n    const presetPalette = presets[this.themeState().preset].primitive;\r\n    const colors = [\r\n      'emerald',\r\n      'green',\r\n      'lime',\r\n      'orange',\r\n      'amber',\r\n      'yellow',\r\n      'teal',\r\n      'cyan',\r\n      'sky',\r\n      'blue',\r\n      'indigo',\r\n      'violet',\r\n      'purple',\r\n      'fuchsia',\r\n      'pink',\r\n      'rose',\r\n    ];\r\n    const palettes = [{ name: 'noir', palette: {} }];\r\n\r\n    colors.forEach((color) => {\r\n      palettes.push({\r\n        name: color,\r\n        palette: presetPalette[color],\r\n      });\r\n    });\r\n\r\n    return palettes;\r\n  });\r\n\r\n  surfaces = [\r\n    {\r\n      name: 'slate',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#f8fafc',\r\n        100: '#f1f5f9',\r\n        200: '#e2e8f0',\r\n        300: '#cbd5e1',\r\n        400: '#94a3b8',\r\n        500: '#64748b',\r\n        600: '#475569',\r\n        700: '#334155',\r\n        800: '#1e293b',\r\n        900: '#0f172a',\r\n        950: '#020617',\r\n      },\r\n    },\r\n    {\r\n      name: 'gray',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#f9fafb',\r\n        100: '#f3f4f6',\r\n        200: '#e5e7eb',\r\n        300: '#d1d5db',\r\n        400: '#9ca3af',\r\n        500: '#6b7280',\r\n        600: '#4b5563',\r\n        700: '#374151',\r\n        800: '#1f2937',\r\n        900: '#111827',\r\n        950: '#030712',\r\n      },\r\n    },\r\n    {\r\n      name: 'zinc',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#fafafa',\r\n        100: '#f4f4f5',\r\n        200: '#e4e4e7',\r\n        300: '#d4d4d8',\r\n        400: '#a1a1aa',\r\n        500: '#71717a',\r\n        600: '#52525b',\r\n        700: '#3f3f46',\r\n        800: '#27272a',\r\n        900: '#18181b',\r\n        950: '#09090b',\r\n      },\r\n    },\r\n    {\r\n      name: 'neutral',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#fafafa',\r\n        100: '#f5f5f5',\r\n        200: '#e5e5e5',\r\n        300: '#d4d4d4',\r\n        400: '#a3a3a3',\r\n        500: '#737373',\r\n        600: '#525252',\r\n        700: '#404040',\r\n        800: '#262626',\r\n        900: '#171717',\r\n        950: '#0a0a0a',\r\n      },\r\n    },\r\n    {\r\n      name: 'stone',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#fafaf9',\r\n        100: '#f5f5f4',\r\n        200: '#e7e5e4',\r\n        300: '#d6d3d1',\r\n        400: '#a8a29e',\r\n        500: '#78716c',\r\n        600: '#57534e',\r\n        700: '#44403c',\r\n        800: '#292524',\r\n        900: '#1c1917',\r\n        950: '#0c0a09',\r\n      },\r\n    },\r\n    {\r\n      name: 'soho',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#ececec',\r\n        100: '#dedfdf',\r\n        200: '#c4c4c6',\r\n        300: '#adaeb0',\r\n        400: '#97979b',\r\n        500: '#7f8084',\r\n        600: '#6a6b70',\r\n        700: '#55565b',\r\n        800: '#3f4046',\r\n        900: '#2c2c34',\r\n        950: '#16161d',\r\n      },\r\n    },\r\n    {\r\n      name: 'viva',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#f3f3f3',\r\n        100: '#e7e7e8',\r\n        200: '#cfd0d0',\r\n        300: '#b7b8b9',\r\n        400: '#9fa1a1',\r\n        500: '#87898a',\r\n        600: '#6e7173',\r\n        700: '#565a5b',\r\n        800: '#3e4244',\r\n        900: '#262b2c',\r\n        950: '#0e1315',\r\n      },\r\n    },\r\n    {\r\n      name: 'ocean',\r\n      palette: {\r\n        0: '#ffffff',\r\n        50: '#fbfcfc',\r\n        100: '#F7F9F8',\r\n        200: '#EFF3F2',\r\n        300: '#DADEDD',\r\n        400: '#B1B7B6',\r\n        500: '#828787',\r\n        600: '#5F7274',\r\n        700: '#415B61',\r\n        800: '#29444E',\r\n        900: '#183240',\r\n        950: '#0c1920',\r\n      },\r\n    },\r\n  ];\r\n\r\n  onThemeToggler() {\r\n    this.themeState.update((state) => ({\r\n      ...state,\r\n      darkTheme: !state.darkTheme,\r\n    }));\r\n  }\r\n\r\n  getPresetExt() {\r\n    const color = this.primaryColors().find(\r\n      (c) => c.name === this.selectedPrimaryColor()\r\n    );\r\n\r\n    if (color.name === 'noir') {\r\n      return {\r\n        semantic: {\r\n          primary: {\r\n            50: '{surface.50}',\r\n            100: '{surface.100}',\r\n            200: '{surface.200}',\r\n            300: '{surface.300}',\r\n            400: '{surface.400}',\r\n            500: '{surface.500}',\r\n            600: '{surface.600}',\r\n            700: '{surface.700}',\r\n            800: '{surface.800}',\r\n            900: '{surface.900}',\r\n            950: '{surface.950}',\r\n          },\r\n          colorScheme: {\r\n            light: {\r\n              primary: {\r\n                color: '{primary.950}',\r\n                contrastColor: '#ffffff',\r\n                hoverColor: '{primary.800}',\r\n                activeColor: '{primary.700}',\r\n              },\r\n              highlight: {\r\n                background: '{primary.950}',\r\n                focusBackground: '{primary.700}',\r\n                color: '#ffffff',\r\n                focusColor: '#ffffff',\r\n              },\r\n            },\r\n            dark: {\r\n              primary: {\r\n                color: '{primary.50}',\r\n                contrastColor: '{primary.950}',\r\n                hoverColor: '{primary.200}',\r\n                activeColor: '{primary.300}',\r\n              },\r\n              highlight: {\r\n                background: '{primary.50}',\r\n                focusBackground: '{primary.300}',\r\n                color: '{primary.950}',\r\n                focusColor: '{primary.950}',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      if (this.themeState().preset === 'Nora') {\r\n        return {\r\n          semantic: {\r\n            primary: color.palette,\r\n            colorScheme: {\r\n              light: {\r\n                primary: {\r\n                  color: '{primary.600}',\r\n                  contrastColor: '#ffffff',\r\n                  hoverColor: '{primary.700}',\r\n                  activeColor: '{primary.800}',\r\n                },\r\n                highlight: {\r\n                  background: '{primary.600}',\r\n                  focusBackground: '{primary.700}',\r\n                  color: '#ffffff',\r\n                  focusColor: '#ffffff',\r\n                },\r\n              },\r\n              dark: {\r\n                primary: {\r\n                  color: '{primary.500}',\r\n                  contrastColor: '{surface.900}',\r\n                  hoverColor: '{primary.400}',\r\n                  activeColor: '{primary.300}',\r\n                },\r\n                highlight: {\r\n                  background: '{primary.500}',\r\n                  focusBackground: '{primary.400}',\r\n                  color: '{surface.900}',\r\n                  focusColor: '{surface.900}',\r\n                },\r\n              },\r\n            },\r\n          },\r\n        };\r\n      } else if (this.themeState().preset === 'Material') {\r\n        return {\r\n          semantic: {\r\n            primary: color.palette,\r\n            colorScheme: {\r\n              light: {\r\n                primary: {\r\n                  color: '{primary.500}',\r\n                  contrastColor: '#ffffff',\r\n                  hoverColor: '{primary.400}',\r\n                  activeColor: '{primary.300}',\r\n                },\r\n                highlight: {\r\n                  background:\r\n                    'color-mix(in srgb, {primary.color}, transparent 88%)',\r\n                  focusBackground:\r\n                    'color-mix(in srgb, {primary.color}, transparent 76%)',\r\n                  color: '{primary.700}',\r\n                  focusColor: '{primary.800}',\r\n                },\r\n              },\r\n              dark: {\r\n                primary: {\r\n                  color: '{primary.400}',\r\n                  contrastColor: '{surface.900}',\r\n                  hoverColor: '{primary.300}',\r\n                  activeColor: '{primary.200}',\r\n                },\r\n                highlight: {\r\n                  background:\r\n                    'color-mix(in srgb, {primary.400}, transparent 84%)',\r\n                  focusBackground:\r\n                    'color-mix(in srgb, {primary.400}, transparent 76%)',\r\n                  color: 'rgba(255,255,255,.87)',\r\n                  focusColor: 'rgba(255,255,255,.87)',\r\n                },\r\n              },\r\n            },\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          semantic: {\r\n            primary: color.palette,\r\n            colorScheme: {\r\n              light: {\r\n                primary: {\r\n                  color: '{primary.500}',\r\n                  contrastColor: '#ffffff',\r\n                  hoverColor: '{primary.600}',\r\n                  activeColor: '{primary.700}',\r\n                },\r\n                highlight: {\r\n                  background: '{primary.50}',\r\n                  focusBackground: '{primary.100}',\r\n                  color: '{primary.700}',\r\n                  focusColor: '{primary.800}',\r\n                },\r\n              },\r\n              dark: {\r\n                primary: {\r\n                  color: '{primary.400}',\r\n                  contrastColor: '{surface.900}',\r\n                  hoverColor: '{primary.300}',\r\n                  activeColor: '{primary.200}',\r\n                },\r\n                highlight: {\r\n                  background:\r\n                    'color-mix(in srgb, {primary.400}, transparent 84%)',\r\n                  focusBackground:\r\n                    'color-mix(in srgb, {primary.400}, transparent 76%)',\r\n                  color: 'rgba(255,255,255,.87)',\r\n                  focusColor: 'rgba(255,255,255,.87)',\r\n                },\r\n              },\r\n            },\r\n          },\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  startViewTransition(state: ThemeState): void {\r\n    const transition = (document as any).startViewTransition(() => {\r\n      this.toggleDarkMode(state);\r\n    });\r\n\r\n    transition.ready.then(() => this.onTransitionEnd());\r\n  }\r\n\r\n  toggleDarkMode(state: ThemeState): void {\r\n    if (state.darkTheme) {\r\n      this.document.documentElement.classList.add('p-dark');\r\n    } else {\r\n      this.document.documentElement.classList.remove('p-dark');\r\n    }\r\n  }\r\n\r\n  onTransitionEnd() {\r\n    this.transitionComplete.set(true);\r\n    setTimeout(() => {\r\n      this.transitionComplete.set(false);\r\n    });\r\n  }\r\n\r\n  handleDarkModeTransition(state: ThemeState): void {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      if ((document as any).startViewTransition) {\r\n        this.startViewTransition(state);\r\n      } else {\r\n        this.toggleDarkMode(state);\r\n        this.onTransitionEnd();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateColors(event: any, type: string, color: any) {\r\n    if (type === 'primary') {\r\n      this.themeState.update((state) => ({ ...state, primary: color.name }));\r\n    } else if (type === 'surface') {\r\n      this.themeState.update((state) => ({ ...state, surface: color.name }));\r\n    }\r\n    this.applyTheme(type, color);\r\n\r\n    event.stopPropagation();\r\n  }\r\n\r\n  applyTheme(type: string, color: any) {\r\n    if (type === 'primary') {\r\n      updatePreset(this.getPresetExt());\r\n    } else if (type === 'surface') {\r\n      updateSurfacePalette(color.palette);\r\n    }\r\n  }\r\n\r\n  onPresetChange(event: any) {\r\n    this.themeState.update((state) => ({ ...state, preset: event }));\r\n    const preset = presets[event];\r\n    const surfacePalette = this.surfaces.find(\r\n      (s) => s.name === this.selectedSurfaceColor()\r\n    )?.palette;\r\n    if (this.themeState().preset === 'Material') {\r\n      document.body.classList.add('material');\r\n      this.config.ripple.set(true);\r\n    } else {\r\n      document.body.classList.remove('material');\r\n      this.config.ripple.set(false);\r\n    }\r\n    $t()\r\n      .preset(preset)\r\n      .preset(this.getPresetExt())\r\n      .surfacePalette(surfacePalette)\r\n      .use({ useDefaultOptions: true });\r\n  }\r\n\r\n  loadthemeState(): any {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      const storedState = localStorage.getItem(this.STORAGE_KEY);\r\n      if (storedState) {\r\n        return JSON.parse(storedState);\r\n      }\r\n    }\r\n    return {\r\n      preset: 'Aura',\r\n      primary: 'noir',\r\n      surface: null,\r\n      darkTheme: false,\r\n    };\r\n  }\r\n\r\n  savethemeState(state: any): void {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(state));\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAAoBC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,MAAM,QAAQ,eAAe;AACxF,SAASC,EAAE,EAAEC,YAAY,EAAEC,oBAAoB,QAAQ,iBAAiB;AACxE,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,QAAQ,EAAEC,iBAAiB,QAAQ,iBAAiB;;;;;;;;;;;;;;;IA6C7BC,EAAA,CAAAC,cAAA,iBASC;IANGD,EAAA,CAAAE,UAAA,mBAAAC,sDAAAC,MAAA;MAAA,MAAAC,eAAA,GAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAAV,EAAA,CAAAW,WAAA,CAASF,MAAA,CAAAG,YAAA,CAAAR,MAAA,EAAqB,SAAS,EAAAC,eAAA,CAAe;IAAA,EAAC;IAM1DL,EAAA,CAAAa,YAAA,EAAS;;;;;IAJNb,EAHA,CAAAc,UAAA,UAAAT,eAAA,CAAAU,IAAA,CAA2B,YAAAf,EAAA,CAAAgB,eAAA,IAAAC,GAAA,EAAAZ,eAAA,CAAAU,IAAA,oCAAAV,eAAA,CAAAa,OAAA,SAAAT,MAAA,CAAAU,oBAAA,OAAAd,eAAA,CAAAU,IAAA,kCAMzB;;;;;;IASNf,EAAA,CAAAC,cAAA,iBASC;IANGD,EAAA,CAAAE,UAAA,mBAAAkB,sDAAAhB,MAAA;MAAA,MAAAiB,UAAA,GAAArB,EAAA,CAAAM,aAAA,CAAAgB,GAAA,EAAAd,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAAV,EAAA,CAAAW,WAAA,CAASF,MAAA,CAAAG,YAAA,CAAAR,MAAA,EAAqB,SAAS,EAAAiB,UAAA,CAAU;IAAA,EAAC;IAMrDrB,EAAA,CAAAa,YAAA,EAAS;;;;;IAJNb,EAHA,CAAAc,UAAA,UAAAO,UAAA,CAAAN,IAAA,CAAsB,YAAAf,EAAA,CAAAgB,eAAA,IAAAC,GAAA,EAAAI,UAAA,CAAAH,OAAA,SAAAT,MAAA,CAAAc,oBAAA,OAAAF,UAAA,CAAAN,IAAA,kCAMpB;;;AApEtC,MAAMS,OAAO,GAAG;EACZlC,IAAI;EACJE,QAAQ;EACRD,IAAI;EACJE;CACH;AAmFD,OAAM,MAAOgC,aAAa;EACPC,WAAW,GAAG,oBAAoB;EAEnDC,QAAQ,GAAG3C,MAAM,CAACc,QAAQ,CAAC;EAE3B8B,SAAS,GAAG9C,QAAQ,CAAC,MACnB,IAAI,CAAC+C,UAAU,EAAE,CAACC,SAAS,GAAG,QAAQ,GAAG,SAAS,CACnD;EAEDN,OAAO,GAAGO,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC;EAE9BS,UAAU,GAAGjD,MAAM,CAACC,WAAW,CAAC;EAEhCiD,MAAM,GAAYlD,MAAM,CAACU,OAAO,CAAC;EAEjCmC,UAAU,GAAG3C,MAAM,CAAa,IAAI,CAAC;EAErCiD,KAAK,GAAGrD,QAAQ,CAAC,MAAO,IAAI,CAAC+C,UAAU,EAAE,EAAEC,SAAS,GAAG,MAAM,GAAG,OAAQ,CAAC;EAEzEM,cAAc,GAAGtD,QAAQ,CAAC,MAAM,IAAI,CAAC+C,UAAU,EAAE,CAACQ,MAAM,CAAC;EAEzDd,oBAAoB,GAAGzC,QAAQ,CAAC,MAAM,IAAI,CAAC+C,UAAU,EAAE,CAACS,OAAO,CAAC;EAEhEnB,oBAAoB,GAAGrC,QAAQ,CAAC,MAAK;IACnC,OAAO,IAAI,CAAC+C,UAAU,EAAE,CAACU,OAAO;EAClC,CAAC,CAAC;EAEFC,YAAA;IACE,IAAI,CAACX,UAAU,CAACY,GAAG,CAAC;MAAE,GAAG,IAAI,CAACC,cAAc;IAAE,CAAE,CAAC;IAEjD3D,MAAM,CAAC,MAAK;MACV,MAAM4D,KAAK,GAAG,IAAI,CAACd,UAAU,EAAE;MAE/B,IAAI,CAACe,cAAc,CAACD,KAAK,CAAC;MAC1B,IAAI,CAACE,wBAAwB,CAACF,KAAK,CAAC;IACtC,CAAC,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,IAAI/C,iBAAiB,CAAC,IAAI,CAACkC,UAAU,CAAC,EAAE;MACtC,IAAI,CAACc,cAAc,CAAC,IAAI,CAAClB,UAAU,EAAE,CAACQ,MAAM,CAAC;IAC/C;EACF;EAEA,IAAIW,MAAMA,CAAA;IACR,OAAO,IAAI,CAACd,MAAM,CAACc,MAAM,EAAE;EAC7B;EAEA,IAAIA,MAAMA,CAACC,KAAc;IACvB,IAAI,CAACf,MAAM,CAACc,MAAM,CAACP,GAAG,CAACQ,KAAK,CAAC;EAC/B;EAEAC,kBAAkB,GAAGhE,MAAM,CAAU,KAAK,CAAC;EAE3CiE,aAAa,GAAGrE,QAAQ,CAAC,MAAK;IAC5B,MAAMsE,aAAa,GAAG5B,OAAO,CAAC,IAAI,CAACK,UAAU,EAAE,CAACQ,MAAM,CAAC,CAACgB,SAAS;IACjE,MAAMC,MAAM,GAAG,CACb,SAAS,EACT,OAAO,EACP,MAAM,EACN,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,MAAM,EACN,MAAM,EACN,KAAK,EACL,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,MAAM,EACN,MAAM,CACP;IACD,MAAMC,QAAQ,GAAG,CAAC;MAAExC,IAAI,EAAE,MAAM;MAAEG,OAAO,EAAE;IAAE,CAAE,CAAC;IAEhDoC,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAI;MACvBF,QAAQ,CAACG,IAAI,CAAC;QACZ3C,IAAI,EAAE0C,KAAK;QACXvC,OAAO,EAAEkC,aAAa,CAACK,KAAK;OAC7B,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOF,QAAQ;EACjB,CAAC,CAAC;EAEFI,QAAQ,GAAG,CACT;IACE5C,IAAI,EAAE,OAAO;IACbG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,EACD;IACEH,IAAI,EAAE,MAAM;IACZG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,EACD;IACEH,IAAI,EAAE,MAAM;IACZG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,EACD;IACEH,IAAI,EAAE,SAAS;IACfG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,EACD;IACEH,IAAI,EAAE,OAAO;IACbG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,EACD;IACEH,IAAI,EAAE,MAAM;IACZG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,EACD;IACEH,IAAI,EAAE,MAAM;IACZG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,EACD;IACEH,IAAI,EAAE,OAAO;IACbG,OAAO,EAAE;MACP,CAAC,EAAE,SAAS;MACZ,EAAE,EAAE,SAAS;MACb,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE,SAAS;MACd,GAAG,EAAE;;GAER,CACF;EAED0C,cAAcA,CAAA;IACZ,IAAI,CAAC/B,UAAU,CAACgC,MAAM,CAAElB,KAAK,KAAM;MACjC,GAAGA,KAAK;MACRb,SAAS,EAAE,CAACa,KAAK,CAACb;KACnB,CAAC,CAAC;EACL;EAEAgC,YAAYA,CAAA;IACV,MAAML,KAAK,GAAG,IAAI,CAACN,aAAa,EAAE,CAACY,IAAI,CACpCC,CAAC,IAAKA,CAAC,CAACjD,IAAI,KAAK,IAAI,CAACI,oBAAoB,EAAE,CAC9C;IAED,IAAIsC,KAAK,CAAC1C,IAAI,KAAK,MAAM,EAAE;MACzB,OAAO;QACLkD,QAAQ,EAAE;UACR1B,OAAO,EAAE;YACP,EAAE,EAAE,cAAc;YAClB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE,eAAe;YACpB,GAAG,EAAE;WACN;UACD2B,WAAW,EAAE;YACXC,KAAK,EAAE;cACL5B,OAAO,EAAE;gBACPkB,KAAK,EAAE,eAAe;gBACtBW,aAAa,EAAE,SAAS;gBACxBC,UAAU,EAAE,eAAe;gBAC3BC,WAAW,EAAE;eACd;cACDC,SAAS,EAAE;gBACTC,UAAU,EAAE,eAAe;gBAC3BC,eAAe,EAAE,eAAe;gBAChChB,KAAK,EAAE,SAAS;gBAChBiB,UAAU,EAAE;;aAEf;YACDC,IAAI,EAAE;cACJpC,OAAO,EAAE;gBACPkB,KAAK,EAAE,cAAc;gBACrBW,aAAa,EAAE,eAAe;gBAC9BC,UAAU,EAAE,eAAe;gBAC3BC,WAAW,EAAE;eACd;cACDC,SAAS,EAAE;gBACTC,UAAU,EAAE,cAAc;gBAC1BC,eAAe,EAAE,eAAe;gBAChChB,KAAK,EAAE,eAAe;gBACtBiB,UAAU,EAAE;;;;;OAKrB;IACH,CAAC,MAAM;MACL,IAAI,IAAI,CAAC7C,UAAU,EAAE,CAACQ,MAAM,KAAK,MAAM,EAAE;QACvC,OAAO;UACL4B,QAAQ,EAAE;YACR1B,OAAO,EAAEkB,KAAK,CAACvC,OAAO;YACtBgD,WAAW,EAAE;cACXC,KAAK,EAAE;gBACL5B,OAAO,EAAE;kBACPkB,KAAK,EAAE,eAAe;kBACtBW,aAAa,EAAE,SAAS;kBACxBC,UAAU,EAAE,eAAe;kBAC3BC,WAAW,EAAE;iBACd;gBACDC,SAAS,EAAE;kBACTC,UAAU,EAAE,eAAe;kBAC3BC,eAAe,EAAE,eAAe;kBAChChB,KAAK,EAAE,SAAS;kBAChBiB,UAAU,EAAE;;eAEf;cACDC,IAAI,EAAE;gBACJpC,OAAO,EAAE;kBACPkB,KAAK,EAAE,eAAe;kBACtBW,aAAa,EAAE,eAAe;kBAC9BC,UAAU,EAAE,eAAe;kBAC3BC,WAAW,EAAE;iBACd;gBACDC,SAAS,EAAE;kBACTC,UAAU,EAAE,eAAe;kBAC3BC,eAAe,EAAE,eAAe;kBAChChB,KAAK,EAAE,eAAe;kBACtBiB,UAAU,EAAE;;;;;SAKrB;MACH,CAAC,MAAM,IAAI,IAAI,CAAC7C,UAAU,EAAE,CAACQ,MAAM,KAAK,UAAU,EAAE;QAClD,OAAO;UACL4B,QAAQ,EAAE;YACR1B,OAAO,EAAEkB,KAAK,CAACvC,OAAO;YACtBgD,WAAW,EAAE;cACXC,KAAK,EAAE;gBACL5B,OAAO,EAAE;kBACPkB,KAAK,EAAE,eAAe;kBACtBW,aAAa,EAAE,SAAS;kBACxBC,UAAU,EAAE,eAAe;kBAC3BC,WAAW,EAAE;iBACd;gBACDC,SAAS,EAAE;kBACTC,UAAU,EACR,sDAAsD;kBACxDC,eAAe,EACb,sDAAsD;kBACxDhB,KAAK,EAAE,eAAe;kBACtBiB,UAAU,EAAE;;eAEf;cACDC,IAAI,EAAE;gBACJpC,OAAO,EAAE;kBACPkB,KAAK,EAAE,eAAe;kBACtBW,aAAa,EAAE,eAAe;kBAC9BC,UAAU,EAAE,eAAe;kBAC3BC,WAAW,EAAE;iBACd;gBACDC,SAAS,EAAE;kBACTC,UAAU,EACR,oDAAoD;kBACtDC,eAAe,EACb,oDAAoD;kBACtDhB,KAAK,EAAE,uBAAuB;kBAC9BiB,UAAU,EAAE;;;;;SAKrB;MACH,CAAC,MAAM;QACL,OAAO;UACLT,QAAQ,EAAE;YACR1B,OAAO,EAAEkB,KAAK,CAACvC,OAAO;YACtBgD,WAAW,EAAE;cACXC,KAAK,EAAE;gBACL5B,OAAO,EAAE;kBACPkB,KAAK,EAAE,eAAe;kBACtBW,aAAa,EAAE,SAAS;kBACxBC,UAAU,EAAE,eAAe;kBAC3BC,WAAW,EAAE;iBACd;gBACDC,SAAS,EAAE;kBACTC,UAAU,EAAE,cAAc;kBAC1BC,eAAe,EAAE,eAAe;kBAChChB,KAAK,EAAE,eAAe;kBACtBiB,UAAU,EAAE;;eAEf;cACDC,IAAI,EAAE;gBACJpC,OAAO,EAAE;kBACPkB,KAAK,EAAE,eAAe;kBACtBW,aAAa,EAAE,eAAe;kBAC9BC,UAAU,EAAE,eAAe;kBAC3BC,WAAW,EAAE;iBACd;gBACDC,SAAS,EAAE;kBACTC,UAAU,EACR,oDAAoD;kBACtDC,eAAe,EACb,oDAAoD;kBACtDhB,KAAK,EAAE,uBAAuB;kBAC9BiB,UAAU,EAAE;;;;;SAKrB;MACH;IACF;EACF;EAEAE,mBAAmBA,CAACjC,KAAiB;IACnC,MAAMkC,UAAU,GAAIlD,QAAgB,CAACiD,mBAAmB,CAAC,MAAK;MAC5D,IAAI,CAACE,cAAc,CAACnC,KAAK,CAAC;IAC5B,CAAC,CAAC;IAEFkC,UAAU,CAACE,KAAK,CAACC,IAAI,CAAC,MAAM,IAAI,CAACC,eAAe,EAAE,CAAC;EACrD;EAEAH,cAAcA,CAACnC,KAAiB;IAC9B,IAAIA,KAAK,CAACb,SAAS,EAAE;MACnB,IAAI,CAACH,QAAQ,CAACuD,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvD,CAAC,MAAM;MACL,IAAI,CAACzD,QAAQ,CAACuD,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;IAC1D;EACF;EAEAJ,eAAeA,CAAA;IACb,IAAI,CAAC/B,kBAAkB,CAACT,GAAG,CAAC,IAAI,CAAC;IACjC6C,UAAU,CAAC,MAAK;MACd,IAAI,CAACpC,kBAAkB,CAACT,GAAG,CAAC,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ;EAEAI,wBAAwBA,CAACF,KAAiB;IACxC,IAAI5C,iBAAiB,CAAC,IAAI,CAACkC,UAAU,CAAC,EAAE;MACtC,IAAKN,QAAgB,CAACiD,mBAAmB,EAAE;QACzC,IAAI,CAACA,mBAAmB,CAACjC,KAAK,CAAC;MACjC,CAAC,MAAM;QACL,IAAI,CAACmC,cAAc,CAACnC,KAAK,CAAC;QAC1B,IAAI,CAACsC,eAAe,EAAE;MACxB;IACF;EACF;EAEArE,YAAYA,CAAC2E,KAAU,EAAEC,IAAY,EAAE/B,KAAU;IAC/C,IAAI+B,IAAI,KAAK,SAAS,EAAE;MACtB,IAAI,CAAC3D,UAAU,CAACgC,MAAM,CAAElB,KAAK,KAAM;QAAE,GAAGA,KAAK;QAAEJ,OAAO,EAAEkB,KAAK,CAAC1C;MAAI,CAAE,CAAC,CAAC;IACxE,CAAC,MAAM,IAAIyE,IAAI,KAAK,SAAS,EAAE;MAC7B,IAAI,CAAC3D,UAAU,CAACgC,MAAM,CAAElB,KAAK,KAAM;QAAE,GAAGA,KAAK;QAAEL,OAAO,EAAEmB,KAAK,CAAC1C;MAAI,CAAE,CAAC,CAAC;IACxE;IACA,IAAI,CAAC0E,UAAU,CAACD,IAAI,EAAE/B,KAAK,CAAC;IAE5B8B,KAAK,CAACG,eAAe,EAAE;EACzB;EAEAD,UAAUA,CAACD,IAAY,EAAE/B,KAAU;IACjC,IAAI+B,IAAI,KAAK,SAAS,EAAE;MACtBpG,YAAY,CAAC,IAAI,CAAC0E,YAAY,EAAE,CAAC;IACnC,CAAC,MAAM,IAAI0B,IAAI,KAAK,SAAS,EAAE;MAC7BnG,oBAAoB,CAACoE,KAAK,CAACvC,OAAO,CAAC;IACrC;EACF;EAEA6B,cAAcA,CAACwC,KAAU;IACvB,IAAI,CAAC1D,UAAU,CAACgC,MAAM,CAAElB,KAAK,KAAM;MAAE,GAAGA,KAAK;MAAEN,MAAM,EAAEkD;IAAK,CAAE,CAAC,CAAC;IAChE,MAAMlD,MAAM,GAAGb,OAAO,CAAC+D,KAAK,CAAC;IAC7B,MAAMI,cAAc,GAAG,IAAI,CAAChC,QAAQ,CAACI,IAAI,CACtC6B,CAAC,IAAKA,CAAC,CAAC7E,IAAI,KAAK,IAAI,CAACQ,oBAAoB,EAAE,CAC9C,EAAEL,OAAO;IACV,IAAI,IAAI,CAACW,UAAU,EAAE,CAACQ,MAAM,KAAK,UAAU,EAAE;MAC3CV,QAAQ,CAACkE,IAAI,CAACV,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACvC,IAAI,CAAClD,MAAM,CAACc,MAAM,CAACP,GAAG,CAAC,IAAI,CAAC;IAC9B,CAAC,MAAM;MACLd,QAAQ,CAACkE,IAAI,CAACV,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC;MAC1C,IAAI,CAACnD,MAAM,CAACc,MAAM,CAACP,GAAG,CAAC,KAAK,CAAC;IAC/B;IACAtD,EAAE,EAAE,CACDkD,MAAM,CAACA,MAAM,CAAC,CACdA,MAAM,CAAC,IAAI,CAACyB,YAAY,EAAE,CAAC,CAC3B6B,cAAc,CAACA,cAAc,CAAC,CAC9BG,GAAG,CAAC;MAAEC,iBAAiB,EAAE;IAAI,CAAE,CAAC;EACrC;EAEArD,cAAcA,CAAA;IACZ,IAAI3C,iBAAiB,CAAC,IAAI,CAACkC,UAAU,CAAC,EAAE;MACtC,MAAM+D,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACxE,WAAW,CAAC;MAC1D,IAAIsE,WAAW,EAAE;QACf,OAAOG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;MAChC;IACF;IACA,OAAO;MACL3D,MAAM,EAAE,MAAM;MACdE,OAAO,EAAE,MAAM;MACfD,OAAO,EAAE,IAAI;MACbR,SAAS,EAAE;KACZ;EACH;EAEAc,cAAcA,CAACD,KAAU;IACvB,IAAI5C,iBAAiB,CAAC,IAAI,CAACkC,UAAU,CAAC,EAAE;MACtCgE,YAAY,CAACI,OAAO,CAAC,IAAI,CAAC3E,WAAW,EAAEyE,IAAI,CAACG,SAAS,CAAC3D,KAAK,CAAC,CAAC;IAC/D;EACF;;qCAhfWlB,aAAa;EAAA;;UAAbA,aAAa;IAAA8E,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAnEV7G,EAHA,CAAAC,cAAA,aAA4C,YACE,SAC9C,gBACkM;QAA3BD,EAAA,CAAAE,UAAA,mBAAA6G,+CAAA;UAAA,OAASD,GAAA,CAAAlD,cAAA,EAAgB;QAAA,EAAC;QAC7L5D,EAAA,CAAAgH,SAAA,WAA+D;QAEvEhH,EADI,CAAAa,YAAA,EAAS,EACR;QAEDb,EADJ,CAAAC,cAAA,YAAqB,gBAUhB;QACGD,EAAA,CAAAgH,SAAA,WAA6C;QACjDhH,EAAA,CAAAa,YAAA,EAAS;QAGDb,EAFR,CAAAC,cAAA,aAAwO,aAC7J,eACjC;QAAAD,EAAA,CAAAiH,MAAA,sBAAc;QAAAjH,EAAA,CAAAa,YAAA,EAAO;QACvDb,EAAA,CAAAC,cAAA,eAAgF;QAC5ED,EAAA,CAAAkH,gBAAA,KAAAC,6BAAA,sBAAAC,UAAA,CAWC;QAETpH,EADI,CAAAa,YAAA,EAAM,EACJ;QAEFb,EADJ,CAAAC,cAAA,eAAuE,eACjC;QAAAD,EAAA,CAAAiH,MAAA,sBAAc;QAAAjH,EAAA,CAAAa,YAAA,EAAO;QACvDb,EAAA,CAAAC,cAAA,eAAsE;QAClED,EAAA,CAAAkH,gBAAA,KAAAG,6BAAA,sBAAAD,UAAA,CAWC;QAETpH,EADI,CAAAa,YAAA,EAAM,EACJ;QAEFb,EADJ,CAAAC,cAAA,eAAyE,eACnC;QAAAD,EAAA,CAAAiH,MAAA,cAAM;QAAAjH,EAAA,CAAAa,YAAA,EAAO;QAE3Cb,EADJ,CAAAC,cAAA,eAAkH,0BACkC;QAA/ED,EAAA,CAAAE,UAAA,2BAAAoH,gEAAAlH,MAAA;UAAA,OAAiB0G,GAAA,CAAA/D,cAAA,CAAA3C,MAAA,CAAsB;QAAA,EAAC;QAEjHJ,EAFQ,CAAAa,YAAA,EAAgJ,EAC9I,EACJ;QAEFb,EADJ,CAAAC,cAAA,eAAmF,gBACzC;QAAAD,EAAA,CAAAiH,MAAA,qBAAa;QAAAjH,EAAA,CAAAa,YAAA,EAAO;QAC1Db,EAAA,CAAAC,cAAA,0BAAuC;QAAvBD,EAAA,CAAAuH,gBAAA,2BAAAC,gEAAApH,MAAA;UAAAJ,EAAA,CAAAyH,kBAAA,CAAAX,GAAA,CAAA9D,MAAA,EAAA5C,MAAA,MAAA0G,GAAA,CAAA9D,MAAA,GAAA5C,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAoB;QAKxDJ,EALoB,CAAAa,YAAA,EAAuC,EACrC,EACJ,EACL,EACJ,EACH;;;QAhEab,EAAA,CAAA0H,SAAA,GAA+B;QAA/B1H,EAAA,CAAAc,UAAA,oBAAAgG,GAAA,CAAAlF,SAAA,GAA+B;QAUlC5B,EAAA,CAAA0H,SAAA,GAA2B;QAA3B1H,EAAA,CAAAc,UAAA,4BAA2B;QAUnBd,EAAA,CAAA0H,SAAA,GAWC;QAXD1H,EAAA,CAAA2H,UAAA,CAAAb,GAAA,CAAA3D,aAAA,EAAe,CAWd;QAMDnD,EAAA,CAAA0H,SAAA,GAWC;QAXD1H,EAAA,CAAA2H,UAAA,CAAAb,GAAA,CAAAnD,QAAA,CAWC;QAMe3D,EAAA,CAAA0H,SAAA,GAAmB;QAAuE1H,EAA1F,CAAAc,UAAA,YAAAgG,GAAA,CAAAtF,OAAA,CAAmB,YAAAsF,GAAA,CAAA1E,cAAA,GAA6B,uBAAgE;QAKpHpC,EAAA,CAAA0H,SAAA,GAAoB;QAApB1H,EAAA,CAAA4H,gBAAA,YAAAd,GAAA,CAAA9D,MAAA,CAAoB;;;mBAhE9CpE,YAAY,EAAAiJ,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,OAAA,EAAElJ,WAAW,EAAAmJ,EAAA,CAAAC,eAAA,EAAAD,EAAA,CAAAE,OAAA,EAAEtI,gBAAgB,EAAAuI,EAAA,CAAAC,UAAA,EAAEzI,kBAAkB,EAAA0I,EAAA,CAAAC,YAAA,EAAEzI,kBAAkB,EAAA0I,EAAA,CAAAC,YAAA;IAAAC,aAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}