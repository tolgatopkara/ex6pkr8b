{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, inject, NgZone, booleanAttribute, numberAttribute, ViewChild, Output, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { removeClass, addClass, getWindowScrollLeft, getWindowScrollTop, isRTL } from '@primeuix/utils';\nimport { SharedModule } from 'primeng/api';\nimport { AutoFocus } from 'primeng/autofocus';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"sliderHandle\"];\nconst _c1 = [\"sliderHandleStart\"];\nconst _c2 = [\"sliderHandleEnd\"];\nconst _c3 = (a0, a1, a2, a3) => ({\n  \"p-slider p-component\": true,\n  \"p-disabled\": a0,\n  \"p-slider-horizontal\": a1,\n  \"p-slider-vertical\": a2,\n  \"p-slider-animate\": a3\n});\nconst _c4 = (a0, a1) => ({\n  position: \"absolute\",\n  \"inset-inline-start\": a0,\n  width: a1\n});\nconst _c5 = (a0, a1) => ({\n  position: \"absolute\",\n  bottom: a0,\n  height: a1\n});\nconst _c6 = a0 => ({\n  position: \"absolute\",\n  height: a0\n});\nconst _c7 = a0 => ({\n  position: \"absolute\",\n  width: a0\n});\nconst _c8 = (a0, a1) => ({\n  position: \"absolute\",\n  \"inset-inline-start\": a0,\n  bottom: a1\n});\nconst _c9 = a0 => ({\n  \"p-slider-handle-active\": a0\n});\nfunction Slider_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(2, _c4, ctx_r0.offset !== null && ctx_r0.offset !== undefined ? ctx_r0.offset + \"%\" : ctx_r0.handleValues[0] + \"%\", ctx_r0.diff ? ctx_r0.diff + \"%\" : ctx_r0.handleValues[1] - ctx_r0.handleValues[0] + \"%\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"range\");\n  }\n}\nfunction Slider_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(2, _c5, ctx_r0.offset !== null && ctx_r0.offset !== undefined ? ctx_r0.offset + \"%\" : ctx_r0.handleValues[0] + \"%\", ctx_r0.diff ? ctx_r0.diff + \"%\" : ctx_r0.handleValues[1] - ctx_r0.handleValues[0] + \"%\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"range\");\n  }\n}\nfunction Slider_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c6, ctx_r0.handleValue + \"%\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"range\");\n  }\n}\nfunction Slider_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c7, ctx_r0.handleValue + \"%\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"range\");\n  }\n}\nfunction Slider_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 9, 0);\n    i0.ɵɵlistener(\"touchstart\", function Slider_span_5_Template_span_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDragStart($event));\n    })(\"touchmove\", function Slider_span_5_Template_span_touchmove_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDrag($event));\n    })(\"touchend\", function Slider_span_5_Template_span_touchend_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDragEnd($event));\n    })(\"mousedown\", function Slider_span_5_Template_span_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onMouseDown($event));\n    })(\"keydown\", function Slider_span_5_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onKeyDown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"transition\", ctx_r0.dragging ? \"none\" : null);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(12, _c8, ctx_r0.orientation == \"horizontal\" ? ctx_r0.handleValue + \"%\" : null, ctx_r0.orientation == \"vertical\" ? ctx_r0.handleValue + \"%\" : null))(\"pAutoFocus\", ctx_r0.autofocus);\n    i0.ɵɵattribute(\"tabindex\", ctx_r0.disabled ? null : ctx_r0.tabindex)(\"aria-valuemin\", ctx_r0.min)(\"aria-valuenow\", ctx_r0.value)(\"aria-valuemax\", ctx_r0.max)(\"aria-labelledby\", ctx_r0.ariaLabelledBy)(\"aria-label\", ctx_r0.ariaLabel)(\"aria-orientation\", ctx_r0.orientation)(\"data-pc-section\", \"handle\");\n  }\n}\nfunction Slider_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 10, 1);\n    i0.ɵɵlistener(\"keydown\", function Slider_span_6_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onKeyDown($event, 0));\n    })(\"mousedown\", function Slider_span_6_Template_span_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onMouseDown($event, 0));\n    })(\"touchstart\", function Slider_span_6_Template_span_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDragStart($event, 0));\n    })(\"touchmove\", function Slider_span_6_Template_span_touchmove_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDrag($event));\n    })(\"touchend\", function Slider_span_6_Template_span_touchend_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDragEnd($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"transition\", ctx_r0.dragging ? \"none\" : null);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(13, _c8, ctx_r0.rangeStartLeft, ctx_r0.rangeStartBottom))(\"ngClass\", i0.ɵɵpureFunction1(16, _c9, ctx_r0.handleIndex == 0))(\"pAutoFocus\", ctx_r0.autofocus);\n    i0.ɵɵattribute(\"tabindex\", ctx_r0.disabled ? null : ctx_r0.tabindex)(\"aria-valuemin\", ctx_r0.min)(\"aria-valuenow\", ctx_r0.value ? ctx_r0.value[0] : null)(\"aria-valuemax\", ctx_r0.max)(\"aria-labelledby\", ctx_r0.ariaLabelledBy)(\"aria-label\", ctx_r0.ariaLabel)(\"aria-orientation\", ctx_r0.orientation)(\"data-pc-section\", \"startHandler\");\n  }\n}\nfunction Slider_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 11, 2);\n    i0.ɵɵlistener(\"keydown\", function Slider_span_7_Template_span_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onKeyDown($event, 1));\n    })(\"mousedown\", function Slider_span_7_Template_span_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onMouseDown($event, 1));\n    })(\"touchstart\", function Slider_span_7_Template_span_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDragStart($event, 1));\n    })(\"touchmove\", function Slider_span_7_Template_span_touchmove_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDrag($event));\n    })(\"touchend\", function Slider_span_7_Template_span_touchend_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onDragEnd($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"transition\", ctx_r0.dragging ? \"none\" : null);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(12, _c8, ctx_r0.rangeEndLeft, ctx_r0.rangeEndBottom))(\"ngClass\", i0.ɵɵpureFunction1(15, _c9, ctx_r0.handleIndex == 1));\n    i0.ɵɵattribute(\"tabindex\", ctx_r0.disabled ? null : ctx_r0.tabindex)(\"aria-valuemin\", ctx_r0.min)(\"aria-valuenow\", ctx_r0.value ? ctx_r0.value[1] : null)(\"aria-valuemax\", ctx_r0.max)(\"aria-labelledby\", ctx_r0.ariaLabelledBy)(\"aria-label\", ctx_r0.ariaLabel)(\"aria-orientation\", ctx_r0.orientation)(\"data-pc-section\", \"endHandler\");\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-slider {\n    position: relative;\n    background: ${dt('slider.track.background')};\n    border-radius: ${dt('slider.border.radius')};\n}\n\n.p-slider-handle {\n    cursor: grab;\n    touch-action: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: ${dt('slider.handle.height')};\n    width: ${dt('slider.handle.width')};\n    background: ${dt('slider.handle.background')};\n    border-radius: ${dt('slider.handle.border.radius')};\n    transition: background ${dt('slider.transition.duration')}, color ${dt('slider.transition.duration')}, border-color ${dt('slider.transition.duration')}, box-shadow ${dt('slider.transition.duration')}, outline-color ${dt('slider.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-slider-handle::before {\n    content: \"\";\n    width: ${dt('slider.handle.content.width')};\n    height: ${dt('slider.handle.content.height')};\n    display: block;\n    background: ${dt('slider.handle.content.background')};\n    border-radius: ${dt('slider.handle.content.border.radius')};\n    box-shadow: ${dt('slider.handle.content.shadow')};\n    transition: background ${dt('slider.transition.duration')};\n}\n\n.p-slider:not(.p-disabled) .p-slider-handle:hover {\n    background: ${dt('slider.handle.hover.background')};\n}\n\n.p-slider:not(.p-disabled) .p-slider-handle:hover::before {\n    background: ${dt('slider.handle.content.hover.background')};\n}\n\n.p-slider-handle:focus-visible {\n    border-color: ${dt('slider.handle.focus.border.color')};\n    box-shadow: ${dt('slider.handle.focus.ring.shadow')};\n    outline: ${dt('slider.handle.focus.ring.width')} ${dt('slider.handle.focus.ring.style')} ${dt('slider.handle.focus.ring.color')};\n    outline-offset: ${dt('slider.handle.focus.ring.offset')};\n}\n\n.p-slider-range {\n    display: block;\n    background: ${dt('slider.range.background')};\n    border-radius: ${dt('slider.border.radius')};\n}\n\n.p-slider.p-slider-horizontal {\n    height: ${dt('slider.track.size')};\n}\n\n.p-slider-horizontal .p-slider-range {\n    top: 0;\n    inset-inline-start: 0;\n    height: 100%;\n}\n\n.p-slider-horizontal .p-slider-handle {\n    top: 50%;\n    margin-top: calc(-1 * calc(${dt('slider.handle.height')} / 2));\n    margin-inline-start: calc(-1 * calc(${dt('slider.handle.width')} / 2));\n}\n\n.p-slider-vertical {\n    min-height: 100px;\n    width: ${dt('slider.track.size')};\n}\n\n.p-slider-vertical .p-slider-handle {\n    inset-inline-start: 50%;\n    margin-inline-start: calc(-1 * calc(${dt('slider.handle.width')} / 2));\n    margin-bottom: calc(-1 * calc(${dt('slider.handle.height')} / 2));\n}\n\n.p-slider-vertical .p-slider-range {\n    bottom: 0;\n    inset-inline-start: 0;\n    width: 100%;\n}\n`;\nconst inlineStyles = {\n  handle: {\n    position: 'absolute'\n  },\n  range: {\n    position: 'absolute'\n  }\n};\nconst classes = {\n  root: ({\n    props\n  }) => ['p-slider p-component', {\n    'p-disabled': props.disabled,\n    'p-slider-horizontal': props.orientation === 'horizontal',\n    'p-slider-vertical': props.orientation === 'vertical'\n  }],\n  range: 'p-slider-range',\n  handle: 'p-slider-handle'\n};\nclass SliderStyle extends BaseStyle {\n  name = 'slider';\n  theme = theme;\n  classes = classes;\n  inlineStyles = inlineStyles;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSliderStyle_BaseFactory;\n    return function SliderStyle_Factory(__ngFactoryType__) {\n      return (ɵSliderStyle_BaseFactory || (ɵSliderStyle_BaseFactory = i0.ɵɵgetInheritedFactory(SliderStyle)))(__ngFactoryType__ || SliderStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SliderStyle,\n    factory: SliderStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Slider is a component to provide input with a drag handle.\n *\n * [Live Demo](https://www.primeng.org/slider/)\n *\n * @module sliderstyle\n *\n */\nvar SliderClasses;\n(function (SliderClasses) {\n  /**\n   * Class name of the root element\n   */\n  SliderClasses[\"root\"] = \"p-slider\";\n  /**\n   * Class name of the range element\n   */\n  SliderClasses[\"range\"] = \"p-slider-range\";\n  /**\n   * Class name of the handle element\n   */\n  SliderClasses[\"handle\"] = \"p-slider-handle\";\n})(SliderClasses || (SliderClasses = {}));\nconst SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Slider),\n  multi: true\n};\n/**\n * Slider is a component to provide input with a drag handle.\n * @group Components\n */\nclass Slider extends BaseComponent {\n  /**\n   * When enabled, displays an animation on click of the slider bar.\n   * @group Props\n   */\n  animate;\n  /**\n   * When present, it specifies that the element should be disabled.\n   * @group Props\n   */\n  disabled;\n  /**\n   * Mininum boundary value.\n   * @group Props\n   */\n  min = 0;\n  /**\n   * Maximum boundary value.\n   * @group Props\n   */\n  max = 100;\n  /**\n   * Orientation of the slider.\n   * @group Props\n   */\n  orientation = 'horizontal';\n  /**\n   * Step factor to increment/decrement the value.\n   * @group Props\n   */\n  step;\n  /**\n   * When specified, allows two boundary values to be picked.\n   * @group Props\n   */\n  range;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  style;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Defines a string that labels the input for accessibility.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Index of the element in tabbing order.\n   * @group Props\n   */\n  tabindex = 0;\n  /**\n   * When present, it specifies that the component should automatically get focus on load.\n   * @group Props\n   */\n  autofocus;\n  /**\n   * Callback to invoke on value change.\n   * @param {SliderChangeEvent} event - Custom value change event.\n   * @group Emits\n   */\n  onChange = new EventEmitter();\n  /**\n   * Callback to invoke when slide ended.\n   * @param {SliderSlideEndEvent} event - Custom slide end event.\n   * @group Emits\n   */\n  onSlideEnd = new EventEmitter();\n  sliderHandle;\n  sliderHandleStart;\n  sliderHandleEnd;\n  _componentStyle = inject(SliderStyle);\n  value;\n  values;\n  handleValue;\n  handleValues = [];\n  diff;\n  offset;\n  bottom;\n  onModelChange = () => {};\n  onModelTouched = () => {};\n  dragging;\n  dragListener;\n  mouseupListener;\n  initX;\n  initY;\n  barWidth;\n  barHeight;\n  sliderHandleClick;\n  handleIndex = 0;\n  startHandleValue;\n  startx;\n  starty;\n  ngZone = inject(NgZone);\n  onMouseDown(event, index) {\n    if (this.disabled) {\n      return;\n    }\n    this.dragging = true;\n    this.updateDomData();\n    this.sliderHandleClick = true;\n    if (this.range && this.handleValues && this.handleValues[0] === this.max) {\n      this.handleIndex = 0;\n    } else {\n      this.handleIndex = index;\n    }\n    this.bindDragListeners();\n    event.target.focus();\n    event.preventDefault();\n    if (this.animate) {\n      removeClass(this.el.nativeElement.children[0], 'p-slider-animate');\n    }\n  }\n  onDragStart(event, index) {\n    if (this.disabled) {\n      return;\n    }\n    var touchobj = event.changedTouches[0];\n    this.startHandleValue = this.range ? this.handleValues[index] : this.handleValue;\n    this.dragging = true;\n    if (this.range && this.handleValues && this.handleValues[0] === this.max) {\n      this.handleIndex = 0;\n    } else {\n      this.handleIndex = index;\n    }\n    if (this.orientation === 'horizontal') {\n      this.startx = parseInt(touchobj.clientX, 10);\n      this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n    } else {\n      this.starty = parseInt(touchobj.clientY, 10);\n      this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n    }\n    if (this.animate) {\n      removeClass(this.el.nativeElement.children[0], 'p-slider-animate');\n    }\n    event.preventDefault();\n  }\n  onDrag(event) {\n    if (this.disabled) {\n      return;\n    }\n    var touchobj = event.changedTouches[0],\n      handleValue = 0;\n    if (this.orientation === 'horizontal') {\n      handleValue = Math.floor((parseInt(touchobj.clientX, 10) - this.startx) * 100 / this.barWidth) + this.startHandleValue;\n    } else {\n      handleValue = Math.floor((this.starty - parseInt(touchobj.clientY, 10)) * 100 / this.barHeight) + this.startHandleValue;\n    }\n    this.setValueFromHandle(event, handleValue);\n    event.preventDefault();\n  }\n  onDragEnd(event) {\n    if (this.disabled) {\n      return;\n    }\n    this.dragging = false;\n    if (this.range) this.onSlideEnd.emit({\n      originalEvent: event,\n      values: this.values\n    });else this.onSlideEnd.emit({\n      originalEvent: event,\n      value: this.value\n    });\n    if (this.animate) {\n      addClass(this.el.nativeElement.children[0], 'p-slider-animate');\n    }\n    event.preventDefault();\n  }\n  onBarClick(event) {\n    if (this.disabled) {\n      return;\n    }\n    if (!this.sliderHandleClick) {\n      this.updateDomData();\n      this.handleChange(event);\n      if (this.range) this.onSlideEnd.emit({\n        originalEvent: event,\n        values: this.values\n      });else this.onSlideEnd.emit({\n        originalEvent: event,\n        value: this.value\n      });\n    }\n    this.sliderHandleClick = false;\n  }\n  onKeyDown(event, index) {\n    this.handleIndex = index;\n    switch (event.code) {\n      case 'ArrowDown':\n      case 'ArrowLeft':\n        this.decrementValue(event, index);\n        event.preventDefault();\n        break;\n      case 'ArrowUp':\n      case 'ArrowRight':\n        this.incrementValue(event, index);\n        event.preventDefault();\n        break;\n      case 'PageDown':\n        this.decrementValue(event, index, true);\n        event.preventDefault();\n        break;\n      case 'PageUp':\n        this.incrementValue(event, index, true);\n        event.preventDefault();\n        break;\n      case 'Home':\n        this.updateValue(this.min, event);\n        event.preventDefault();\n        break;\n      case 'End':\n        this.updateValue(this.max, event);\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  }\n  decrementValue(event, index, pageKey = false) {\n    let newValue;\n    if (this.range) {\n      if (this.step) newValue = this.values[index] - this.step;else newValue = this.values[index] - 1;\n    } else {\n      if (this.step) newValue = this.value - this.step;else if (!this.step && pageKey) newValue = this.value - 10;else newValue = this.value - 1;\n    }\n    this.updateValue(newValue, event);\n    event.preventDefault();\n  }\n  incrementValue(event, index, pageKey = false) {\n    let newValue;\n    if (this.range) {\n      if (this.step) newValue = this.values[index] + this.step;else newValue = this.values[index] + 1;\n    } else {\n      if (this.step) newValue = this.value + this.step;else if (!this.step && pageKey) newValue = this.value + 10;else newValue = this.value + 1;\n    }\n    this.updateValue(newValue, event);\n    event.preventDefault();\n  }\n  handleChange(event) {\n    let handleValue = this.calculateHandleValue(event);\n    this.setValueFromHandle(event, handleValue);\n  }\n  bindDragListeners() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.ngZone.runOutsideAngular(() => {\n        const documentTarget = this.el ? this.el.nativeElement.ownerDocument : this.document;\n        if (!this.dragListener) {\n          this.dragListener = this.renderer.listen(documentTarget, 'mousemove', event => {\n            if (this.dragging) {\n              this.ngZone.run(() => {\n                this.handleChange(event);\n              });\n            }\n          });\n        }\n        if (!this.mouseupListener) {\n          this.mouseupListener = this.renderer.listen(documentTarget, 'mouseup', event => {\n            if (this.dragging) {\n              this.dragging = false;\n              this.ngZone.run(() => {\n                if (this.range) this.onSlideEnd.emit({\n                  originalEvent: event,\n                  values: this.values\n                });else this.onSlideEnd.emit({\n                  originalEvent: event,\n                  value: this.value\n                });\n                if (this.animate) {\n                  addClass(this.el.nativeElement.children[0], 'p-slider-animate');\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n  unbindDragListeners() {\n    if (this.dragListener) {\n      this.dragListener();\n      this.dragListener = null;\n    }\n    if (this.mouseupListener) {\n      this.mouseupListener();\n      this.mouseupListener = null;\n    }\n  }\n  setValueFromHandle(event, handleValue) {\n    let newValue = this.getValueFromHandle(handleValue);\n    if (this.range) {\n      if (this.step) {\n        this.handleStepChange(newValue, this.values[this.handleIndex]);\n      } else {\n        this.handleValues[this.handleIndex] = handleValue;\n        this.updateValue(newValue, event);\n      }\n    } else {\n      if (this.step) {\n        this.handleStepChange(newValue, this.value);\n      } else {\n        this.handleValue = handleValue;\n        this.updateValue(newValue, event);\n      }\n    }\n    this.cd.markForCheck();\n  }\n  handleStepChange(newValue, oldValue) {\n    let diff = newValue - oldValue;\n    let val = oldValue;\n    let _step = this.step;\n    if (diff < 0) {\n      val = oldValue + Math.ceil(newValue / _step - oldValue / _step) * _step;\n    } else if (diff > 0) {\n      val = oldValue + Math.floor(newValue / _step - oldValue / _step) * _step;\n    }\n    this.updateValue(val);\n    this.updateHandleValue();\n  }\n  writeValue(value) {\n    if (this.range) this.values = value || [0, 0];else this.value = value || 0;\n    this.updateHandleValue();\n    this.updateDiffAndOffset();\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  get rangeStartLeft() {\n    if (!this.isVertical()) return this.handleValues[0] > 100 ? 100 + '%' : this.handleValues[0] + '%';\n    return null;\n  }\n  get rangeStartBottom() {\n    return this.isVertical() ? this.handleValues[0] + '%' : 'auto';\n  }\n  get rangeEndLeft() {\n    return this.isVertical() ? null : this.handleValues[1] + '%';\n  }\n  get rangeEndBottom() {\n    return this.isVertical() ? this.handleValues[1] + '%' : 'auto';\n  }\n  isVertical() {\n    return this.orientation === 'vertical';\n  }\n  updateDomData() {\n    let rect = this.el.nativeElement.children[0].getBoundingClientRect();\n    this.initX = rect.left + getWindowScrollLeft();\n    this.initY = rect.top + getWindowScrollTop();\n    this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n    this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n  }\n  calculateHandleValue(event) {\n    if (this.orientation === 'horizontal') {\n      if (isRTL(this.el.nativeElement)) {\n        return (this.initX + this.barWidth - event.pageX) * 100 / this.barWidth;\n      } else {\n        return (event.pageX - this.initX) * 100 / this.barWidth;\n      }\n    } else {\n      return (this.initY + this.barHeight - event.pageY) * 100 / this.barHeight;\n    }\n  }\n  updateHandleValue() {\n    if (this.range) {\n      this.handleValues[0] = (this.values[0] < this.min ? 0 : this.values[0] - this.min) * 100 / (this.max - this.min);\n      this.handleValues[1] = (this.values[1] > this.max ? 100 : this.values[1] - this.min) * 100 / (this.max - this.min);\n    } else {\n      if (this.value < this.min) this.handleValue = 0;else if (this.value > this.max) this.handleValue = 100;else this.handleValue = (this.value - this.min) * 100 / (this.max - this.min);\n    }\n    if (this.step) {\n      this.updateDiffAndOffset();\n    }\n  }\n  updateDiffAndOffset() {\n    this.diff = this.getDiff();\n    this.offset = this.getOffset();\n  }\n  getDiff() {\n    return Math.abs(this.handleValues[0] - this.handleValues[1]);\n  }\n  getOffset() {\n    return Math.min(this.handleValues[0], this.handleValues[1]);\n  }\n  updateValue(val, event) {\n    if (this.range) {\n      let value = val;\n      if (this.handleIndex == 0) {\n        if (value < this.min) {\n          value = this.min;\n          this.handleValues[0] = 0;\n        } else if (value > this.values[1]) {\n          if (value > this.max) {\n            value = this.max;\n            this.handleValues[0] = 100;\n          }\n        }\n        this.sliderHandleStart?.nativeElement.focus();\n      } else {\n        if (value > this.max) {\n          value = this.max;\n          this.handleValues[1] = 100;\n          this.offset = this.handleValues[1];\n        } else if (value < this.min) {\n          value = this.min;\n          this.handleValues[1] = 0;\n        } else if (value < this.values[0]) {\n          this.offset = this.handleValues[1];\n        }\n        this.sliderHandleEnd?.nativeElement.focus();\n      }\n      if (this.step) {\n        this.updateHandleValue();\n      } else {\n        this.updateDiffAndOffset();\n      }\n      this.values[this.handleIndex] = this.getNormalizedValue(value);\n      let newValues = [this.minVal, this.maxVal];\n      this.onModelChange(newValues);\n      this.onChange.emit({\n        event: event,\n        values: this.values\n      });\n    } else {\n      if (val < this.min) {\n        val = this.min;\n        this.handleValue = 0;\n      } else if (val > this.max) {\n        val = this.max;\n        this.handleValue = 100;\n      }\n      this.value = this.getNormalizedValue(val);\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        event: event,\n        value: this.value\n      });\n      this.sliderHandle?.nativeElement.focus();\n    }\n    this.updateHandleValue();\n  }\n  getValueFromHandle(handleValue) {\n    return (this.max - this.min) * (handleValue / 100) + this.min;\n  }\n  getDecimalsCount(value) {\n    if (value && Math.floor(value) !== value) return value.toString().split('.')[1].length || 0;\n    return 0;\n  }\n  getNormalizedValue(val) {\n    let decimalsCount = this.getDecimalsCount(this.step);\n    if (decimalsCount > 0) {\n      return +parseFloat(val.toString()).toFixed(decimalsCount);\n    } else {\n      return Math.floor(val);\n    }\n  }\n  ngOnDestroy() {\n    this.unbindDragListeners();\n    super.ngOnDestroy();\n  }\n  get minVal() {\n    return Math.min(this.values[1], this.values[0]);\n  }\n  get maxVal() {\n    return Math.max(this.values[1], this.values[0]);\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSlider_BaseFactory;\n    return function Slider_Factory(__ngFactoryType__) {\n      return (ɵSlider_BaseFactory || (ɵSlider_BaseFactory = i0.ɵɵgetInheritedFactory(Slider)))(__ngFactoryType__ || Slider);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Slider,\n    selectors: [[\"p-slider\"]],\n    viewQuery: function Slider_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sliderHandle = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sliderHandleStart = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sliderHandleEnd = _t.first);\n      }\n    },\n    inputs: {\n      animate: [2, \"animate\", \"animate\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      min: [2, \"min\", \"min\", numberAttribute],\n      max: [2, \"max\", \"max\", numberAttribute],\n      orientation: \"orientation\",\n      step: [2, \"step\", \"step\", numberAttribute],\n      range: [2, \"range\", \"range\", booleanAttribute],\n      style: \"style\",\n      styleClass: \"styleClass\",\n      ariaLabel: \"ariaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n      autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute]\n    },\n    outputs: {\n      onChange: \"onChange\",\n      onSlideEnd: \"onSlideEnd\"\n    },\n    features: [i0.ɵɵProvidersFeature([SLIDER_VALUE_ACCESSOR, SliderStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 8,\n    vars: 18,\n    consts: [[\"sliderHandle\", \"\"], [\"sliderHandleStart\", \"\"], [\"sliderHandleEnd\", \"\"], [3, \"click\", \"ngStyle\", \"ngClass\"], [\"class\", \"p-slider-range\", 3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"p-slider-handle\", \"role\", \"slider\", 3, \"transition\", \"ngStyle\", \"pAutoFocus\", \"touchstart\", \"touchmove\", \"touchend\", \"mousedown\", \"keydown\", 4, \"ngIf\"], [\"class\", \"p-slider-handle\", \"role\", \"slider\", 3, \"transition\", \"ngStyle\", \"ngClass\", \"pAutoFocus\", \"keydown\", \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", 4, \"ngIf\"], [\"class\", \"p-slider-handle\", \"role\", \"slider\", 3, \"transition\", \"ngStyle\", \"ngClass\", \"keydown\", \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", 4, \"ngIf\"], [1, \"p-slider-range\", 3, \"ngStyle\"], [\"role\", \"slider\", 1, \"p-slider-handle\", 3, \"touchstart\", \"touchmove\", \"touchend\", \"mousedown\", \"keydown\", \"ngStyle\", \"pAutoFocus\"], [\"role\", \"slider\", 1, \"p-slider-handle\", 3, \"keydown\", \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", \"ngStyle\", \"ngClass\", \"pAutoFocus\"], [\"role\", \"slider\", 1, \"p-slider-handle\", 3, \"keydown\", \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", \"ngStyle\", \"ngClass\"]],\n    template: function Slider_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 3);\n        i0.ɵɵlistener(\"click\", function Slider_Template_div_click_0_listener($event) {\n          return ctx.onBarClick($event);\n        });\n        i0.ɵɵtemplate(1, Slider_span_1_Template, 1, 5, \"span\", 4)(2, Slider_span_2_Template, 1, 5, \"span\", 4)(3, Slider_span_3_Template, 1, 4, \"span\", 4)(4, Slider_span_4_Template, 1, 4, \"span\", 4)(5, Slider_span_5_Template, 2, 15, \"span\", 5)(6, Slider_span_6_Template, 2, 18, \"span\", 6)(7, Slider_span_7_Template, 2, 17, \"span\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction4(13, _c3, ctx.disabled, ctx.orientation == \"horizontal\", ctx.orientation == \"vertical\", ctx.animate));\n        i0.ɵɵattribute(\"data-pc-name\", \"slider\")(\"data-pc-section\", \"root\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.range && ctx.orientation == \"horizontal\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.range && ctx.orientation == \"vertical\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.range && ctx.orientation == \"vertical\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.range && ctx.orientation == \"horizontal\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.range);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.range);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.range);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgStyle, AutoFocus, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Slider, [{\n    type: Component,\n    args: [{\n      selector: 'p-slider',\n      standalone: true,\n      imports: [CommonModule, AutoFocus, SharedModule],\n      template: `\n        <div\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-slider p-component': true,\n                'p-disabled': disabled,\n                'p-slider-horizontal': orientation == 'horizontal',\n                'p-slider-vertical': orientation == 'vertical',\n                'p-slider-animate': animate\n            }\"\n            (click)=\"onBarClick($event)\"\n            [attr.data-pc-name]=\"'slider'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <span\n                *ngIf=\"range && orientation == 'horizontal'\"\n                class=\"p-slider-range\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    'inset-inline-start': offset !== null && offset !== undefined ? offset + '%' : handleValues[0] + '%',\n                    width: diff ? diff + '%' : handleValues[1] - handleValues[0] + '%'\n                }\"\n                [attr.data-pc-section]=\"'range'\"\n            ></span>\n            <span\n                *ngIf=\"range && orientation == 'vertical'\"\n                class=\"p-slider-range\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    bottom: offset !== null && offset !== undefined ? offset + '%' : handleValues[0] + '%',\n                    height: diff ? diff + '%' : handleValues[1] - handleValues[0] + '%'\n                }\"\n                [attr.data-pc-section]=\"'range'\"\n            ></span>\n            <span *ngIf=\"!range && orientation == 'vertical'\" class=\"p-slider-range\" [attr.data-pc-section]=\"'range'\" [ngStyle]=\"{ position: 'absolute', height: handleValue + '%' }\"></span>\n            <span *ngIf=\"!range && orientation == 'horizontal'\" class=\"p-slider-range\" [attr.data-pc-section]=\"'range'\" [ngStyle]=\"{ position: 'absolute', width: handleValue + '%' }\"></span>\n            <span\n                *ngIf=\"!range\"\n                #sliderHandle\n                class=\"p-slider-handle\"\n                [style.transition]=\"dragging ? 'none' : null\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    'inset-inline-start': orientation == 'horizontal' ? handleValue + '%' : null,\n                    bottom: orientation == 'vertical' ? handleValue + '%' : null\n                }\"\n                (touchstart)=\"onDragStart($event)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'handle'\"\n                [pAutoFocus]=\"autofocus\"\n            ></span>\n            <span\n                *ngIf=\"range\"\n                #sliderHandleStart\n                [style.transition]=\"dragging ? 'none' : null\"\n                class=\"p-slider-handle\"\n                [ngStyle]=\"{ position: 'absolute', 'inset-inline-start': rangeStartLeft, bottom: rangeStartBottom }\"\n                [ngClass]=\"{ 'p-slider-handle-active': handleIndex == 0 }\"\n                (keydown)=\"onKeyDown($event, 0)\"\n                (mousedown)=\"onMouseDown($event, 0)\"\n                (touchstart)=\"onDragStart($event, 0)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value ? value[0] : null\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'startHandler'\"\n                [pAutoFocus]=\"autofocus\"\n            ></span>\n            <span\n                *ngIf=\"range\"\n                #sliderHandleEnd\n                [style.transition]=\"dragging ? 'none' : null\"\n                class=\"p-slider-handle\"\n                [ngStyle]=\"{ position: 'absolute', 'inset-inline-start': rangeEndLeft, bottom: rangeEndBottom }\"\n                [ngClass]=\"{ 'p-slider-handle-active': handleIndex == 1 }\"\n                (keydown)=\"onKeyDown($event, 1)\"\n                (mousedown)=\"onMouseDown($event, 1)\"\n                (touchstart)=\"onDragStart($event, 1)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value ? value[1] : null\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'endHandler'\"\n            ></span>\n        </div>\n    `,\n      providers: [SLIDER_VALUE_ACCESSOR, SliderStyle],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    animate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    min: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    max: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    orientation: [{\n      type: Input\n    }],\n    step: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    range: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    autofocus: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onSlideEnd: [{\n      type: Output\n    }],\n    sliderHandle: [{\n      type: ViewChild,\n      args: ['sliderHandle']\n    }],\n    sliderHandleStart: [{\n      type: ViewChild,\n      args: ['sliderHandleStart']\n    }],\n    sliderHandleEnd: [{\n      type: ViewChild,\n      args: ['sliderHandleEnd']\n    }]\n  });\n})();\nclass SliderModule {\n  static ɵfac = function SliderModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SliderModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SliderModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Slider, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Slider, SharedModule],\n      exports: [Slider, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SLIDER_VALUE_ACCESSOR, Slider, SliderClasses, SliderModule, SliderStyle };","map":{"version":3,"names":["i1","isPlatformBrowser","CommonModule","i0","Injectable","forwardRef","EventEmitter","inject","NgZone","booleanAttribute","numberAttribute","ViewChild","Output","Input","ViewEncapsulation","ChangeDetectionStrategy","Component","NgModule","NG_VALUE_ACCESSOR","removeClass","addClass","getWindowScrollLeft","getWindowScrollTop","isRTL","SharedModule","AutoFocus","BaseComponent","BaseStyle","_c0","_c1","_c2","_c3","a0","a1","a2","a3","_c4","position","width","_c5","bottom","height","_c6","_c7","_c8","_c9","Slider_span_1_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","ɵɵpureFunction2","offset","undefined","handleValues","diff","ɵɵattribute","Slider_span_2_Template","Slider_span_3_Template","ɵɵpureFunction1","handleValue","Slider_span_4_Template","Slider_span_5_Template","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","Slider_span_5_Template_span_touchstart_0_listener","$event","ɵɵrestoreView","ɵɵresetView","onDragStart","Slider_span_5_Template_span_touchmove_0_listener","onDrag","Slider_span_5_Template_span_touchend_0_listener","onDragEnd","Slider_span_5_Template_span_mousedown_0_listener","onMouseDown","Slider_span_5_Template_span_keydown_0_listener","onKeyDown","ɵɵelementEnd","ɵɵstyleProp","dragging","orientation","autofocus","disabled","tabindex","min","value","max","ariaLabelledBy","ariaLabel","Slider_span_6_Template","_r3","Slider_span_6_Template_span_keydown_0_listener","Slider_span_6_Template_span_mousedown_0_listener","Slider_span_6_Template_span_touchstart_0_listener","Slider_span_6_Template_span_touchmove_0_listener","Slider_span_6_Template_span_touchend_0_listener","rangeStartLeft","rangeStartBottom","handleIndex","Slider_span_7_Template","_r4","Slider_span_7_Template_span_keydown_0_listener","Slider_span_7_Template_span_mousedown_0_listener","Slider_span_7_Template_span_touchstart_0_listener","Slider_span_7_Template_span_touchmove_0_listener","Slider_span_7_Template_span_touchend_0_listener","rangeEndLeft","rangeEndBottom","theme","dt","inlineStyles","handle","range","classes","root","props","SliderStyle","name","ɵfac","ɵSliderStyle_BaseFactory","SliderStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","SliderClasses","SLIDER_VALUE_ACCESSOR","provide","useExisting","Slider","multi","animate","step","style","styleClass","onChange","onSlideEnd","sliderHandle","sliderHandleStart","sliderHandleEnd","_componentStyle","values","onModelChange","onModelTouched","dragListener","mouseupListener","initX","initY","barWidth","barHeight","sliderHandleClick","startHandleValue","startx","starty","ngZone","event","index","updateDomData","bindDragListeners","target","focus","preventDefault","el","nativeElement","children","touchobj","changedTouches","parseInt","clientX","offsetWidth","clientY","offsetHeight","Math","floor","setValueFromHandle","emit","originalEvent","onBarClick","handleChange","code","decrementValue","incrementValue","updateValue","pageKey","newValue","calculateHandleValue","platformId","runOutsideAngular","documentTarget","ownerDocument","document","renderer","listen","run","unbindDragListeners","getValueFromHandle","handleStepChange","cd","markForCheck","oldValue","val","_step","ceil","updateHandleValue","writeValue","updateDiffAndOffset","registerOnChange","fn","registerOnTouched","setDisabledState","isVertical","rect","getBoundingClientRect","left","top","pageX","pageY","getDiff","getOffset","abs","getNormalizedValue","newValues","minVal","maxVal","getDecimalsCount","toString","split","length","decimalsCount","parseFloat","toFixed","ngOnDestroy","ɵSlider_BaseFactory","Slider_Factory","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","Slider_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","outputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","Slider_Template","Slider_Template_div_click_0_listener","ɵɵtemplate","ɵɵclassMap","ɵɵpureFunction4","ɵɵadvance","dependencies","NgClass","NgIf","NgStyle","encapsulation","changeDetection","args","selector","standalone","imports","providers","OnPush","None","transform","SliderModule","SliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-slider.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, inject, NgZone, booleanAttribute, numberAttribute, ViewChild, Output, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { removeClass, addClass, getWindowScrollLeft, getWindowScrollTop, isRTL } from '@primeuix/utils';\nimport { SharedModule } from 'primeng/api';\nimport { AutoFocus } from 'primeng/autofocus';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-slider {\n    position: relative;\n    background: ${dt('slider.track.background')};\n    border-radius: ${dt('slider.border.radius')};\n}\n\n.p-slider-handle {\n    cursor: grab;\n    touch-action: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: ${dt('slider.handle.height')};\n    width: ${dt('slider.handle.width')};\n    background: ${dt('slider.handle.background')};\n    border-radius: ${dt('slider.handle.border.radius')};\n    transition: background ${dt('slider.transition.duration')}, color ${dt('slider.transition.duration')}, border-color ${dt('slider.transition.duration')}, box-shadow ${dt('slider.transition.duration')}, outline-color ${dt('slider.transition.duration')};\n    outline-color: transparent;\n}\n\n.p-slider-handle::before {\n    content: \"\";\n    width: ${dt('slider.handle.content.width')};\n    height: ${dt('slider.handle.content.height')};\n    display: block;\n    background: ${dt('slider.handle.content.background')};\n    border-radius: ${dt('slider.handle.content.border.radius')};\n    box-shadow: ${dt('slider.handle.content.shadow')};\n    transition: background ${dt('slider.transition.duration')};\n}\n\n.p-slider:not(.p-disabled) .p-slider-handle:hover {\n    background: ${dt('slider.handle.hover.background')};\n}\n\n.p-slider:not(.p-disabled) .p-slider-handle:hover::before {\n    background: ${dt('slider.handle.content.hover.background')};\n}\n\n.p-slider-handle:focus-visible {\n    border-color: ${dt('slider.handle.focus.border.color')};\n    box-shadow: ${dt('slider.handle.focus.ring.shadow')};\n    outline: ${dt('slider.handle.focus.ring.width')} ${dt('slider.handle.focus.ring.style')} ${dt('slider.handle.focus.ring.color')};\n    outline-offset: ${dt('slider.handle.focus.ring.offset')};\n}\n\n.p-slider-range {\n    display: block;\n    background: ${dt('slider.range.background')};\n    border-radius: ${dt('slider.border.radius')};\n}\n\n.p-slider.p-slider-horizontal {\n    height: ${dt('slider.track.size')};\n}\n\n.p-slider-horizontal .p-slider-range {\n    top: 0;\n    inset-inline-start: 0;\n    height: 100%;\n}\n\n.p-slider-horizontal .p-slider-handle {\n    top: 50%;\n    margin-top: calc(-1 * calc(${dt('slider.handle.height')} / 2));\n    margin-inline-start: calc(-1 * calc(${dt('slider.handle.width')} / 2));\n}\n\n.p-slider-vertical {\n    min-height: 100px;\n    width: ${dt('slider.track.size')};\n}\n\n.p-slider-vertical .p-slider-handle {\n    inset-inline-start: 50%;\n    margin-inline-start: calc(-1 * calc(${dt('slider.handle.width')} / 2));\n    margin-bottom: calc(-1 * calc(${dt('slider.handle.height')} / 2));\n}\n\n.p-slider-vertical .p-slider-range {\n    bottom: 0;\n    inset-inline-start: 0;\n    width: 100%;\n}\n`;\nconst inlineStyles = {\n    handle: { position: 'absolute' },\n    range: { position: 'absolute' }\n};\nconst classes = {\n    root: ({ props }) => [\n        'p-slider p-component',\n        {\n            'p-disabled': props.disabled,\n            'p-slider-horizontal': props.orientation === 'horizontal',\n            'p-slider-vertical': props.orientation === 'vertical'\n        }\n    ],\n    range: 'p-slider-range',\n    handle: 'p-slider-handle'\n};\nclass SliderStyle extends BaseStyle {\n    name = 'slider';\n    theme = theme;\n    classes = classes;\n    inlineStyles = inlineStyles;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SliderStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SliderStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SliderStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Slider is a component to provide input with a drag handle.\n *\n * [Live Demo](https://www.primeng.org/slider/)\n *\n * @module sliderstyle\n *\n */\nvar SliderClasses;\n(function (SliderClasses) {\n    /**\n     * Class name of the root element\n     */\n    SliderClasses[\"root\"] = \"p-slider\";\n    /**\n     * Class name of the range element\n     */\n    SliderClasses[\"range\"] = \"p-slider-range\";\n    /**\n     * Class name of the handle element\n     */\n    SliderClasses[\"handle\"] = \"p-slider-handle\";\n})(SliderClasses || (SliderClasses = {}));\n\nconst SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => Slider),\n    multi: true\n};\n/**\n * Slider is a component to provide input with a drag handle.\n * @group Components\n */\nclass Slider extends BaseComponent {\n    /**\n     * When enabled, displays an animation on click of the slider bar.\n     * @group Props\n     */\n    animate;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Mininum boundary value.\n     * @group Props\n     */\n    min = 0;\n    /**\n     * Maximum boundary value.\n     * @group Props\n     */\n    max = 100;\n    /**\n     * Orientation of the slider.\n     * @group Props\n     */\n    orientation = 'horizontal';\n    /**\n     * Step factor to increment/decrement the value.\n     * @group Props\n     */\n    step;\n    /**\n     * When specified, allows two boundary values to be picked.\n     * @group Props\n     */\n    range;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Defines a string that labels the input for accessibility.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus;\n    /**\n     * Callback to invoke on value change.\n     * @param {SliderChangeEvent} event - Custom value change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when slide ended.\n     * @param {SliderSlideEndEvent} event - Custom slide end event.\n     * @group Emits\n     */\n    onSlideEnd = new EventEmitter();\n    sliderHandle;\n    sliderHandleStart;\n    sliderHandleEnd;\n    _componentStyle = inject(SliderStyle);\n    value;\n    values;\n    handleValue;\n    handleValues = [];\n    diff;\n    offset;\n    bottom;\n    onModelChange = () => { };\n    onModelTouched = () => { };\n    dragging;\n    dragListener;\n    mouseupListener;\n    initX;\n    initY;\n    barWidth;\n    barHeight;\n    sliderHandleClick;\n    handleIndex = 0;\n    startHandleValue;\n    startx;\n    starty;\n    ngZone = inject(NgZone);\n    onMouseDown(event, index) {\n        if (this.disabled) {\n            return;\n        }\n        this.dragging = true;\n        this.updateDomData();\n        this.sliderHandleClick = true;\n        if (this.range && this.handleValues && this.handleValues[0] === this.max) {\n            this.handleIndex = 0;\n        }\n        else {\n            this.handleIndex = index;\n        }\n        this.bindDragListeners();\n        event.target.focus();\n        event.preventDefault();\n        if (this.animate) {\n            removeClass(this.el.nativeElement.children[0], 'p-slider-animate');\n        }\n    }\n    onDragStart(event, index) {\n        if (this.disabled) {\n            return;\n        }\n        var touchobj = event.changedTouches[0];\n        this.startHandleValue = this.range ? this.handleValues[index] : this.handleValue;\n        this.dragging = true;\n        if (this.range && this.handleValues && this.handleValues[0] === this.max) {\n            this.handleIndex = 0;\n        }\n        else {\n            this.handleIndex = index;\n        }\n        if (this.orientation === 'horizontal') {\n            this.startx = parseInt(touchobj.clientX, 10);\n            this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n        }\n        else {\n            this.starty = parseInt(touchobj.clientY, 10);\n            this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n        }\n        if (this.animate) {\n            removeClass(this.el.nativeElement.children[0], 'p-slider-animate');\n        }\n        event.preventDefault();\n    }\n    onDrag(event) {\n        if (this.disabled) {\n            return;\n        }\n        var touchobj = event.changedTouches[0], handleValue = 0;\n        if (this.orientation === 'horizontal') {\n            handleValue = Math.floor(((parseInt(touchobj.clientX, 10) - this.startx) * 100) / this.barWidth) + this.startHandleValue;\n        }\n        else {\n            handleValue = Math.floor(((this.starty - parseInt(touchobj.clientY, 10)) * 100) / this.barHeight) + this.startHandleValue;\n        }\n        this.setValueFromHandle(event, handleValue);\n        event.preventDefault();\n    }\n    onDragEnd(event) {\n        if (this.disabled) {\n            return;\n        }\n        this.dragging = false;\n        if (this.range)\n            this.onSlideEnd.emit({ originalEvent: event, values: this.values });\n        else\n            this.onSlideEnd.emit({ originalEvent: event, value: this.value });\n        if (this.animate) {\n            addClass(this.el.nativeElement.children[0], 'p-slider-animate');\n        }\n        event.preventDefault();\n    }\n    onBarClick(event) {\n        if (this.disabled) {\n            return;\n        }\n        if (!this.sliderHandleClick) {\n            this.updateDomData();\n            this.handleChange(event);\n            if (this.range)\n                this.onSlideEnd.emit({ originalEvent: event, values: this.values });\n            else\n                this.onSlideEnd.emit({ originalEvent: event, value: this.value });\n        }\n        this.sliderHandleClick = false;\n    }\n    onKeyDown(event, index) {\n        this.handleIndex = index;\n        switch (event.code) {\n            case 'ArrowDown':\n            case 'ArrowLeft':\n                this.decrementValue(event, index);\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n            case 'ArrowRight':\n                this.incrementValue(event, index);\n                event.preventDefault();\n                break;\n            case 'PageDown':\n                this.decrementValue(event, index, true);\n                event.preventDefault();\n                break;\n            case 'PageUp':\n                this.incrementValue(event, index, true);\n                event.preventDefault();\n                break;\n            case 'Home':\n                this.updateValue(this.min, event);\n                event.preventDefault();\n                break;\n            case 'End':\n                this.updateValue(this.max, event);\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    }\n    decrementValue(event, index, pageKey = false) {\n        let newValue;\n        if (this.range) {\n            if (this.step)\n                newValue = this.values[index] - this.step;\n            else\n                newValue = this.values[index] - 1;\n        }\n        else {\n            if (this.step)\n                newValue = this.value - this.step;\n            else if (!this.step && pageKey)\n                newValue = this.value - 10;\n            else\n                newValue = this.value - 1;\n        }\n        this.updateValue(newValue, event);\n        event.preventDefault();\n    }\n    incrementValue(event, index, pageKey = false) {\n        let newValue;\n        if (this.range) {\n            if (this.step)\n                newValue = this.values[index] + this.step;\n            else\n                newValue = this.values[index] + 1;\n        }\n        else {\n            if (this.step)\n                newValue = this.value + this.step;\n            else if (!this.step && pageKey)\n                newValue = this.value + 10;\n            else\n                newValue = this.value + 1;\n        }\n        this.updateValue(newValue, event);\n        event.preventDefault();\n    }\n    handleChange(event) {\n        let handleValue = this.calculateHandleValue(event);\n        this.setValueFromHandle(event, handleValue);\n    }\n    bindDragListeners() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.ngZone.runOutsideAngular(() => {\n                const documentTarget = this.el ? this.el.nativeElement.ownerDocument : this.document;\n                if (!this.dragListener) {\n                    this.dragListener = this.renderer.listen(documentTarget, 'mousemove', (event) => {\n                        if (this.dragging) {\n                            this.ngZone.run(() => {\n                                this.handleChange(event);\n                            });\n                        }\n                    });\n                }\n                if (!this.mouseupListener) {\n                    this.mouseupListener = this.renderer.listen(documentTarget, 'mouseup', (event) => {\n                        if (this.dragging) {\n                            this.dragging = false;\n                            this.ngZone.run(() => {\n                                if (this.range)\n                                    this.onSlideEnd.emit({ originalEvent: event, values: this.values });\n                                else\n                                    this.onSlideEnd.emit({ originalEvent: event, value: this.value });\n                                if (this.animate) {\n                                    addClass(this.el.nativeElement.children[0], 'p-slider-animate');\n                                }\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n    unbindDragListeners() {\n        if (this.dragListener) {\n            this.dragListener();\n            this.dragListener = null;\n        }\n        if (this.mouseupListener) {\n            this.mouseupListener();\n            this.mouseupListener = null;\n        }\n    }\n    setValueFromHandle(event, handleValue) {\n        let newValue = this.getValueFromHandle(handleValue);\n        if (this.range) {\n            if (this.step) {\n                this.handleStepChange(newValue, this.values[this.handleIndex]);\n            }\n            else {\n                this.handleValues[this.handleIndex] = handleValue;\n                this.updateValue(newValue, event);\n            }\n        }\n        else {\n            if (this.step) {\n                this.handleStepChange(newValue, this.value);\n            }\n            else {\n                this.handleValue = handleValue;\n                this.updateValue(newValue, event);\n            }\n        }\n        this.cd.markForCheck();\n    }\n    handleStepChange(newValue, oldValue) {\n        let diff = newValue - oldValue;\n        let val = oldValue;\n        let _step = this.step;\n        if (diff < 0) {\n            val = oldValue + Math.ceil(newValue / _step - oldValue / _step) * _step;\n        }\n        else if (diff > 0) {\n            val = oldValue + Math.floor(newValue / _step - oldValue / _step) * _step;\n        }\n        this.updateValue(val);\n        this.updateHandleValue();\n    }\n    writeValue(value) {\n        if (this.range)\n            this.values = value || [0, 0];\n        else\n            this.value = value || 0;\n        this.updateHandleValue();\n        this.updateDiffAndOffset();\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    get rangeStartLeft() {\n        if (!this.isVertical())\n            return this.handleValues[0] > 100 ? 100 + '%' : this.handleValues[0] + '%';\n        return null;\n    }\n    get rangeStartBottom() {\n        return this.isVertical() ? this.handleValues[0] + '%' : 'auto';\n    }\n    get rangeEndLeft() {\n        return this.isVertical() ? null : this.handleValues[1] + '%';\n    }\n    get rangeEndBottom() {\n        return this.isVertical() ? this.handleValues[1] + '%' : 'auto';\n    }\n    isVertical() {\n        return this.orientation === 'vertical';\n    }\n    updateDomData() {\n        let rect = this.el.nativeElement.children[0].getBoundingClientRect();\n        this.initX = rect.left + getWindowScrollLeft();\n        this.initY = rect.top + getWindowScrollTop();\n        this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n        this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n    }\n    calculateHandleValue(event) {\n        if (this.orientation === 'horizontal') {\n            if (isRTL(this.el.nativeElement)) {\n                return ((this.initX + this.barWidth - event.pageX) * 100) / this.barWidth;\n            }\n            else {\n                return ((event.pageX - this.initX) * 100) / this.barWidth;\n            }\n        }\n        else {\n            return ((this.initY + this.barHeight - event.pageY) * 100) / this.barHeight;\n        }\n    }\n    updateHandleValue() {\n        if (this.range) {\n            this.handleValues[0] = ((this.values[0] < this.min ? 0 : this.values[0] - this.min) * 100) / (this.max - this.min);\n            this.handleValues[1] = ((this.values[1] > this.max ? 100 : this.values[1] - this.min) * 100) / (this.max - this.min);\n        }\n        else {\n            if (this.value < this.min)\n                this.handleValue = 0;\n            else if (this.value > this.max)\n                this.handleValue = 100;\n            else\n                this.handleValue = ((this.value - this.min) * 100) / (this.max - this.min);\n        }\n        if (this.step) {\n            this.updateDiffAndOffset();\n        }\n    }\n    updateDiffAndOffset() {\n        this.diff = this.getDiff();\n        this.offset = this.getOffset();\n    }\n    getDiff() {\n        return Math.abs(this.handleValues[0] - this.handleValues[1]);\n    }\n    getOffset() {\n        return Math.min(this.handleValues[0], this.handleValues[1]);\n    }\n    updateValue(val, event) {\n        if (this.range) {\n            let value = val;\n            if (this.handleIndex == 0) {\n                if (value < this.min) {\n                    value = this.min;\n                    this.handleValues[0] = 0;\n                }\n                else if (value > this.values[1]) {\n                    if (value > this.max) {\n                        value = this.max;\n                        this.handleValues[0] = 100;\n                    }\n                }\n                this.sliderHandleStart?.nativeElement.focus();\n            }\n            else {\n                if (value > this.max) {\n                    value = this.max;\n                    this.handleValues[1] = 100;\n                    this.offset = this.handleValues[1];\n                }\n                else if (value < this.min) {\n                    value = this.min;\n                    this.handleValues[1] = 0;\n                }\n                else if (value < this.values[0]) {\n                    this.offset = this.handleValues[1];\n                }\n                this.sliderHandleEnd?.nativeElement.focus();\n            }\n            if (this.step) {\n                this.updateHandleValue();\n            }\n            else {\n                this.updateDiffAndOffset();\n            }\n            this.values[this.handleIndex] = this.getNormalizedValue(value);\n            let newValues = [this.minVal, this.maxVal];\n            this.onModelChange(newValues);\n            this.onChange.emit({ event: event, values: this.values });\n        }\n        else {\n            if (val < this.min) {\n                val = this.min;\n                this.handleValue = 0;\n            }\n            else if (val > this.max) {\n                val = this.max;\n                this.handleValue = 100;\n            }\n            this.value = this.getNormalizedValue(val);\n            this.onModelChange(this.value);\n            this.onChange.emit({ event: event, value: this.value });\n            this.sliderHandle?.nativeElement.focus();\n        }\n        this.updateHandleValue();\n    }\n    getValueFromHandle(handleValue) {\n        return (this.max - this.min) * (handleValue / 100) + this.min;\n    }\n    getDecimalsCount(value) {\n        if (value && Math.floor(value) !== value)\n            return value.toString().split('.')[1].length || 0;\n        return 0;\n    }\n    getNormalizedValue(val) {\n        let decimalsCount = this.getDecimalsCount(this.step);\n        if (decimalsCount > 0) {\n            return +parseFloat(val.toString()).toFixed(decimalsCount);\n        }\n        else {\n            return Math.floor(val);\n        }\n    }\n    ngOnDestroy() {\n        this.unbindDragListeners();\n        super.ngOnDestroy();\n    }\n    get minVal() {\n        return Math.min(this.values[1], this.values[0]);\n    }\n    get maxVal() {\n        return Math.max(this.values[1], this.values[0]);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Slider, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"19.2.10\", type: Slider, isStandalone: true, selector: \"p-slider\", inputs: { animate: [\"animate\", \"animate\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], min: [\"min\", \"min\", numberAttribute], max: [\"max\", \"max\", numberAttribute], orientation: \"orientation\", step: [\"step\", \"step\", numberAttribute], range: [\"range\", \"range\", booleanAttribute], style: \"style\", styleClass: \"styleClass\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", tabindex: [\"tabindex\", \"tabindex\", numberAttribute], autofocus: [\"autofocus\", \"autofocus\", booleanAttribute] }, outputs: { onChange: \"onChange\", onSlideEnd: \"onSlideEnd\" }, providers: [SLIDER_VALUE_ACCESSOR, SliderStyle], viewQueries: [{ propertyName: \"sliderHandle\", first: true, predicate: [\"sliderHandle\"], descendants: true }, { propertyName: \"sliderHandleStart\", first: true, predicate: [\"sliderHandleStart\"], descendants: true }, { propertyName: \"sliderHandleEnd\", first: true, predicate: [\"sliderHandleEnd\"], descendants: true }], usesInheritance: true, ngImport: i0, template: `\n        <div\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-slider p-component': true,\n                'p-disabled': disabled,\n                'p-slider-horizontal': orientation == 'horizontal',\n                'p-slider-vertical': orientation == 'vertical',\n                'p-slider-animate': animate\n            }\"\n            (click)=\"onBarClick($event)\"\n            [attr.data-pc-name]=\"'slider'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <span\n                *ngIf=\"range && orientation == 'horizontal'\"\n                class=\"p-slider-range\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    'inset-inline-start': offset !== null && offset !== undefined ? offset + '%' : handleValues[0] + '%',\n                    width: diff ? diff + '%' : handleValues[1] - handleValues[0] + '%'\n                }\"\n                [attr.data-pc-section]=\"'range'\"\n            ></span>\n            <span\n                *ngIf=\"range && orientation == 'vertical'\"\n                class=\"p-slider-range\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    bottom: offset !== null && offset !== undefined ? offset + '%' : handleValues[0] + '%',\n                    height: diff ? diff + '%' : handleValues[1] - handleValues[0] + '%'\n                }\"\n                [attr.data-pc-section]=\"'range'\"\n            ></span>\n            <span *ngIf=\"!range && orientation == 'vertical'\" class=\"p-slider-range\" [attr.data-pc-section]=\"'range'\" [ngStyle]=\"{ position: 'absolute', height: handleValue + '%' }\"></span>\n            <span *ngIf=\"!range && orientation == 'horizontal'\" class=\"p-slider-range\" [attr.data-pc-section]=\"'range'\" [ngStyle]=\"{ position: 'absolute', width: handleValue + '%' }\"></span>\n            <span\n                *ngIf=\"!range\"\n                #sliderHandle\n                class=\"p-slider-handle\"\n                [style.transition]=\"dragging ? 'none' : null\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    'inset-inline-start': orientation == 'horizontal' ? handleValue + '%' : null,\n                    bottom: orientation == 'vertical' ? handleValue + '%' : null\n                }\"\n                (touchstart)=\"onDragStart($event)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'handle'\"\n                [pAutoFocus]=\"autofocus\"\n            ></span>\n            <span\n                *ngIf=\"range\"\n                #sliderHandleStart\n                [style.transition]=\"dragging ? 'none' : null\"\n                class=\"p-slider-handle\"\n                [ngStyle]=\"{ position: 'absolute', 'inset-inline-start': rangeStartLeft, bottom: rangeStartBottom }\"\n                [ngClass]=\"{ 'p-slider-handle-active': handleIndex == 0 }\"\n                (keydown)=\"onKeyDown($event, 0)\"\n                (mousedown)=\"onMouseDown($event, 0)\"\n                (touchstart)=\"onDragStart($event, 0)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value ? value[0] : null\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'startHandler'\"\n                [pAutoFocus]=\"autofocus\"\n            ></span>\n            <span\n                *ngIf=\"range\"\n                #sliderHandleEnd\n                [style.transition]=\"dragging ? 'none' : null\"\n                class=\"p-slider-handle\"\n                [ngStyle]=\"{ position: 'absolute', 'inset-inline-start': rangeEndLeft, bottom: rangeEndBottom }\"\n                [ngClass]=\"{ 'p-slider-handle-active': handleIndex == 1 }\"\n                (keydown)=\"onKeyDown($event, 1)\"\n                (mousedown)=\"onMouseDown($event, 1)\"\n                (touchstart)=\"onDragStart($event, 1)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value ? value[1] : null\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'endHandler'\"\n            ></span>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: AutoFocus, selector: \"[pAutoFocus]\", inputs: [\"autofocus\", \"pAutoFocus\"] }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Slider, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-slider',\n                    standalone: true,\n                    imports: [CommonModule, AutoFocus, SharedModule],\n                    template: `\n        <div\n            [ngStyle]=\"style\"\n            [class]=\"styleClass\"\n            [ngClass]=\"{\n                'p-slider p-component': true,\n                'p-disabled': disabled,\n                'p-slider-horizontal': orientation == 'horizontal',\n                'p-slider-vertical': orientation == 'vertical',\n                'p-slider-animate': animate\n            }\"\n            (click)=\"onBarClick($event)\"\n            [attr.data-pc-name]=\"'slider'\"\n            [attr.data-pc-section]=\"'root'\"\n        >\n            <span\n                *ngIf=\"range && orientation == 'horizontal'\"\n                class=\"p-slider-range\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    'inset-inline-start': offset !== null && offset !== undefined ? offset + '%' : handleValues[0] + '%',\n                    width: diff ? diff + '%' : handleValues[1] - handleValues[0] + '%'\n                }\"\n                [attr.data-pc-section]=\"'range'\"\n            ></span>\n            <span\n                *ngIf=\"range && orientation == 'vertical'\"\n                class=\"p-slider-range\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    bottom: offset !== null && offset !== undefined ? offset + '%' : handleValues[0] + '%',\n                    height: diff ? diff + '%' : handleValues[1] - handleValues[0] + '%'\n                }\"\n                [attr.data-pc-section]=\"'range'\"\n            ></span>\n            <span *ngIf=\"!range && orientation == 'vertical'\" class=\"p-slider-range\" [attr.data-pc-section]=\"'range'\" [ngStyle]=\"{ position: 'absolute', height: handleValue + '%' }\"></span>\n            <span *ngIf=\"!range && orientation == 'horizontal'\" class=\"p-slider-range\" [attr.data-pc-section]=\"'range'\" [ngStyle]=\"{ position: 'absolute', width: handleValue + '%' }\"></span>\n            <span\n                *ngIf=\"!range\"\n                #sliderHandle\n                class=\"p-slider-handle\"\n                [style.transition]=\"dragging ? 'none' : null\"\n                [ngStyle]=\"{\n                    position: 'absolute',\n                    'inset-inline-start': orientation == 'horizontal' ? handleValue + '%' : null,\n                    bottom: orientation == 'vertical' ? handleValue + '%' : null\n                }\"\n                (touchstart)=\"onDragStart($event)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                (mousedown)=\"onMouseDown($event)\"\n                (keydown)=\"onKeyDown($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'handle'\"\n                [pAutoFocus]=\"autofocus\"\n            ></span>\n            <span\n                *ngIf=\"range\"\n                #sliderHandleStart\n                [style.transition]=\"dragging ? 'none' : null\"\n                class=\"p-slider-handle\"\n                [ngStyle]=\"{ position: 'absolute', 'inset-inline-start': rangeStartLeft, bottom: rangeStartBottom }\"\n                [ngClass]=\"{ 'p-slider-handle-active': handleIndex == 0 }\"\n                (keydown)=\"onKeyDown($event, 0)\"\n                (mousedown)=\"onMouseDown($event, 0)\"\n                (touchstart)=\"onDragStart($event, 0)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value ? value[0] : null\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'startHandler'\"\n                [pAutoFocus]=\"autofocus\"\n            ></span>\n            <span\n                *ngIf=\"range\"\n                #sliderHandleEnd\n                [style.transition]=\"dragging ? 'none' : null\"\n                class=\"p-slider-handle\"\n                [ngStyle]=\"{ position: 'absolute', 'inset-inline-start': rangeEndLeft, bottom: rangeEndBottom }\"\n                [ngClass]=\"{ 'p-slider-handle-active': handleIndex == 1 }\"\n                (keydown)=\"onKeyDown($event, 1)\"\n                (mousedown)=\"onMouseDown($event, 1)\"\n                (touchstart)=\"onDragStart($event, 1)\"\n                (touchmove)=\"onDrag($event)\"\n                (touchend)=\"onDragEnd($event)\"\n                [attr.tabindex]=\"disabled ? null : tabindex\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"min\"\n                [attr.aria-valuenow]=\"value ? value[1] : null\"\n                [attr.aria-valuemax]=\"max\"\n                [attr.aria-labelledby]=\"ariaLabelledBy\"\n                [attr.aria-label]=\"ariaLabel\"\n                [attr.aria-orientation]=\"orientation\"\n                [attr.data-pc-section]=\"'endHandler'\"\n            ></span>\n        </div>\n    `,\n                    providers: [SLIDER_VALUE_ACCESSOR, SliderStyle],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], propDecorators: { animate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], min: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], max: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], orientation: [{\n                type: Input\n            }], step: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], range: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], tabindex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], autofocus: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], onChange: [{\n                type: Output\n            }], onSlideEnd: [{\n                type: Output\n            }], sliderHandle: [{\n                type: ViewChild,\n                args: ['sliderHandle']\n            }], sliderHandleStart: [{\n                type: ViewChild,\n                args: ['sliderHandleStart']\n            }], sliderHandleEnd: [{\n                type: ViewChild,\n                args: ['sliderHandleEnd']\n            }] } });\nclass SliderModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: SliderModule, imports: [Slider, SharedModule], exports: [Slider, SharedModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SliderModule, imports: [Slider, SharedModule, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: SliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Slider, SharedModule],\n                    exports: [Slider, SharedModule]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SLIDER_VALUE_ACCESSOR, Slider, SliderClasses, SliderModule, SliderStyle };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}