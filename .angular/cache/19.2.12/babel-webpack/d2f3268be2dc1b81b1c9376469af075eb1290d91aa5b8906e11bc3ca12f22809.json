{"ast":null,"code":"import { trigger, state, transition, style, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, forwardRef, model, input, computed, ViewEncapsulation, ChangeDetectionStrategy, Component, HostListener, ContentChild, EventEmitter, numberAttribute, booleanAttribute, ContentChildren, Output, Input, HostBinding, signal, NgModule } from '@angular/core';\nimport { findSingle, getAttribute, focus, uuid } from '@primeuix/utils';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ChevronDownIcon, ChevronUpIcon } from 'primeng/icons';\nimport * as i1 from 'primeng/ripple';\nimport { Ripple } from 'primeng/ripple';\nimport { transformToBoolean } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst _c1 = [\"toggleicon\"];\nconst _c2 = a0 => ({\n  active: a0\n});\nfunction AccordionHeader_Conditional_1_0_ng_template_0_Template(rf, ctx) {}\nfunction AccordionHeader_Conditional_1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionHeader_Conditional_1_0_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction AccordionHeader_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionHeader_Conditional_1_0_Template, 1, 0, null, 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.toggleicon)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r0.active()));\n  }\n}\nfunction AccordionHeader_Conditional_2_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.pcAccordion.collapseIcon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.pcAccordion.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionHeader_Conditional_2_ng_container_0_ChevronDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.pcAccordion.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionHeader_Conditional_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AccordionHeader_Conditional_2_ng_container_0_span_1_Template, 1, 4, \"span\", 2)(2, AccordionHeader_Conditional_2_ng_container_0_ChevronDownIcon_2_Template, 1, 2, \"ChevronDownIcon\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.pcAccordion.collapseIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.pcAccordion.collapseIcon);\n  }\n}\nfunction AccordionHeader_Conditional_2_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.pcAccordion.expandIcon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.pcAccordion.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionHeader_Conditional_2_ng_container_1_ChevronUpIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronUpIcon\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.pcAccordion.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionHeader_Conditional_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AccordionHeader_Conditional_2_ng_container_1_span_1_Template, 1, 4, \"span\", 2)(2, AccordionHeader_Conditional_2_ng_container_1_ChevronUpIcon_2_Template, 1, 2, \"ChevronUpIcon\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.pcAccordion.expandIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.pcAccordion.expandIcon);\n  }\n}\nfunction AccordionHeader_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionHeader_Conditional_2_ng_container_0_Template, 3, 2, \"ng-container\", 1)(1, AccordionHeader_Conditional_2_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.active());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.active());\n  }\n}\nconst _c3 = a0 => ({\n  transitionParams: a0\n});\nconst _c4 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nconst _c5 = a0 => ({\n  value: \"hidden\",\n  params: a0\n});\nconst _c6 = [\"header\"];\nconst _c7 = [\"icon\"];\nconst _c8 = [\"content\"];\nconst _c9 = [\"*\", [[\"p-header\"]]];\nconst _c10 = [\"*\", \"p-header\"];\nconst _c11 = a0 => ({\n  $implicit: a0\n});\nfunction AccordionTab_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.header, \" \");\n  }\n}\nfunction AccordionTab_Conditional_2_Conditional_0_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AccordionTab_Conditional_2_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionTab_Conditional_2_Conditional_0_ng_container_0_Template, 1, 0, \"ng-container\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate || ctx_r0._headerTemplate);\n  }\n}\nfunction AccordionTab_Conditional_2_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction AccordionTab_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionTab_Conditional_2_Conditional_0_Template, 1, 1, \"ng-container\")(1, AccordionTab_Conditional_2_Conditional_1_Template, 1, 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.headerTemplate || ctx_r0._headerTemplate ? 0 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.headerFacet ? 1 : -1);\n  }\n}\nfunction AccordionTab_Conditional_3_0_ng_template_0_Template(rf, ctx) {}\nfunction AccordionTab_Conditional_3_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionTab_Conditional_3_0_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction AccordionTab_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionTab_Conditional_3_0_Template, 1, 0, null, 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconTemplate || ctx_r0._iconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c11, ctx_r0.selected));\n  }\n}\nfunction AccordionTab_Conditional_4_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.accordion.collapseIcon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionTab_Conditional_4_ng_container_0_ChevronDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionTab_Conditional_4_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AccordionTab_Conditional_4_ng_container_0_span_1_Template, 1, 4, \"span\", 6)(2, AccordionTab_Conditional_4_ng_container_0_ChevronDownIcon_2_Template, 1, 2, \"ChevronDownIcon\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.accordion.collapseIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.accordion.collapseIcon);\n  }\n}\nfunction AccordionTab_Conditional_4_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r0.accordion.expandIcon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionTab_Conditional_4_ng_container_1_ChevronUpIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronUpIcon\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass);\n    i0.ɵɵattribute(\"aria-hidden\", true);\n  }\n}\nfunction AccordionTab_Conditional_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AccordionTab_Conditional_4_ng_container_1_span_1_Template, 1, 4, \"span\", 6)(2, AccordionTab_Conditional_4_ng_container_1_ChevronUpIcon_2_Template, 1, 2, \"ChevronUpIcon\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.accordion.expandIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.accordion.expandIcon);\n  }\n}\nfunction AccordionTab_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AccordionTab_Conditional_4_ng_container_0_Template, 3, 2, \"ng-container\", 3)(1, AccordionTab_Conditional_4_ng_container_1_Template, 3, 2, \"ng-container\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.selected);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.selected);\n  }\n}\nfunction AccordionTab_ng_container_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction AccordionTab_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AccordionTab_ng_container_8_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.contentTemplate || ctx_r0._contentTemplate);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-accordionpanel {\n    display: flex;\n    flex-direction: column;\n    border-style: solid;\n    border-width: ${dt('accordion.panel.border.width')};\n    border-color: ${dt('accordion.panel.border.color')};\n}\n\n.p-accordionheader {\n    all: unset;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: ${dt('accordion.header.padding')};\n    color: ${dt('accordion.header.color')};\n    background: ${dt('accordion.header.background')};\n    border-style: solid;\n    border-width: ${dt('accordion.header.border.width')};\n    border-color: ${dt('accordion.header.border.color')};\n    font-weight: ${dt('accordion.header.font.weight')};\n    border-radius: ${dt('accordion.header.border.radius')};\n    transition: background ${dt('accordion.transition.duration')}; color ${dt('accordion.transition.duration')}color ${dt('accordion.transition.duration')}, outline-color ${dt('accordion.transition.duration')}, box-shadow ${dt('accordion.transition.duration')};\n    outline-color: transparent;\n    position: relative;\n    overflow: hidden;\n}\n\n.p-accordionpanel:first-child > .p-accordionheader {\n    border-width: ${dt('accordion.header.first.border.width')};\n    border-start-start-radius: ${dt('accordion.header.first.top.border.radius')};\n    border-start-end-radius: ${dt('accordion.header.first.top.border.radius')};\n}\n\n.p-accordionpanel:last-child > .p-accordionheader {\n    border-end-start-radius: ${dt('accordion.header.last.bottom.border.radius')};\n    border-end-end-radius: ${dt('accordion.header.last.bottom.border.radius')};\n}\n\n.p-accordionpanel:last-child.p-accordionpanel-active > .p-accordionheader {\n    border-end-start-radius: ${dt('accordion.header.last.active.bottom.border.radius')};\n    border-end-end-radius:${dt('accordion.header.last.active.bottom.border.radius')};\n}\n\n.p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.color')};\n}\n\n.p-accordionpanel:not(.p-disabled) .p-accordionheader:focus-visible {\n    box-shadow: ${dt('accordion.header.focus.ring.shadow')};\n    outline: ${dt('accordion.header.focus.ring.width')} ${dt('accordion.header.focus.ring.style')} ${dt('accordion.header.focus.ring.color')};\n    outline-offset: ${dt('accordion.header.focus.ring.offset')};\n}\n\n.p-accordionpanel:not(.p-accordionpanel-active):not(.p-disabled) > .p-accordionheader:hover {\n    background: ${dt('accordion.header.hover.background')};\n    color: ${dt('accordion.header.hover.color')}\n}\n\n.p-accordionpanel:not(.p-accordionpanel-active):not(.p-disabled) .p-accordionheader:hover .p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.hover.color')};\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader {\n    background: ${dt('accordion.header.active.background')};\n    color: ${dt('accordion.header.active.color')}\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader .p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.active.color')};\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader:hover  {\n    background: ${dt('accordion.header.active.hover.background')};\n    color: ${dt('accordion.header.active.hover.color')}\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader:hover  .p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.active.hover.color')};\n}\n\n.p-accordioncontent-content {\n    border-style: solid;\n    border-width: ${dt('accordion.content.border.width')};\n    border-color: ${dt('accordion.content.border.color')};\n    background-color: ${dt('accordion.content.background')};\n    color: ${dt('accordion.content.color')};\n    padding: ${dt('accordion.content.padding')}\n}\n\n/*For PrimeNG*/\n\n.p-accordion .p-accordioncontent {\n    overflow: hidden;\n}\n\n.p-accordionpanel.p-accordioncontent:not(.ng-animating) {\n    overflow: inherit;\n}\n\n.p-accordionheader-toggle-icon.icon-start {\n    order: -1;\n}\n\n.p-accordionheader:has(.p-accordionheader-toggle-icon.icon-start) {\n    justify-content: flex-start;\n    gap: ${dt('accordion.header.padding')};\n}\n`;\nconst classes = {\n  root: 'p-accordion p-component'\n};\nclass AccordionStyle extends BaseStyle {\n  name = 'accordion';\n  theme = theme;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAccordionStyle_BaseFactory;\n    return function AccordionStyle_Factory(__ngFactoryType__) {\n      return (ɵAccordionStyle_BaseFactory || (ɵAccordionStyle_BaseFactory = i0.ɵɵgetInheritedFactory(AccordionStyle)))(__ngFactoryType__ || AccordionStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AccordionStyle,\n    factory: AccordionStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AccordionStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Accordion groups a collection of contents in tabs.\n *\n * [Live Demo](https://www.primeng.org/accordion/)\n *\n * @module accordionstyle\n *\n */\nvar AccordionClasses;\n(function (AccordionClasses) {\n  /**\n   * Class name of the root element\n   */\n  AccordionClasses[\"root\"] = \"p-accordion\";\n  /**\n   * Class name of the content wrapper\n   */\n  AccordionClasses[\"contentwrapper\"] = \"p-accordioncontent\";\n  /**\n   * Class name of the content\n   */\n  AccordionClasses[\"content\"] = \"p-accordioncontent-content\";\n  /**\n   * Class name of the header\n   */\n  AccordionClasses[\"header\"] = \"p-accordionheader\";\n  /**\n   * Class name of the toggle icon\n   */\n  AccordionClasses[\"toggleicon\"] = \"p-accordionheader-toggle-icon\";\n  /**\n   * Class name of the panel\n   */\n  AccordionClasses[\"panel\"] = \"p-accordionpanel\";\n})(AccordionClasses || (AccordionClasses = {}));\n\n/**\n * AccordionPanel is a helper component for Accordion component.\n * @group Components\n */\nclass AccordionPanel extends BaseComponent {\n  pcAccordion = inject(forwardRef(() => Accordion));\n  /**\n   * Value of the active tab.\n   * @defaultValue undefined\n   * @group Props\n   */\n  value = model(undefined);\n  /**\n   * Disables the tab when enabled.\n   * @defaultValue false\n   * @group Props\n   */\n  disabled = input(false, {\n    transform: v => transformToBoolean(v)\n  });\n  active = computed(() => this.pcAccordion.multiple() ? this.valueEquals(this.pcAccordion.value(), this.value()) : this.pcAccordion.value() === this.value());\n  valueEquals(currentValue, value) {\n    if (Array.isArray(currentValue)) {\n      return currentValue.includes(value);\n    }\n    return currentValue === value;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAccordionPanel_BaseFactory;\n    return function AccordionPanel_Factory(__ngFactoryType__) {\n      return (ɵAccordionPanel_BaseFactory || (ɵAccordionPanel_BaseFactory = i0.ɵɵgetInheritedFactory(AccordionPanel)))(__ngFactoryType__ || AccordionPanel);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AccordionPanel,\n    selectors: [[\"p-accordion-panel\"], [\"p-accordionpanel\"]],\n    hostVars: 9,\n    hostBindings: function AccordionPanel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-pc-name\", \"accordionpanel\")(\"data-p-disabled\", ctx.disabled())(\"data-p-active\", ctx.active());\n        i0.ɵɵclassProp(\"p-accordionpanel\", true)(\"p-accordionpanel-active\", ctx.active())(\"p-disabled\", ctx.disabled());\n      }\n    },\n    inputs: {\n      value: [1, \"value\"],\n      disabled: [1, \"disabled\"]\n    },\n    outputs: {\n      value: \"valueChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function AccordionPanel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AccordionPanel, [{\n    type: Component,\n    args: [{\n      selector: 'p-accordion-panel, p-accordionpanel',\n      imports: [CommonModule],\n      standalone: true,\n      template: `<ng-content />`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.p-accordionpanel]': 'true',\n        '[class.p-accordionpanel-active]': 'active()',\n        '[class.p-disabled]': 'disabled()',\n        '[attr.data-pc-name]': '\"accordionpanel\"',\n        '[attr.data-p-disabled]': 'disabled()',\n        '[attr.data-p-active]': 'active()'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * AccordionHeader is a helper component for Accordion component.\n * @group Components\n */\nclass AccordionHeader extends BaseComponent {\n  pcAccordion = inject(forwardRef(() => Accordion));\n  pcAccordionPanel = inject(forwardRef(() => AccordionPanel));\n  id = computed(() => `${this.pcAccordion.id()}_accordionheader_${this.pcAccordionPanel.value()}`);\n  active = computed(() => this.pcAccordionPanel.active());\n  disabled = computed(() => this.pcAccordionPanel.disabled());\n  ariaControls = computed(() => `${this.pcAccordion.id()}_accordioncontent_${this.pcAccordionPanel.value()}`);\n  /**\n   * Toggle icon template.\n   * @type {TemplateRef<AccordionToggleIconTemplateContext>} context - Context of the template\n   * @example\n   * ```html\n   * <ng-template #toggleicon let-active=\"active\"> </ng-template>\n   * ```\n   * @see {@link AccordionToggleIconTemplateContext}\n   * @group Templates\n   */\n  toggleicon;\n  onClick(event) {\n    const wasActive = this.active();\n    this.changeActiveValue();\n    const isActive = this.active();\n    const index = this.pcAccordionPanel.value();\n    if (!wasActive && isActive) {\n      this.pcAccordion.onOpen.emit({\n        originalEvent: event,\n        index\n      });\n    } else if (wasActive && !isActive) {\n      this.pcAccordion.onClose.emit({\n        originalEvent: event,\n        index\n      });\n    }\n  }\n  onFocus() {\n    this.pcAccordion.selectOnFocus() && this.changeActiveValue();\n  }\n  onKeydown(event) {\n    switch (event.code) {\n      case 'ArrowDown':\n        this.arrowDownKey(event);\n        break;\n      case 'ArrowUp':\n        this.arrowUpKey(event);\n        break;\n      case 'Home':\n        this.onHomeKey(event);\n        break;\n      case 'End':\n        this.onEndKey(event);\n        break;\n      case 'Enter':\n      case 'Space':\n      case 'NumpadEnter':\n        this.onEnterKey(event);\n        break;\n      default:\n        break;\n    }\n  }\n  changeActiveValue() {\n    this.pcAccordion.updateValue(this.pcAccordionPanel.value());\n  }\n  findPanel(headerElement) {\n    return headerElement?.closest('[data-pc-name=\"accordionpanel\"]');\n  }\n  findHeader(panelElement) {\n    return findSingle(panelElement, '[data-pc-name=\"accordionheader\"]');\n  }\n  findNextPanel(panelElement, selfCheck = false) {\n    const element = selfCheck ? panelElement : panelElement.nextElementSibling;\n    return element ? getAttribute(element, 'data-p-disabled') ? this.findNextPanel(element) : this.findHeader(element) : null;\n  }\n  findPrevPanel(panelElement, selfCheck = false) {\n    const element = selfCheck ? panelElement : panelElement.previousElementSibling;\n    return element ? getAttribute(element, 'data-p-disabled') ? this.findPrevPanel(element) : this.findHeader(element) : null;\n  }\n  findFirstPanel() {\n    return this.findNextPanel(this.pcAccordion.el.nativeElement.firstElementChild, true);\n  }\n  findLastPanel() {\n    return this.findPrevPanel(this.pcAccordion.el.nativeElement.lastElementChild, true);\n  }\n  changeFocusedPanel(event, element) {\n    focus(element);\n  }\n  arrowDownKey(event) {\n    const nextPanel = this.findNextPanel(this.findPanel(event.currentTarget));\n    nextPanel ? this.changeFocusedPanel(event, nextPanel) : this.onHomeKey(event);\n    event.preventDefault();\n  }\n  arrowUpKey(event) {\n    const prevPanel = this.findPrevPanel(this.findPanel(event.currentTarget));\n    prevPanel ? this.changeFocusedPanel(event, prevPanel) : this.onEndKey(event);\n    event.preventDefault();\n  }\n  onHomeKey(event) {\n    const firstPanel = this.findFirstPanel();\n    this.changeFocusedPanel(event, firstPanel);\n    event.preventDefault();\n  }\n  onEndKey(event) {\n    const lastPanel = this.findLastPanel();\n    this.changeFocusedPanel(event, lastPanel);\n    event.preventDefault();\n  }\n  onEnterKey(event) {\n    this.changeActiveValue();\n    event.preventDefault();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAccordionHeader_BaseFactory;\n    return function AccordionHeader_Factory(__ngFactoryType__) {\n      return (ɵAccordionHeader_BaseFactory || (ɵAccordionHeader_BaseFactory = i0.ɵɵgetInheritedFactory(AccordionHeader)))(__ngFactoryType__ || AccordionHeader);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AccordionHeader,\n    selectors: [[\"p-accordion-header\"], [\"p-accordionheader\"]],\n    contentQueries: function AccordionHeader_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toggleicon = _t.first);\n      }\n    },\n    hostVars: 13,\n    hostBindings: function AccordionHeader_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function AccordionHeader_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"focus\", function AccordionHeader_focus_HostBindingHandler($event) {\n          return ctx.onFocus($event);\n        })(\"keydown\", function AccordionHeader_keydown_HostBindingHandler($event) {\n          return ctx.onKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id())(\"aria-expanded\", ctx.active())(\"aria-controls\", ctx.ariaControls())(\"aria-disabled\", ctx.disabled())(\"role\", \"button\")(\"tabindex\", ctx.disabled() ? \"-1\" : \"0\")(\"data-p-active\", ctx.active())(\"data-p-disabled\", ctx.disabled())(\"data-pc-name\", \"accordionheader\");\n        i0.ɵɵstyleProp(\"user-select\", \"none\");\n        i0.ɵɵclassProp(\"p-accordionheader\", true);\n      }\n    },\n    features: [i0.ɵɵHostDirectivesFeature([i1.Ripple]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"]],\n    template: function AccordionHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, AccordionHeader_Conditional_1_Template, 1, 4)(2, AccordionHeader_Conditional_2_Template, 2, 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.toggleicon ? 1 : 2);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, ChevronDownIcon, ChevronUpIcon],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AccordionHeader, [{\n    type: Component,\n    args: [{\n      selector: 'p-accordion-header, p-accordionheader',\n      imports: [CommonModule, ChevronDownIcon, ChevronUpIcon],\n      standalone: true,\n      template: `\n        <ng-content />\n        @if (toggleicon) {\n            <ng-template *ngTemplateOutlet=\"toggleicon; context: { active: active() }\"></ng-template>\n        } @else {\n            <ng-container *ngIf=\"active()\">\n                <span *ngIf=\"pcAccordion.collapseIcon\" [class]=\"pcAccordion.collapseIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\"></span>\n                <ChevronDownIcon *ngIf=\"!pcAccordion.collapseIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n            <ng-container *ngIf=\"!active()\">\n                <span *ngIf=\"pcAccordion.expandIcon\" [class]=\"pcAccordion.expandIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\"></span>\n                <ChevronUpIcon *ngIf=\"!pcAccordion.expandIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n        }\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.p-accordionheader]': 'true',\n        '[attr.id]': 'id()',\n        '[attr.aria-expanded]': 'active()',\n        '[attr.aria-controls]': 'ariaControls()',\n        '[attr.aria-disabled]': 'disabled()',\n        '[attr.role]': '\"button\"',\n        '[attr.tabindex]': 'disabled()?\"-1\":\"0\"',\n        '[attr.data-p-active]': 'active()',\n        '[attr.data-p-disabled]': 'disabled()',\n        '[attr.data-pc-name]': '\"accordionheader\"',\n        '[style.user-select]': '\"none\"'\n      },\n      hostDirectives: [Ripple]\n    }]\n  }], null, {\n    toggleicon: [{\n      type: ContentChild,\n      args: ['toggleicon']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus', ['$event']]\n    }],\n    onKeydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass AccordionContent extends BaseComponent {\n  pcAccordion = inject(forwardRef(() => Accordion));\n  pcAccordionPanel = inject(forwardRef(() => AccordionPanel));\n  active = computed(() => this.pcAccordionPanel.active());\n  ariaLabelledby = computed(() => `${this.pcAccordion.id()}_accordionheader_${this.pcAccordionPanel.value()}`);\n  id = computed(() => `${this.pcAccordion.id()}_accordioncontent_${this.pcAccordionPanel.value()}`);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAccordionContent_BaseFactory;\n    return function AccordionContent_Factory(__ngFactoryType__) {\n      return (ɵAccordionContent_BaseFactory || (ɵAccordionContent_BaseFactory = i0.ɵɵgetInheritedFactory(AccordionContent)))(__ngFactoryType__ || AccordionContent);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AccordionContent,\n    selectors: [[\"p-accordion-content\"], [\"p-accordioncontent\"]],\n    hostVars: 7,\n    hostBindings: function AccordionContent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id())(\"role\", \"region\")(\"data-pc-name\", \"accordioncontent\")(\"data-p-active\", ctx.active())(\"aria-labelledby\", ctx.ariaLabelledby());\n        i0.ɵɵclassProp(\"p-accordioncontent\", true);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 9,\n    consts: [[1, \"p-accordioncontent-content\"]],\n    template: function AccordionContent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@content\", ctx.active() ? i0.ɵɵpureFunction1(3, _c4, i0.ɵɵpureFunction1(1, _c3, ctx.pcAccordion.transitionOptions)) : i0.ɵɵpureFunction1(7, _c5, i0.ɵɵpureFunction1(5, _c3, ctx.pcAccordion.transitionOptions)));\n      }\n    },\n    dependencies: [CommonModule],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('content', [state('hidden', style({\n        height: '0',\n        paddingBottom: '0',\n        visibility: 'hidden'\n      })), state('visible', style({\n        height: '*',\n        visibility: 'visible'\n      })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => *', animate(0))])]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AccordionContent, [{\n    type: Component,\n    args: [{\n      selector: 'p-accordion-content, p-accordioncontent',\n      imports: [CommonModule],\n      standalone: true,\n      template: ` <div [@content]=\"active() ? { value: 'visible', params: { transitionParams: pcAccordion.transitionOptions } } : { value: 'hidden', params: { transitionParams: pcAccordion.transitionOptions } }\" class=\"p-accordioncontent-content\">\n        <ng-content />\n    </div>`,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.p-accordioncontent]': 'true',\n        '[attr.id]': 'id()',\n        '[attr.role]': '\"region\"',\n        '[attr.data-pc-name]': '\"accordioncontent\"',\n        '[attr.data-p-active]': 'active()',\n        '[attr.aria-labelledby]': 'ariaLabelledby()'\n      },\n      animations: [trigger('content', [state('hidden', style({\n        height: '0',\n        paddingBottom: '0',\n        visibility: 'hidden'\n      })), state('visible', style({\n        height: '*',\n        visibility: 'visible'\n      })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => *', animate(0))])]\n    }]\n  }], null, null);\n})();\n/**\n * AccordionTab is a helper component for Accordion.\n * @deprecated Use AccordionPanel, AccordionHeader, AccordionContent instead.\n * @group Components\n */\nclass AccordionTab extends BaseComponent {\n  get hostClass() {\n    return this.tabStyleClass;\n  }\n  get hostStyle() {\n    return this.tabStyle;\n  }\n  /**\n   * Current id state as a string.\n   * @group Props\n   */\n  id = uuid('pn_id_');\n  /**\n   * Used to define the header of the tab.\n   * @group Props\n   */\n  header;\n  /**\n   * Inline style of the tab header.\n   * @group Props\n   */\n  headerStyle;\n  /**\n   * Inline style of the tab.\n   * @group Props\n   */\n  tabStyle;\n  /**\n   * Inline style of the tab content.\n   * @group Props\n   */\n  contentStyle;\n  /**\n   * Style class of the tab.\n   * @group Props\n   */\n  tabStyleClass;\n  /**\n   * Style class of the tab header.\n   * @group Props\n   */\n  headerStyleClass;\n  /**\n   * Style class of the tab content.\n   * @group Props\n   */\n  contentStyleClass;\n  /**\n   * Whether the tab is disabled.\n   * @group Props\n   */\n  disabled;\n  /**\n   * Whether a lazy loaded panel should avoid getting loaded again on reselection.\n   * @group Props\n   */\n  cache = true;\n  /**\n   * Transition options of the animation.\n   * @group Props\n   */\n  transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n  /**\n   * Position of the icon.\n   * @group Props\n   */\n  iconPos = 'start';\n  /**\n   * The value that returns the selection.\n   * @group Props\n   */\n  get selected() {\n    return this._selected;\n  }\n  set selected(val) {\n    this._selected = val;\n    if (!this.loaded) {\n      if (this._selected && this.cache) {\n        this.loaded = true;\n      }\n      this.cd.detectChanges();\n    }\n  }\n  /**\n   * The aria-level that each accordion header will have. The default value is 2 as per W3C specifications\n   * @group Props\n   */\n  headerAriaLevel = 2;\n  /**\n   * Event triggered by changing the choice.\n   * @param {boolean} value - Boolean value indicates that the option is changed.\n   * @group Emits\n   */\n  selectedChange = new EventEmitter();\n  headerFacet;\n  _selected = false;\n  get iconClass() {\n    if (this.iconPos === 'end') {\n      return 'p-accordionheader-toggle-icon icon-end';\n    } else {\n      return 'p-accordionheader-toggle-icon icon-start';\n    }\n  }\n  /**\n   * Content template for the content of the drawer.\n   * @group Templates\n   */\n  headerTemplate;\n  /**\n   * Template for the header icon.\n   * @group Templates\n   */\n  iconTemplate;\n  /**\n   * Content template for the footer of the drawer.\n   * @group Templates\n   */\n  contentTemplate;\n  templates;\n  _headerTemplate;\n  _iconTemplate;\n  _contentTemplate;\n  loaded = false;\n  accordion = inject(forwardRef(() => Accordion));\n  _componentStyle = inject(AccordionStyle);\n  ngOnInit() {\n    super.ngOnInit();\n    console.log('AccordionTab is deprecated as of v18, please use the new structure instead.');\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this._contentTemplate = item.template;\n          break;\n        case 'header':\n          this._headerTemplate = item.template;\n          break;\n        case 'icon':\n          this._iconTemplate = item.template;\n          break;\n        default:\n          this._contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  toggle(event) {\n    if (this.disabled) {\n      return false;\n    }\n    let index = this.findTabIndex();\n    if (this.selected) {\n      this.selected = false;\n      this.accordion.onClose.emit({\n        originalEvent: event,\n        index: index\n      });\n    } else {\n      if (!this.accordion.multiple()) {\n        for (var i = 0; i < this.accordion.tabs.length; i++) {\n          if (this.accordion.tabs[i].selected) {\n            this.accordion.tabs[i].selected = false;\n            this.accordion.tabs[i].selectedChange.emit(false);\n            this.accordion.tabs[i].cd.markForCheck();\n          }\n        }\n      }\n      this.selected = true;\n      this.loaded = true;\n      this.accordion.onOpen.emit({\n        originalEvent: event,\n        index: index\n      });\n    }\n    this.selectedChange.emit(this.selected);\n    this.accordion.updateActiveIndex();\n    this.cd.markForCheck();\n    event?.preventDefault();\n  }\n  findTabIndex() {\n    let index = -1;\n    for (var i = 0; i < this.accordion.tabs.length; i++) {\n      if (this.accordion.tabs[i] == this) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n  onKeydown(event) {\n    switch (event.code) {\n      case 'Enter':\n      case 'Space':\n        this.toggle(event);\n        event.preventDefault();\n        break;\n      default:\n        break;\n    }\n  }\n  getTabHeaderActionId(tabId) {\n    return `${tabId}_header_action`;\n  }\n  getTabContentId(tabId) {\n    return `${tabId}_content`;\n  }\n  ngOnDestroy() {\n    this.accordion.tabs.splice(this.findTabIndex(), 1);\n    super.ngOnDestroy();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAccordionTab_BaseFactory;\n    return function AccordionTab_Factory(__ngFactoryType__) {\n      return (ɵAccordionTab_BaseFactory || (ɵAccordionTab_BaseFactory = i0.ɵɵgetInheritedFactory(AccordionTab)))(__ngFactoryType__ || AccordionTab);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AccordionTab,\n    selectors: [[\"p-accordionTab\"], [\"p-accordion-tab\"], [\"p-accordiontab\"]],\n    contentQueries: function AccordionTab_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c6, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c7, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c8, 4);\n        i0.ɵɵcontentQuery(dirIndex, Header, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerFacet = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 9,\n    hostBindings: function AccordionTab_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-pc-name\", \"accordiontab\");\n        i0.ɵɵstyleMap(ctx.hostStyle);\n        i0.ɵɵclassMap(ctx.hostClass);\n        i0.ɵɵclassProp(\"p-accordionpanel\", true)(\"p-accordionpanel-active\", ctx.selected);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      header: \"header\",\n      headerStyle: \"headerStyle\",\n      tabStyle: \"tabStyle\",\n      contentStyle: \"contentStyle\",\n      tabStyleClass: \"tabStyleClass\",\n      headerStyleClass: \"headerStyleClass\",\n      contentStyleClass: \"contentStyleClass\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      cache: [2, \"cache\", \"cache\", booleanAttribute],\n      transitionOptions: \"transitionOptions\",\n      iconPos: \"iconPos\",\n      selected: \"selected\",\n      headerAriaLevel: [2, \"headerAriaLevel\", \"headerAriaLevel\", numberAttribute]\n    },\n    outputs: {\n      selectedChange: \"selectedChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([AccordionStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c10,\n    decls: 9,\n    vars: 30,\n    consts: [[\"type\", \"button\", 1, \"p-accordionheader\", 3, \"click\", \"keydown\", \"disabled\", \"ngClass\", \"ngStyle\"], [\"role\", \"region\", 1, \"p-accordioncontent\"], [1, \"p-accordioncontent-content\", 3, \"ngClass\", \"ngStyle\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"]],\n    template: function AccordionTab_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c9);\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AccordionTab_Template_button_click_0_listener($event) {\n          return ctx.toggle($event);\n        })(\"keydown\", function AccordionTab_Template_button_keydown_0_listener($event) {\n          return ctx.onKeydown($event);\n        });\n        i0.ɵɵtemplate(1, AccordionTab_Conditional_1_Template, 1, 1)(2, AccordionTab_Conditional_2_Template, 2, 2)(3, AccordionTab_Conditional_3_Template, 1, 4)(4, AccordionTab_Conditional_4_Template, 2, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2);\n        i0.ɵɵprojection(7);\n        i0.ɵɵtemplate(8, AccordionTab_ng_container_8_Template, 2, 1, \"ng-container\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"ngClass\", ctx.headerStyleClass)(\"ngStyle\", ctx.headerStyle);\n        i0.ɵɵattribute(\"aria-expanded\", ctx.selected)(\"aria-level\", ctx.headerAriaLevel)(\"data-p-disabled\", ctx.disabled)(\"data-pc-section\", \"accordionheader\")(\"tabindex\", ctx.disabled ? null : 0)(\"id\", ctx.getTabHeaderActionId(ctx.id))(\"aria-controls\", ctx.getTabContentId(ctx.id));\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(!ctx.headerTemplate && !ctx._headerTemplate ? 1 : 2);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.iconTemplate || ctx._iconTemplate ? 3 : 4);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"@tabContent\", ctx.selected ? i0.ɵɵpureFunction1(24, _c4, i0.ɵɵpureFunction1(22, _c3, ctx.transitionOptions)) : i0.ɵɵpureFunction1(28, _c5, i0.ɵɵpureFunction1(26, _c3, ctx.transitionOptions)));\n        i0.ɵɵattribute(\"id\", ctx.getTabContentId(ctx.id))(\"aria-hidden\", !ctx.selected)(\"aria-labelledby\", ctx.getTabHeaderActionId(ctx.id))(\"data-pc-section\", \"toggleablecontent\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngClass\", ctx.contentStyleClass)(\"ngStyle\", ctx.contentStyle);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.contentTemplate || ctx._contentTemplate) && (ctx.cache ? ctx.loaded : ctx.selected));\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, ChevronDownIcon, ChevronUpIcon],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('tabContent', [state('hidden', style({\n        height: '0',\n        visibility: 'hidden'\n      })), state('visible', style({\n        height: '*',\n        visibility: 'visible'\n      })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => *', animate(0))])]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AccordionTab, [{\n    type: Component,\n    args: [{\n      selector: 'p-accordionTab, p-accordion-tab, p-accordiontab',\n      standalone: true,\n      imports: [CommonModule, ChevronDownIcon, ChevronUpIcon],\n      template: `\n        <button\n            class=\"p-accordionheader\"\n            type=\"button\"\n            [disabled]=\"disabled\"\n            [attr.aria-expanded]=\"selected\"\n            [attr.aria-level]=\"headerAriaLevel\"\n            [class.p-disabled]=\"disabled\"\n            [attr.data-p-disabled]=\"disabled\"\n            [attr.data-pc-section]=\"'accordionheader'\"\n            (click)=\"toggle($event)\"\n            (keydown)=\"onKeydown($event)\"\n            [ngClass]=\"headerStyleClass\"\n            [ngStyle]=\"headerStyle\"\n            [attr.tabindex]=\"disabled ? null : 0\"\n            [attr.id]=\"getTabHeaderActionId(id)\"\n            [attr.aria-controls]=\"getTabContentId(id)\"\n        >\n            @if (!headerTemplate && !_headerTemplate) {\n                {{ header }}\n            } @else {\n                @if (headerTemplate || _headerTemplate) {\n                    <ng-container *ngTemplateOutlet=\"headerTemplate || _headerTemplate\"></ng-container>\n                }\n                @if (headerFacet) {\n                    <ng-content select=\"p-header\" />\n                }\n            }\n            @if (iconTemplate || _iconTemplate) {\n                <ng-template *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { $implicit: selected }\"></ng-template>\n            } @else {\n                <ng-container *ngIf=\"selected\">\n                    <span *ngIf=\"accordion.collapseIcon\" [class]=\"accordion.collapseIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\"></span>\n                    <ChevronDownIcon *ngIf=\"!accordion.collapseIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\" />\n                </ng-container>\n                <ng-container *ngIf=\"!selected\">\n                    <span *ngIf=\"accordion.expandIcon\" [class]=\"accordion.expandIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\"></span>\n                    <ChevronUpIcon *ngIf=\"!accordion.expandIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\" />\n                </ng-container>\n            }\n        </button>\n        <div\n            [attr.id]=\"getTabContentId(id)\"\n            class=\"p-accordioncontent\"\n            [@tabContent]=\"selected ? { value: 'visible', params: { transitionParams: transitionOptions } } : { value: 'hidden', params: { transitionParams: transitionOptions } }\"\n            role=\"region\"\n            [attr.aria-hidden]=\"!selected\"\n            [attr.aria-labelledby]=\"getTabHeaderActionId(id)\"\n            [attr.data-pc-section]=\"'toggleablecontent'\"\n        >\n            <div class=\"p-accordioncontent-content\" [ngClass]=\"contentStyleClass\" [ngStyle]=\"contentStyle\">\n                <ng-content />\n                <ng-container *ngIf=\"(contentTemplate || _contentTemplate) && (cache ? loaded : selected)\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate\"></ng-container>\n                </ng-container>\n            </div>\n        </div>\n    `,\n      animations: [trigger('tabContent', [state('hidden', style({\n        height: '0',\n        visibility: 'hidden'\n      })), state('visible', style({\n        height: '*',\n        visibility: 'visible'\n      })), transition('visible <=> hidden', [animate('{{transitionParams}}')]), transition('void => *', animate(0))])],\n      host: {\n        '[class.p-accordionpanel]': 'true',\n        '[class.p-accordionpanel-active]': 'selected',\n        '[attr.data-pc-name]': '\"accordiontab\"'\n      },\n      providers: [AccordionStyle],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    hostStyle: [{\n      type: HostBinding,\n      args: ['style']\n    }],\n    id: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    headerStyle: [{\n      type: Input\n    }],\n    tabStyle: [{\n      type: Input\n    }],\n    contentStyle: [{\n      type: Input\n    }],\n    tabStyleClass: [{\n      type: Input\n    }],\n    headerStyleClass: [{\n      type: Input\n    }],\n    contentStyleClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    cache: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    transitionOptions: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    headerAriaLevel: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    selectedChange: [{\n      type: Output\n    }],\n    headerFacet: [{\n      type: ContentChildren,\n      args: [Header]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: ['header', {\n        descendants: false\n      }]\n    }],\n    iconTemplate: [{\n      type: ContentChild,\n      args: ['icon', {\n        descendants: false\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: ['content', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n/**\n * Accordion groups a collection of contents in tabs.\n * @group Components\n */\nclass Accordion extends BaseComponent {\n  get hostClass() {\n    return this.styleClass;\n  }\n  get hostStyle() {\n    return this.style;\n  }\n  /**\n   * Value of the active tab.\n   * @defaultValue undefined\n   * @group Props\n   */\n  value = model(undefined);\n  /**\n   * When enabled, multiple tabs can be activated at the same time.\n   * @defaultValue false\n   * @group Props\n   */\n  multiple = input(false, {\n    transform: v => transformToBoolean(v)\n  });\n  /**\n   * Inline style of the tab header and content.\n   * @group Props\n   */\n  style;\n  /**\n   * Class of the element.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Icon of a collapsed tab.\n   * @group Props\n   */\n  expandIcon;\n  /**\n   * Icon of an expanded tab.\n   * @group Props\n   */\n  collapseIcon;\n  /**\n   * When enabled, the focused tab is activated.\n   * @defaultValue false\n   * @group Props\n   */\n  selectOnFocus = input(false, {\n    transform: v => transformToBoolean(v)\n  });\n  set activeIndex(val) {\n    this._activeIndex = val;\n    if (this.preventActiveIndexPropagation) {\n      this.preventActiveIndexPropagation = false;\n      return;\n    }\n    this.updateSelectionState();\n  }\n  /**\n   * Transition options of the animation.\n   * @group Props\n   */\n  transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n  /**\n   * Returns the active index.\n   * @param {number | number[]} value - New index.\n   * @deprecated use native valueChange emitter of the value model.\n   * @group Emits\n   */\n  activeIndexChange = new EventEmitter();\n  set headerAriaLevel(val) {\n    if (typeof val === 'number' && val > 0) {\n      this._headerAriaLevel = val;\n    } else if (this._headerAriaLevel !== 2) {\n      this._headerAriaLevel = 2;\n    }\n  }\n  /**\n   * Callback to invoke when an active tab is collapsed by clicking on the header.\n   * @param {AccordionTabCloseEvent} event - Custom tab close event.\n   * @group Emits\n   */\n  onClose = new EventEmitter();\n  /**\n   * Callback to invoke when a tab gets expanded.\n   * @param {AccordionTabOpenEvent} event - Custom tab open event.\n   * @group Emits\n   */\n  onOpen = new EventEmitter();\n  id = signal(uuid('pn_id_'));\n  tabList;\n  tabListSubscription = null;\n  _activeIndex;\n  _headerAriaLevel = 2;\n  preventActiveIndexPropagation = false;\n  tabs = [];\n  _componentStyle = inject(AccordionStyle);\n  /**\n   * Index of the active tab or an array of indexes in multiple mode.\n   * @deprecated use value property with new architecture instead.\n   * @group Props\n   */\n  get activeIndex() {\n    return this._activeIndex;\n  }\n  /**\n   * The aria-level that each accordion header will have. The default value is 2 as per W3C specifications\n   * @deprecated use AccoridonHeader component and bind attribute to the host.\n   * @group Props\n   */\n  get headerAriaLevel() {\n    return this._headerAriaLevel;\n  }\n  onKeydown(event) {\n    switch (event.code) {\n      case 'ArrowDown':\n        this.onTabArrowDownKey(event);\n        break;\n      case 'ArrowUp':\n        this.onTabArrowUpKey(event);\n        break;\n      case 'Home':\n        if (!event.shiftKey) {\n          this.onTabHomeKey(event);\n        }\n        break;\n      case 'End':\n        if (!event.shiftKey) {\n          this.onTabEndKey(event);\n        }\n        break;\n    }\n  }\n  onTabArrowDownKey(event) {\n    const nextHeaderAction = this.findNextHeaderAction(event.target.parentElement);\n    nextHeaderAction ? this.changeFocusedTab(nextHeaderAction) : this.onTabHomeKey(event);\n    event.preventDefault();\n  }\n  onTabArrowUpKey(event) {\n    const prevHeaderAction = this.findPrevHeaderAction(event.target.parentElement);\n    prevHeaderAction ? this.changeFocusedTab(prevHeaderAction) : this.onTabEndKey(event);\n    event.preventDefault();\n  }\n  onTabHomeKey(event) {\n    const firstHeaderAction = this.findFirstHeaderAction();\n    this.changeFocusedTab(firstHeaderAction);\n    event.preventDefault();\n  }\n  changeFocusedTab(element) {\n    if (element) {\n      focus(element);\n      if (this.selectOnFocus()) {\n        this.tabs.forEach((tab, i) => {\n          let selected = this.multiple() ? this._activeIndex.includes(i) : i === this._activeIndex;\n          if (this.multiple()) {\n            if (!this._activeIndex) {\n              this._activeIndex = [];\n            }\n            if (tab.id == element.id) {\n              tab.selected = !tab.selected;\n              if (!this._activeIndex.includes(i)) {\n                this._activeIndex.push(i);\n              } else {\n                this._activeIndex = this._activeIndex.filter(ind => ind !== i);\n              }\n            }\n          } else {\n            if (tab.id == element.id) {\n              tab.selected = !tab.selected;\n              this._activeIndex = i;\n            } else {\n              tab.selected = false;\n            }\n          }\n          tab.selectedChange.emit(selected);\n          this.activeIndexChange.emit(this._activeIndex);\n          tab.cd.markForCheck();\n        });\n      }\n    }\n  }\n  findNextHeaderAction(tabElement, selfCheck = false) {\n    const nextTabElement = selfCheck ? tabElement : tabElement.nextElementSibling;\n    const headerElement = findSingle(nextTabElement, '[data-pc-section=\"accordionheader\"]');\n    return headerElement ? getAttribute(headerElement, 'data-p-disabled') ? this.findNextHeaderAction(headerElement.parentElement) : findSingle(headerElement.parentElement, '[data-pc-section=\"accordionheader\"]') : null;\n  }\n  findPrevHeaderAction(tabElement, selfCheck = false) {\n    const prevTabElement = selfCheck ? tabElement : tabElement.previousElementSibling;\n    const headerElement = findSingle(prevTabElement, '[data-pc-section=\"accordionheader\"]');\n    return headerElement ? getAttribute(headerElement, 'data-p-disabled') ? this.findPrevHeaderAction(headerElement.parentElement) : findSingle(headerElement.parentElement, '[data-pc-section=\"accordionheader\"]') : null;\n  }\n  findFirstHeaderAction() {\n    const firstEl = this.el.nativeElement.firstElementChild;\n    return this.findNextHeaderAction(firstEl, true);\n  }\n  findLastHeaderAction() {\n    const lastEl = this.el.nativeElement.lastElementChild;\n    return this.findPrevHeaderAction(lastEl, true);\n  }\n  onTabEndKey(event) {\n    const lastHeaderAction = this.findLastHeaderAction();\n    this.changeFocusedTab(lastHeaderAction);\n    event.preventDefault();\n  }\n  ngAfterContentInit() {\n    this.initTabs();\n    this.tabListSubscription = this.tabList.changes.subscribe(_ => {\n      this.initTabs();\n    });\n  }\n  initTabs() {\n    this.tabs = this.tabList.toArray();\n    this.tabs.forEach(tab => {\n      tab.headerAriaLevel = this._headerAriaLevel;\n    });\n    this.updateSelectionState();\n    this.cd.markForCheck();\n  }\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n  updateSelectionState() {\n    if (this.tabs && this.tabs.length && this._activeIndex != null) {\n      for (let i = 0; i < this.tabs.length; i++) {\n        let selected = this.multiple() ? this._activeIndex.includes(i) : i === this._activeIndex;\n        let changed = selected !== this.tabs[i].selected;\n        if (changed) {\n          this.tabs[i].selected = selected;\n          this.tabs[i].selectedChange.emit(selected);\n          this.tabs[i].cd.markForCheck();\n        }\n      }\n    }\n  }\n  isTabActive(index) {\n    return this.multiple() ? this._activeIndex && this._activeIndex.includes(index) : this._activeIndex === index;\n  }\n  getTabProp(tab, name) {\n    return tab.props ? tab.props[name] : undefined;\n  }\n  updateActiveIndex() {\n    let index = this.multiple() ? [] : null;\n    this.tabs.forEach((tab, i) => {\n      if (tab.selected) {\n        if (this.multiple()) {\n          index.push(i);\n        } else {\n          index = i;\n          return;\n        }\n      }\n    });\n    this.preventActiveIndexPropagation = true;\n    this._activeIndex = index;\n    this.activeIndexChange.emit(index);\n  }\n  updateValue(value) {\n    const currentValue = this.value();\n    if (this.multiple()) {\n      const newValue = Array.isArray(currentValue) ? [...currentValue] : [];\n      const index = newValue.indexOf(value);\n      if (index !== -1) {\n        newValue.splice(index, 1);\n      } else {\n        newValue.push(value);\n      }\n      this.value.set(newValue);\n    } else {\n      if (currentValue === value) {\n        this.value.set(undefined);\n      } else {\n        this.value.set(value);\n      }\n    }\n  }\n  ngOnDestroy() {\n    if (this.tabListSubscription) {\n      this.tabListSubscription.unsubscribe();\n    }\n    super.ngOnDestroy();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵAccordion_BaseFactory;\n    return function Accordion_Factory(__ngFactoryType__) {\n      return (ɵAccordion_BaseFactory || (ɵAccordion_BaseFactory = i0.ɵɵgetInheritedFactory(Accordion)))(__ngFactoryType__ || Accordion);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Accordion,\n    selectors: [[\"p-accordion\"]],\n    contentQueries: function Accordion_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, AccordionTab, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabList = _t);\n      }\n    },\n    hostVars: 8,\n    hostBindings: function Accordion_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function Accordion_keydown_HostBindingHandler($event) {\n          return ctx.onKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.hostStyle);\n        i0.ɵɵclassMap(ctx.hostClass);\n        i0.ɵɵclassProp(\"p-accordion\", true)(\"p-component\", true);\n      }\n    },\n    inputs: {\n      value: [1, \"value\"],\n      multiple: [1, \"multiple\"],\n      style: \"style\",\n      styleClass: \"styleClass\",\n      expandIcon: \"expandIcon\",\n      collapseIcon: \"collapseIcon\",\n      selectOnFocus: [1, \"selectOnFocus\"],\n      transitionOptions: \"transitionOptions\",\n      activeIndex: \"activeIndex\",\n      headerAriaLevel: \"headerAriaLevel\"\n    },\n    outputs: {\n      value: \"valueChange\",\n      activeIndexChange: \"activeIndexChange\",\n      onClose: \"onClose\",\n      onOpen: \"onOpen\"\n    },\n    features: [i0.ɵɵProvidersFeature([AccordionStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function Accordion_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    dependencies: [CommonModule, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Accordion, [{\n    type: Component,\n    args: [{\n      selector: 'p-accordion',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      template: ` <ng-content /> `,\n      host: {\n        '[class.p-accordion]': 'true',\n        '[class.p-component]': 'true'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [AccordionStyle]\n    }]\n  }], null, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    hostStyle: [{\n      type: HostBinding,\n      args: ['style']\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    expandIcon: [{\n      type: Input\n    }],\n    collapseIcon: [{\n      type: Input\n    }],\n    transitionOptions: [{\n      type: Input\n    }],\n    activeIndexChange: [{\n      type: Output\n    }],\n    onClose: [{\n      type: Output\n    }],\n    onOpen: [{\n      type: Output\n    }],\n    tabList: [{\n      type: ContentChildren,\n      args: [AccordionTab, {\n        descendants: true\n      }]\n    }],\n    activeIndex: [{\n      type: Input\n    }],\n    headerAriaLevel: [{\n      type: Input\n    }],\n    onKeydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\nclass AccordionModule {\n  static ɵfac = function AccordionModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AccordionModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AccordionModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AccordionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent],\n      exports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Accordion, AccordionClasses, AccordionContent, AccordionHeader, AccordionModule, AccordionPanel, AccordionStyle, AccordionTab };","map":{"version":3,"names":["trigger","state","transition","style","animate","i2","CommonModule","i0","Injectable","inject","forwardRef","model","input","computed","ViewEncapsulation","ChangeDetectionStrategy","Component","HostListener","ContentChild","EventEmitter","numberAttribute","booleanAttribute","ContentChildren","Output","Input","HostBinding","signal","NgModule","findSingle","getAttribute","focus","uuid","Header","PrimeTemplate","SharedModule","BaseComponent","ChevronDownIcon","ChevronUpIcon","i1","Ripple","transformToBoolean","BaseStyle","_c0","_c1","_c2","a0","active","AccordionHeader_Conditional_1_0_ng_template_0_Template","rf","ctx","AccordionHeader_Conditional_1_0_Template","ɵɵtemplate","AccordionHeader_Conditional_1_Template","ctx_r0","ɵɵnextContext","ɵɵproperty","toggleicon","ɵɵpureFunction1","AccordionHeader_Conditional_2_ng_container_0_span_1_Template","ɵɵelement","ɵɵclassMap","pcAccordion","collapseIcon","iconClass","ɵɵattribute","AccordionHeader_Conditional_2_ng_container_0_ChevronDownIcon_2_Template","AccordionHeader_Conditional_2_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵadvance","AccordionHeader_Conditional_2_ng_container_1_span_1_Template","expandIcon","AccordionHeader_Conditional_2_ng_container_1_ChevronUpIcon_2_Template","AccordionHeader_Conditional_2_ng_container_1_Template","AccordionHeader_Conditional_2_Template","_c3","transitionParams","_c4","value","params","_c5","_c6","_c7","_c8","_c9","_c10","_c11","$implicit","AccordionTab_Conditional_1_Template","ɵɵtext","ɵɵtextInterpolate1","header","AccordionTab_Conditional_2_Conditional_0_ng_container_0_Template","ɵɵelementContainer","AccordionTab_Conditional_2_Conditional_0_Template","headerTemplate","_headerTemplate","AccordionTab_Conditional_2_Conditional_1_Template","ɵɵprojection","AccordionTab_Conditional_2_Template","ɵɵconditional","headerFacet","AccordionTab_Conditional_3_0_ng_template_0_Template","AccordionTab_Conditional_3_0_Template","AccordionTab_Conditional_3_Template","iconTemplate","_iconTemplate","selected","AccordionTab_Conditional_4_ng_container_0_span_1_Template","accordion","AccordionTab_Conditional_4_ng_container_0_ChevronDownIcon_2_Template","AccordionTab_Conditional_4_ng_container_0_Template","AccordionTab_Conditional_4_ng_container_1_span_1_Template","AccordionTab_Conditional_4_ng_container_1_ChevronUpIcon_2_Template","AccordionTab_Conditional_4_ng_container_1_Template","AccordionTab_Conditional_4_Template","AccordionTab_ng_container_8_ng_container_1_Template","AccordionTab_ng_container_8_Template","contentTemplate","_contentTemplate","theme","dt","classes","root","AccordionStyle","name","ɵfac","ɵAccordionStyle_BaseFactory","AccordionStyle_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","AccordionClasses","AccordionPanel","Accordion","undefined","disabled","transform","v","multiple","valueEquals","currentValue","Array","isArray","includes","ɵAccordionPanel_BaseFactory","AccordionPanel_Factory","ɵcmp","ɵɵdefineComponent","selectors","hostVars","hostBindings","AccordionPanel_HostBindings","ɵɵclassProp","inputs","outputs","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","AccordionPanel_Template","ɵɵprojectionDef","dependencies","encapsulation","changeDetection","args","selector","imports","standalone","OnPush","None","host","AccordionHeader","pcAccordionPanel","id","ariaControls","onClick","event","wasActive","changeActiveValue","isActive","index","onOpen","emit","originalEvent","onClose","onFocus","selectOnFocus","onKeydown","code","arrowDownKey","arrowUpKey","onHomeKey","onEndKey","onEnterKey","updateValue","findPanel","headerElement","closest","findHeader","panelElement","findNextPanel","selfCheck","element","nextElementSibling","findPrevPanel","previousElementSibling","findFirstPanel","el","nativeElement","firstElementChild","findLastPanel","lastElementChild","changeFocusedPanel","nextPanel","currentTarget","preventDefault","prevPanel","firstPanel","lastPanel","ɵAccordionHeader_BaseFactory","AccordionHeader_Factory","contentQueries","AccordionHeader_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","AccordionHeader_HostBindings","ɵɵlistener","AccordionHeader_click_HostBindingHandler","$event","AccordionHeader_focus_HostBindingHandler","AccordionHeader_keydown_HostBindingHandler","ɵɵstyleProp","ɵɵHostDirectivesFeature","consts","AccordionHeader_Template","NgClass","NgIf","NgTemplateOutlet","hostDirectives","AccordionContent","ariaLabelledby","ɵAccordionContent_BaseFactory","AccordionContent_Factory","AccordionContent_HostBindings","AccordionContent_Template","ɵɵelementStart","ɵɵelementEnd","transitionOptions","data","animation","height","paddingBottom","visibility","animations","AccordionTab","hostClass","tabStyleClass","hostStyle","tabStyle","headerStyle","contentStyle","headerStyleClass","contentStyleClass","cache","iconPos","_selected","val","loaded","cd","detectChanges","headerAriaLevel","selectedChange","templates","_componentStyle","ngOnInit","console","log","ngAfterContentInit","forEach","item","getType","toggle","findTabIndex","i","tabs","length","markForCheck","updateActiveIndex","getTabHeaderActionId","tabId","getTabContentId","ngOnDestroy","splice","ɵAccordionTab_BaseFactory","AccordionTab_Factory","AccordionTab_ContentQueries","AccordionTab_HostBindings","ɵɵstyleMap","ɵɵProvidersFeature","AccordionTab_Template","AccordionTab_Template_button_click_0_listener","AccordionTab_Template_button_keydown_0_listener","NgStyle","providers","descendants","styleClass","activeIndex","_activeIndex","preventActiveIndexPropagation","updateSelectionState","activeIndexChange","_headerAriaLevel","tabList","tabListSubscription","onTabArrowDownKey","onTabArrowUpKey","shiftKey","onTabHomeKey","onTabEndKey","nextHeaderAction","findNextHeaderAction","target","parentElement","changeFocusedTab","prevHeaderAction","findPrevHeaderAction","firstHeaderAction","findFirstHeaderAction","tab","push","filter","ind","tabElement","nextTabElement","prevTabElement","firstEl","findLastHeaderAction","lastEl","lastHeaderAction","initTabs","changes","subscribe","_","toArray","getBlockableElement","children","changed","isTabActive","getTabProp","props","newValue","indexOf","set","unsubscribe","ɵAccordion_BaseFactory","Accordion_Factory","Accordion_ContentQueries","Accordion_HostBindings","Accordion_keydown_HostBindingHandler","Accordion_Template","AccordionModule","AccordionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sources":["/home/project/node_modules/primeng/fesm2022/primeng-accordion.mjs"],"sourcesContent":["import { trigger, state, transition, style, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, forwardRef, model, input, computed, ViewEncapsulation, ChangeDetectionStrategy, Component, HostListener, ContentChild, EventEmitter, numberAttribute, booleanAttribute, ContentChildren, Output, Input, HostBinding, signal, NgModule } from '@angular/core';\nimport { findSingle, getAttribute, focus, uuid } from '@primeuix/utils';\nimport { Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ChevronDownIcon, ChevronUpIcon } from 'primeng/icons';\nimport * as i1 from 'primeng/ripple';\nimport { Ripple } from 'primeng/ripple';\nimport { transformToBoolean } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-accordionpanel {\n    display: flex;\n    flex-direction: column;\n    border-style: solid;\n    border-width: ${dt('accordion.panel.border.width')};\n    border-color: ${dt('accordion.panel.border.color')};\n}\n\n.p-accordionheader {\n    all: unset;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: ${dt('accordion.header.padding')};\n    color: ${dt('accordion.header.color')};\n    background: ${dt('accordion.header.background')};\n    border-style: solid;\n    border-width: ${dt('accordion.header.border.width')};\n    border-color: ${dt('accordion.header.border.color')};\n    font-weight: ${dt('accordion.header.font.weight')};\n    border-radius: ${dt('accordion.header.border.radius')};\n    transition: background ${dt('accordion.transition.duration')}; color ${dt('accordion.transition.duration')}color ${dt('accordion.transition.duration')}, outline-color ${dt('accordion.transition.duration')}, box-shadow ${dt('accordion.transition.duration')};\n    outline-color: transparent;\n    position: relative;\n    overflow: hidden;\n}\n\n.p-accordionpanel:first-child > .p-accordionheader {\n    border-width: ${dt('accordion.header.first.border.width')};\n    border-start-start-radius: ${dt('accordion.header.first.top.border.radius')};\n    border-start-end-radius: ${dt('accordion.header.first.top.border.radius')};\n}\n\n.p-accordionpanel:last-child > .p-accordionheader {\n    border-end-start-radius: ${dt('accordion.header.last.bottom.border.radius')};\n    border-end-end-radius: ${dt('accordion.header.last.bottom.border.radius')};\n}\n\n.p-accordionpanel:last-child.p-accordionpanel-active > .p-accordionheader {\n    border-end-start-radius: ${dt('accordion.header.last.active.bottom.border.radius')};\n    border-end-end-radius:${dt('accordion.header.last.active.bottom.border.radius')};\n}\n\n.p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.color')};\n}\n\n.p-accordionpanel:not(.p-disabled) .p-accordionheader:focus-visible {\n    box-shadow: ${dt('accordion.header.focus.ring.shadow')};\n    outline: ${dt('accordion.header.focus.ring.width')} ${dt('accordion.header.focus.ring.style')} ${dt('accordion.header.focus.ring.color')};\n    outline-offset: ${dt('accordion.header.focus.ring.offset')};\n}\n\n.p-accordionpanel:not(.p-accordionpanel-active):not(.p-disabled) > .p-accordionheader:hover {\n    background: ${dt('accordion.header.hover.background')};\n    color: ${dt('accordion.header.hover.color')}\n}\n\n.p-accordionpanel:not(.p-accordionpanel-active):not(.p-disabled) .p-accordionheader:hover .p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.hover.color')};\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader {\n    background: ${dt('accordion.header.active.background')};\n    color: ${dt('accordion.header.active.color')}\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader .p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.active.color')};\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader:hover  {\n    background: ${dt('accordion.header.active.hover.background')};\n    color: ${dt('accordion.header.active.hover.color')}\n}\n\n.p-accordionpanel:not(.p-disabled).p-accordionpanel-active > .p-accordionheader:hover  .p-accordionheader-toggle-icon {\n    color: ${dt('accordion.header.toggle.icon.active.hover.color')};\n}\n\n.p-accordioncontent-content {\n    border-style: solid;\n    border-width: ${dt('accordion.content.border.width')};\n    border-color: ${dt('accordion.content.border.color')};\n    background-color: ${dt('accordion.content.background')};\n    color: ${dt('accordion.content.color')};\n    padding: ${dt('accordion.content.padding')}\n}\n\n/*For PrimeNG*/\n\n.p-accordion .p-accordioncontent {\n    overflow: hidden;\n}\n\n.p-accordionpanel.p-accordioncontent:not(.ng-animating) {\n    overflow: inherit;\n}\n\n.p-accordionheader-toggle-icon.icon-start {\n    order: -1;\n}\n\n.p-accordionheader:has(.p-accordionheader-toggle-icon.icon-start) {\n    justify-content: flex-start;\n    gap: ${dt('accordion.header.padding')};\n}\n`;\nconst classes = {\n    root: 'p-accordion p-component'\n};\nclass AccordionStyle extends BaseStyle {\n    name = 'accordion';\n    theme = theme;\n    classes = classes;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionStyle });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionStyle, decorators: [{\n            type: Injectable\n        }] });\n/**\n *\n * Accordion groups a collection of contents in tabs.\n *\n * [Live Demo](https://www.primeng.org/accordion/)\n *\n * @module accordionstyle\n *\n */\nvar AccordionClasses;\n(function (AccordionClasses) {\n    /**\n     * Class name of the root element\n     */\n    AccordionClasses[\"root\"] = \"p-accordion\";\n    /**\n     * Class name of the content wrapper\n     */\n    AccordionClasses[\"contentwrapper\"] = \"p-accordioncontent\";\n    /**\n     * Class name of the content\n     */\n    AccordionClasses[\"content\"] = \"p-accordioncontent-content\";\n    /**\n     * Class name of the header\n     */\n    AccordionClasses[\"header\"] = \"p-accordionheader\";\n    /**\n     * Class name of the toggle icon\n     */\n    AccordionClasses[\"toggleicon\"] = \"p-accordionheader-toggle-icon\";\n    /**\n     * Class name of the panel\n     */\n    AccordionClasses[\"panel\"] = \"p-accordionpanel\";\n})(AccordionClasses || (AccordionClasses = {}));\n\n/**\n * AccordionPanel is a helper component for Accordion component.\n * @group Components\n */\nclass AccordionPanel extends BaseComponent {\n    pcAccordion = inject(forwardRef(() => Accordion));\n    /**\n     * Value of the active tab.\n     * @defaultValue undefined\n     * @group Props\n     */\n    value = model(undefined);\n    /**\n     * Disables the tab when enabled.\n     * @defaultValue false\n     * @group Props\n     */\n    disabled = input(false, { transform: (v) => transformToBoolean(v) });\n    active = computed(() => (this.pcAccordion.multiple() ? this.valueEquals(this.pcAccordion.value(), this.value()) : this.pcAccordion.value() === this.value()));\n    valueEquals(currentValue, value) {\n        if (Array.isArray(currentValue)) {\n            return currentValue.includes(value);\n        }\n        return currentValue === value;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionPanel, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.2.10\", type: AccordionPanel, isStandalone: true, selector: \"p-accordion-panel, p-accordionpanel\", inputs: { value: { classPropertyName: \"value\", publicName: \"value\", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: \"disabled\", publicName: \"disabled\", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { value: \"valueChange\" }, host: { properties: { \"class.p-accordionpanel\": \"true\", \"class.p-accordionpanel-active\": \"active()\", \"class.p-disabled\": \"disabled()\", \"attr.data-pc-name\": \"\\\"accordionpanel\\\"\", \"attr.data-p-disabled\": \"disabled()\", \"attr.data-p-active\": \"active()\" } }, usesInheritance: true, ngImport: i0, template: `<ng-content />`, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-accordion-panel, p-accordionpanel',\n                    imports: [CommonModule],\n                    standalone: true,\n                    template: `<ng-content />`,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class.p-accordionpanel]': 'true',\n                        '[class.p-accordionpanel-active]': 'active()',\n                        '[class.p-disabled]': 'disabled()',\n                        '[attr.data-pc-name]': '\"accordionpanel\"',\n                        '[attr.data-p-disabled]': 'disabled()',\n                        '[attr.data-p-active]': 'active()'\n                    }\n                }]\n        }] });\n/**\n * AccordionHeader is a helper component for Accordion component.\n * @group Components\n */\nclass AccordionHeader extends BaseComponent {\n    pcAccordion = inject(forwardRef(() => Accordion));\n    pcAccordionPanel = inject(forwardRef(() => AccordionPanel));\n    id = computed(() => `${this.pcAccordion.id()}_accordionheader_${this.pcAccordionPanel.value()}`);\n    active = computed(() => this.pcAccordionPanel.active());\n    disabled = computed(() => this.pcAccordionPanel.disabled());\n    ariaControls = computed(() => `${this.pcAccordion.id()}_accordioncontent_${this.pcAccordionPanel.value()}`);\n    /**\n     * Toggle icon template.\n     * @type {TemplateRef<AccordionToggleIconTemplateContext>} context - Context of the template\n     * @example\n     * ```html\n     * <ng-template #toggleicon let-active=\"active\"> </ng-template>\n     * ```\n     * @see {@link AccordionToggleIconTemplateContext}\n     * @group Templates\n     */\n    toggleicon;\n    onClick(event) {\n        const wasActive = this.active();\n        this.changeActiveValue();\n        const isActive = this.active();\n        const index = this.pcAccordionPanel.value();\n        if (!wasActive && isActive) {\n            this.pcAccordion.onOpen.emit({ originalEvent: event, index });\n        }\n        else if (wasActive && !isActive) {\n            this.pcAccordion.onClose.emit({ originalEvent: event, index });\n        }\n    }\n    onFocus() {\n        this.pcAccordion.selectOnFocus() && this.changeActiveValue();\n    }\n    onKeydown(event) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.arrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.arrowUpKey(event);\n                break;\n            case 'Home':\n                this.onHomeKey(event);\n                break;\n            case 'End':\n                this.onEndKey(event);\n                break;\n            case 'Enter':\n            case 'Space':\n            case 'NumpadEnter':\n                this.onEnterKey(event);\n                break;\n            default:\n                break;\n        }\n    }\n    changeActiveValue() {\n        this.pcAccordion.updateValue(this.pcAccordionPanel.value());\n    }\n    findPanel(headerElement) {\n        return headerElement?.closest('[data-pc-name=\"accordionpanel\"]');\n    }\n    findHeader(panelElement) {\n        return findSingle(panelElement, '[data-pc-name=\"accordionheader\"]');\n    }\n    findNextPanel(panelElement, selfCheck = false) {\n        const element = selfCheck ? panelElement : panelElement.nextElementSibling;\n        return element ? (getAttribute(element, 'data-p-disabled') ? this.findNextPanel(element) : this.findHeader(element)) : null;\n    }\n    findPrevPanel(panelElement, selfCheck = false) {\n        const element = selfCheck ? panelElement : panelElement.previousElementSibling;\n        return element ? (getAttribute(element, 'data-p-disabled') ? this.findPrevPanel(element) : this.findHeader(element)) : null;\n    }\n    findFirstPanel() {\n        return this.findNextPanel(this.pcAccordion.el.nativeElement.firstElementChild, true);\n    }\n    findLastPanel() {\n        return this.findPrevPanel(this.pcAccordion.el.nativeElement.lastElementChild, true);\n    }\n    changeFocusedPanel(event, element) {\n        focus(element);\n    }\n    arrowDownKey(event) {\n        const nextPanel = this.findNextPanel(this.findPanel(event.currentTarget));\n        nextPanel ? this.changeFocusedPanel(event, nextPanel) : this.onHomeKey(event);\n        event.preventDefault();\n    }\n    arrowUpKey(event) {\n        const prevPanel = this.findPrevPanel(this.findPanel(event.currentTarget));\n        prevPanel ? this.changeFocusedPanel(event, prevPanel) : this.onEndKey(event);\n        event.preventDefault();\n    }\n    onHomeKey(event) {\n        const firstPanel = this.findFirstPanel();\n        this.changeFocusedPanel(event, firstPanel);\n        event.preventDefault();\n    }\n    onEndKey(event) {\n        const lastPanel = this.findLastPanel();\n        this.changeFocusedPanel(event, lastPanel);\n        event.preventDefault();\n    }\n    onEnterKey(event) {\n        this.changeActiveValue();\n        event.preventDefault();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionHeader, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.2.10\", type: AccordionHeader, isStandalone: true, selector: \"p-accordion-header, p-accordionheader\", host: { listeners: { \"click\": \"onClick($event)\", \"focus\": \"onFocus($event)\", \"keydown\": \"onKeydown($event)\" }, properties: { \"class.p-accordionheader\": \"true\", \"attr.id\": \"id()\", \"attr.aria-expanded\": \"active()\", \"attr.aria-controls\": \"ariaControls()\", \"attr.aria-disabled\": \"disabled()\", \"attr.role\": \"\\\"button\\\"\", \"attr.tabindex\": \"disabled()?\\\"-1\\\":\\\"0\\\"\", \"attr.data-p-active\": \"active()\", \"attr.data-p-disabled\": \"disabled()\", \"attr.data-pc-name\": \"\\\"accordionheader\\\"\", \"style.user-select\": \"\\\"none\\\"\" } }, queries: [{ propertyName: \"toggleicon\", first: true, predicate: [\"toggleicon\"], descendants: true }], usesInheritance: true, hostDirectives: [{ directive: i1.Ripple }], ngImport: i0, template: `\n        <ng-content />\n        @if (toggleicon) {\n            <ng-template *ngTemplateOutlet=\"toggleicon; context: { active: active() }\"></ng-template>\n        } @else {\n            <ng-container *ngIf=\"active()\">\n                <span *ngIf=\"pcAccordion.collapseIcon\" [class]=\"pcAccordion.collapseIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\"></span>\n                <ChevronDownIcon *ngIf=\"!pcAccordion.collapseIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n            <ng-container *ngIf=\"!active()\">\n                <span *ngIf=\"pcAccordion.expandIcon\" [class]=\"pcAccordion.expandIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\"></span>\n                <ChevronUpIcon *ngIf=\"!pcAccordion.expandIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n        }\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: ChevronDownIcon, selector: \"ChevronDownIcon\" }, { kind: \"component\", type: ChevronUpIcon, selector: \"ChevronUpIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionHeader, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-accordion-header, p-accordionheader',\n                    imports: [CommonModule, ChevronDownIcon, ChevronUpIcon],\n                    standalone: true,\n                    template: `\n        <ng-content />\n        @if (toggleicon) {\n            <ng-template *ngTemplateOutlet=\"toggleicon; context: { active: active() }\"></ng-template>\n        } @else {\n            <ng-container *ngIf=\"active()\">\n                <span *ngIf=\"pcAccordion.collapseIcon\" [class]=\"pcAccordion.collapseIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\"></span>\n                <ChevronDownIcon *ngIf=\"!pcAccordion.collapseIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n            <ng-container *ngIf=\"!active()\">\n                <span *ngIf=\"pcAccordion.expandIcon\" [class]=\"pcAccordion.expandIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\"></span>\n                <ChevronUpIcon *ngIf=\"!pcAccordion.expandIcon\" [ngClass]=\"pcAccordion.iconClass\" [attr.aria-hidden]=\"true\" />\n            </ng-container>\n        }\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class.p-accordionheader]': 'true',\n                        '[attr.id]': 'id()',\n                        '[attr.aria-expanded]': 'active()',\n                        '[attr.aria-controls]': 'ariaControls()',\n                        '[attr.aria-disabled]': 'disabled()',\n                        '[attr.role]': '\"button\"',\n                        '[attr.tabindex]': 'disabled()?\"-1\":\"0\"',\n                        '[attr.data-p-active]': 'active()',\n                        '[attr.data-p-disabled]': 'disabled()',\n                        '[attr.data-pc-name]': '\"accordionheader\"',\n                        '[style.user-select]': '\"none\"'\n                    },\n                    hostDirectives: [Ripple]\n                }]\n        }], propDecorators: { toggleicon: [{\n                type: ContentChild,\n                args: ['toggleicon']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focus', ['$event']]\n            }], onKeydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\nclass AccordionContent extends BaseComponent {\n    pcAccordion = inject(forwardRef(() => Accordion));\n    pcAccordionPanel = inject(forwardRef(() => AccordionPanel));\n    active = computed(() => this.pcAccordionPanel.active());\n    ariaLabelledby = computed(() => `${this.pcAccordion.id()}_accordionheader_${this.pcAccordionPanel.value()}`);\n    id = computed(() => `${this.pcAccordion.id()}_accordioncontent_${this.pcAccordionPanel.value()}`);\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionContent, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.10\", type: AccordionContent, isStandalone: true, selector: \"p-accordion-content, p-accordioncontent\", host: { properties: { \"class.p-accordioncontent\": \"true\", \"attr.id\": \"id()\", \"attr.role\": \"\\\"region\\\"\", \"attr.data-pc-name\": \"\\\"accordioncontent\\\"\", \"attr.data-p-active\": \"active()\", \"attr.aria-labelledby\": \"ariaLabelledby()\" } }, usesInheritance: true, ngImport: i0, template: ` <div [@content]=\"active() ? { value: 'visible', params: { transitionParams: pcAccordion.transitionOptions } } : { value: 'hidden', params: { transitionParams: pcAccordion.transitionOptions } }\" class=\"p-accordioncontent-content\">\n        <ng-content />\n    </div>`, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }], animations: [\n            trigger('content', [\n                state('hidden', style({\n                    height: '0',\n                    paddingBottom: '0',\n                    visibility: 'hidden'\n                })),\n                state('visible', style({\n                    height: '*',\n                    visibility: 'visible'\n                })),\n                transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                transition('void => *', animate(0))\n            ])\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-accordion-content, p-accordioncontent',\n                    imports: [CommonModule],\n                    standalone: true,\n                    template: ` <div [@content]=\"active() ? { value: 'visible', params: { transitionParams: pcAccordion.transitionOptions } } : { value: 'hidden', params: { transitionParams: pcAccordion.transitionOptions } }\" class=\"p-accordioncontent-content\">\n        <ng-content />\n    </div>`,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class.p-accordioncontent]': 'true',\n                        '[attr.id]': 'id()',\n                        '[attr.role]': '\"region\"',\n                        '[attr.data-pc-name]': '\"accordioncontent\"',\n                        '[attr.data-p-active]': 'active()',\n                        '[attr.aria-labelledby]': 'ariaLabelledby()'\n                    },\n                    animations: [\n                        trigger('content', [\n                            state('hidden', style({\n                                height: '0',\n                                paddingBottom: '0',\n                                visibility: 'hidden'\n                            })),\n                            state('visible', style({\n                                height: '*',\n                                visibility: 'visible'\n                            })),\n                            transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                            transition('void => *', animate(0))\n                        ])\n                    ]\n                }]\n        }] });\n/**\n * AccordionTab is a helper component for Accordion.\n * @deprecated Use AccordionPanel, AccordionHeader, AccordionContent instead.\n * @group Components\n */\nclass AccordionTab extends BaseComponent {\n    get hostClass() {\n        return this.tabStyleClass;\n    }\n    get hostStyle() {\n        return this.tabStyle;\n    }\n    /**\n     * Current id state as a string.\n     * @group Props\n     */\n    id = uuid('pn_id_');\n    /**\n     * Used to define the header of the tab.\n     * @group Props\n     */\n    header;\n    /**\n     * Inline style of the tab header.\n     * @group Props\n     */\n    headerStyle;\n    /**\n     * Inline style of the tab.\n     * @group Props\n     */\n    tabStyle;\n    /**\n     * Inline style of the tab content.\n     * @group Props\n     */\n    contentStyle;\n    /**\n     * Style class of the tab.\n     * @group Props\n     */\n    tabStyleClass;\n    /**\n     * Style class of the tab header.\n     * @group Props\n     */\n    headerStyleClass;\n    /**\n     * Style class of the tab content.\n     * @group Props\n     */\n    contentStyleClass;\n    /**\n     * Whether the tab is disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Whether a lazy loaded panel should avoid getting loaded again on reselection.\n     * @group Props\n     */\n    cache = true;\n    /**\n     * Transition options of the animation.\n     * @group Props\n     */\n    transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    /**\n     * Position of the icon.\n     * @group Props\n     */\n    iconPos = 'start';\n    /**\n     * The value that returns the selection.\n     * @group Props\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(val) {\n        this._selected = val;\n        if (!this.loaded) {\n            if (this._selected && this.cache) {\n                this.loaded = true;\n            }\n            this.cd.detectChanges();\n        }\n    }\n    /**\n     * The aria-level that each accordion header will have. The default value is 2 as per W3C specifications\n     * @group Props\n     */\n    headerAriaLevel = 2;\n    /**\n     * Event triggered by changing the choice.\n     * @param {boolean} value - Boolean value indicates that the option is changed.\n     * @group Emits\n     */\n    selectedChange = new EventEmitter();\n    headerFacet;\n    _selected = false;\n    get iconClass() {\n        if (this.iconPos === 'end') {\n            return 'p-accordionheader-toggle-icon icon-end';\n        }\n        else {\n            return 'p-accordionheader-toggle-icon icon-start';\n        }\n    }\n    /**\n     * Content template for the content of the drawer.\n     * @group Templates\n     */\n    headerTemplate;\n    /**\n     * Template for the header icon.\n     * @group Templates\n     */\n    iconTemplate;\n    /**\n     * Content template for the footer of the drawer.\n     * @group Templates\n     */\n    contentTemplate;\n    templates;\n    _headerTemplate;\n    _iconTemplate;\n    _contentTemplate;\n    loaded = false;\n    accordion = inject(forwardRef(() => Accordion));\n    _componentStyle = inject(AccordionStyle);\n    ngOnInit() {\n        super.ngOnInit();\n        console.log('AccordionTab is deprecated as of v18, please use the new structure instead.');\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this._contentTemplate = item.template;\n                    break;\n                case 'header':\n                    this._headerTemplate = item.template;\n                    break;\n                case 'icon':\n                    this._iconTemplate = item.template;\n                    break;\n                default:\n                    this._contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    toggle(event) {\n        if (this.disabled) {\n            return false;\n        }\n        let index = this.findTabIndex();\n        if (this.selected) {\n            this.selected = false;\n            this.accordion.onClose.emit({ originalEvent: event, index: index });\n        }\n        else {\n            if (!this.accordion.multiple()) {\n                for (var i = 0; i < this.accordion.tabs.length; i++) {\n                    if (this.accordion.tabs[i].selected) {\n                        this.accordion.tabs[i].selected = false;\n                        this.accordion.tabs[i].selectedChange.emit(false);\n                        this.accordion.tabs[i].cd.markForCheck();\n                    }\n                }\n            }\n            this.selected = true;\n            this.loaded = true;\n            this.accordion.onOpen.emit({ originalEvent: event, index: index });\n        }\n        this.selectedChange.emit(this.selected);\n        this.accordion.updateActiveIndex();\n        this.cd.markForCheck();\n        event?.preventDefault();\n    }\n    findTabIndex() {\n        let index = -1;\n        for (var i = 0; i < this.accordion.tabs.length; i++) {\n            if (this.accordion.tabs[i] == this) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n    onKeydown(event) {\n        switch (event.code) {\n            case 'Enter':\n            case 'Space':\n                this.toggle(event);\n                event.preventDefault();\n                break;\n            default:\n                break;\n        }\n    }\n    getTabHeaderActionId(tabId) {\n        return `${tabId}_header_action`;\n    }\n    getTabContentId(tabId) {\n        return `${tabId}_content`;\n    }\n    ngOnDestroy() {\n        this.accordion.tabs.splice(this.findTabIndex(), 1);\n        super.ngOnDestroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionTab, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.2.10\", type: AccordionTab, isStandalone: true, selector: \"p-accordionTab, p-accordion-tab, p-accordiontab\", inputs: { id: \"id\", header: \"header\", headerStyle: \"headerStyle\", tabStyle: \"tabStyle\", contentStyle: \"contentStyle\", tabStyleClass: \"tabStyleClass\", headerStyleClass: \"headerStyleClass\", contentStyleClass: \"contentStyleClass\", disabled: [\"disabled\", \"disabled\", booleanAttribute], cache: [\"cache\", \"cache\", booleanAttribute], transitionOptions: \"transitionOptions\", iconPos: \"iconPos\", selected: \"selected\", headerAriaLevel: [\"headerAriaLevel\", \"headerAriaLevel\", numberAttribute] }, outputs: { selectedChange: \"selectedChange\" }, host: { properties: { \"class.p-accordionpanel\": \"true\", \"class.p-accordionpanel-active\": \"selected\", \"attr.data-pc-name\": \"\\\"accordiontab\\\"\", \"class\": \"this.hostClass\", \"style\": \"this.hostStyle\" } }, providers: [AccordionStyle], queries: [{ propertyName: \"headerTemplate\", first: true, predicate: [\"header\"] }, { propertyName: \"iconTemplate\", first: true, predicate: [\"icon\"] }, { propertyName: \"contentTemplate\", first: true, predicate: [\"content\"] }, { propertyName: \"headerFacet\", predicate: Header }, { propertyName: \"templates\", predicate: PrimeTemplate }], usesInheritance: true, ngImport: i0, template: `\n        <button\n            class=\"p-accordionheader\"\n            type=\"button\"\n            [disabled]=\"disabled\"\n            [attr.aria-expanded]=\"selected\"\n            [attr.aria-level]=\"headerAriaLevel\"\n            [class.p-disabled]=\"disabled\"\n            [attr.data-p-disabled]=\"disabled\"\n            [attr.data-pc-section]=\"'accordionheader'\"\n            (click)=\"toggle($event)\"\n            (keydown)=\"onKeydown($event)\"\n            [ngClass]=\"headerStyleClass\"\n            [ngStyle]=\"headerStyle\"\n            [attr.tabindex]=\"disabled ? null : 0\"\n            [attr.id]=\"getTabHeaderActionId(id)\"\n            [attr.aria-controls]=\"getTabContentId(id)\"\n        >\n            @if (!headerTemplate && !_headerTemplate) {\n                {{ header }}\n            } @else {\n                @if (headerTemplate || _headerTemplate) {\n                    <ng-container *ngTemplateOutlet=\"headerTemplate || _headerTemplate\"></ng-container>\n                }\n                @if (headerFacet) {\n                    <ng-content select=\"p-header\" />\n                }\n            }\n            @if (iconTemplate || _iconTemplate) {\n                <ng-template *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { $implicit: selected }\"></ng-template>\n            } @else {\n                <ng-container *ngIf=\"selected\">\n                    <span *ngIf=\"accordion.collapseIcon\" [class]=\"accordion.collapseIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\"></span>\n                    <ChevronDownIcon *ngIf=\"!accordion.collapseIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\" />\n                </ng-container>\n                <ng-container *ngIf=\"!selected\">\n                    <span *ngIf=\"accordion.expandIcon\" [class]=\"accordion.expandIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\"></span>\n                    <ChevronUpIcon *ngIf=\"!accordion.expandIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\" />\n                </ng-container>\n            }\n        </button>\n        <div\n            [attr.id]=\"getTabContentId(id)\"\n            class=\"p-accordioncontent\"\n            [@tabContent]=\"selected ? { value: 'visible', params: { transitionParams: transitionOptions } } : { value: 'hidden', params: { transitionParams: transitionOptions } }\"\n            role=\"region\"\n            [attr.aria-hidden]=\"!selected\"\n            [attr.aria-labelledby]=\"getTabHeaderActionId(id)\"\n            [attr.data-pc-section]=\"'toggleablecontent'\"\n        >\n            <div class=\"p-accordioncontent-content\" [ngClass]=\"contentStyleClass\" [ngStyle]=\"contentStyle\">\n                <ng-content />\n                <ng-container *ngIf=\"(contentTemplate || _contentTemplate) && (cache ? loaded : selected)\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate\"></ng-container>\n                </ng-container>\n            </div>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: ChevronDownIcon, selector: \"ChevronDownIcon\" }, { kind: \"component\", type: ChevronUpIcon, selector: \"ChevronUpIcon\" }], animations: [\n            trigger('tabContent', [\n                state('hidden', style({\n                    height: '0',\n                    visibility: 'hidden'\n                })),\n                state('visible', style({\n                    height: '*',\n                    visibility: 'visible'\n                })),\n                transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                transition('void => *', animate(0))\n            ])\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionTab, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-accordionTab, p-accordion-tab, p-accordiontab',\n                    standalone: true,\n                    imports: [CommonModule, ChevronDownIcon, ChevronUpIcon],\n                    template: `\n        <button\n            class=\"p-accordionheader\"\n            type=\"button\"\n            [disabled]=\"disabled\"\n            [attr.aria-expanded]=\"selected\"\n            [attr.aria-level]=\"headerAriaLevel\"\n            [class.p-disabled]=\"disabled\"\n            [attr.data-p-disabled]=\"disabled\"\n            [attr.data-pc-section]=\"'accordionheader'\"\n            (click)=\"toggle($event)\"\n            (keydown)=\"onKeydown($event)\"\n            [ngClass]=\"headerStyleClass\"\n            [ngStyle]=\"headerStyle\"\n            [attr.tabindex]=\"disabled ? null : 0\"\n            [attr.id]=\"getTabHeaderActionId(id)\"\n            [attr.aria-controls]=\"getTabContentId(id)\"\n        >\n            @if (!headerTemplate && !_headerTemplate) {\n                {{ header }}\n            } @else {\n                @if (headerTemplate || _headerTemplate) {\n                    <ng-container *ngTemplateOutlet=\"headerTemplate || _headerTemplate\"></ng-container>\n                }\n                @if (headerFacet) {\n                    <ng-content select=\"p-header\" />\n                }\n            }\n            @if (iconTemplate || _iconTemplate) {\n                <ng-template *ngTemplateOutlet=\"iconTemplate || _iconTemplate; context: { $implicit: selected }\"></ng-template>\n            } @else {\n                <ng-container *ngIf=\"selected\">\n                    <span *ngIf=\"accordion.collapseIcon\" [class]=\"accordion.collapseIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\"></span>\n                    <ChevronDownIcon *ngIf=\"!accordion.collapseIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\" />\n                </ng-container>\n                <ng-container *ngIf=\"!selected\">\n                    <span *ngIf=\"accordion.expandIcon\" [class]=\"accordion.expandIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\"></span>\n                    <ChevronUpIcon *ngIf=\"!accordion.expandIcon\" [ngClass]=\"iconClass\" [attr.aria-hidden]=\"true\" />\n                </ng-container>\n            }\n        </button>\n        <div\n            [attr.id]=\"getTabContentId(id)\"\n            class=\"p-accordioncontent\"\n            [@tabContent]=\"selected ? { value: 'visible', params: { transitionParams: transitionOptions } } : { value: 'hidden', params: { transitionParams: transitionOptions } }\"\n            role=\"region\"\n            [attr.aria-hidden]=\"!selected\"\n            [attr.aria-labelledby]=\"getTabHeaderActionId(id)\"\n            [attr.data-pc-section]=\"'toggleablecontent'\"\n        >\n            <div class=\"p-accordioncontent-content\" [ngClass]=\"contentStyleClass\" [ngStyle]=\"contentStyle\">\n                <ng-content />\n                <ng-container *ngIf=\"(contentTemplate || _contentTemplate) && (cache ? loaded : selected)\">\n                    <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate\"></ng-container>\n                </ng-container>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('tabContent', [\n                            state('hidden', style({\n                                height: '0',\n                                visibility: 'hidden'\n                            })),\n                            state('visible', style({\n                                height: '*',\n                                visibility: 'visible'\n                            })),\n                            transition('visible <=> hidden', [animate('{{transitionParams}}')]),\n                            transition('void => *', animate(0))\n                        ])\n                    ],\n                    host: {\n                        '[class.p-accordionpanel]': 'true',\n                        '[class.p-accordionpanel-active]': 'selected',\n                        '[attr.data-pc-name]': '\"accordiontab\"'\n                    },\n                    providers: [AccordionStyle],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None\n                }]\n        }], propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class']\n            }], hostStyle: [{\n                type: HostBinding,\n                args: ['style']\n            }], id: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], headerStyle: [{\n                type: Input\n            }], tabStyle: [{\n                type: Input\n            }], contentStyle: [{\n                type: Input\n            }], tabStyleClass: [{\n                type: Input\n            }], headerStyleClass: [{\n                type: Input\n            }], contentStyleClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], cache: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], transitionOptions: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], headerAriaLevel: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], selectedChange: [{\n                type: Output\n            }], headerFacet: [{\n                type: ContentChildren,\n                args: [Header]\n            }], headerTemplate: [{\n                type: ContentChild,\n                args: ['header', { descendants: false }]\n            }], iconTemplate: [{\n                type: ContentChild,\n                args: ['icon', { descendants: false }]\n            }], contentTemplate: [{\n                type: ContentChild,\n                args: ['content', { descendants: false }]\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\n/**\n * Accordion groups a collection of contents in tabs.\n * @group Components\n */\nclass Accordion extends BaseComponent {\n    get hostClass() {\n        return this.styleClass;\n    }\n    get hostStyle() {\n        return this.style;\n    }\n    /**\n     * Value of the active tab.\n     * @defaultValue undefined\n     * @group Props\n     */\n    value = model(undefined);\n    /**\n     * When enabled, multiple tabs can be activated at the same time.\n     * @defaultValue false\n     * @group Props\n     */\n    multiple = input(false, { transform: (v) => transformToBoolean(v) });\n    /**\n     * Inline style of the tab header and content.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Icon of a collapsed tab.\n     * @group Props\n     */\n    expandIcon;\n    /**\n     * Icon of an expanded tab.\n     * @group Props\n     */\n    collapseIcon;\n    /**\n     * When enabled, the focused tab is activated.\n     * @defaultValue false\n     * @group Props\n     */\n    selectOnFocus = input(false, { transform: (v) => transformToBoolean(v) });\n    set activeIndex(val) {\n        this._activeIndex = val;\n        if (this.preventActiveIndexPropagation) {\n            this.preventActiveIndexPropagation = false;\n            return;\n        }\n        this.updateSelectionState();\n    }\n    /**\n     * Transition options of the animation.\n     * @group Props\n     */\n    transitionOptions = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    /**\n     * Returns the active index.\n     * @param {number | number[]} value - New index.\n     * @deprecated use native valueChange emitter of the value model.\n     * @group Emits\n     */\n    activeIndexChange = new EventEmitter();\n    set headerAriaLevel(val) {\n        if (typeof val === 'number' && val > 0) {\n            this._headerAriaLevel = val;\n        }\n        else if (this._headerAriaLevel !== 2) {\n            this._headerAriaLevel = 2;\n        }\n    }\n    /**\n     * Callback to invoke when an active tab is collapsed by clicking on the header.\n     * @param {AccordionTabCloseEvent} event - Custom tab close event.\n     * @group Emits\n     */\n    onClose = new EventEmitter();\n    /**\n     * Callback to invoke when a tab gets expanded.\n     * @param {AccordionTabOpenEvent} event - Custom tab open event.\n     * @group Emits\n     */\n    onOpen = new EventEmitter();\n    id = signal(uuid('pn_id_'));\n    tabList;\n    tabListSubscription = null;\n    _activeIndex;\n    _headerAriaLevel = 2;\n    preventActiveIndexPropagation = false;\n    tabs = [];\n    _componentStyle = inject(AccordionStyle);\n    /**\n     * Index of the active tab or an array of indexes in multiple mode.\n     * @deprecated use value property with new architecture instead.\n     * @group Props\n     */\n    get activeIndex() {\n        return this._activeIndex;\n    }\n    /**\n     * The aria-level that each accordion header will have. The default value is 2 as per W3C specifications\n     * @deprecated use AccoridonHeader component and bind attribute to the host.\n     * @group Props\n     */\n    get headerAriaLevel() {\n        return this._headerAriaLevel;\n    }\n    onKeydown(event) {\n        switch (event.code) {\n            case 'ArrowDown':\n                this.onTabArrowDownKey(event);\n                break;\n            case 'ArrowUp':\n                this.onTabArrowUpKey(event);\n                break;\n            case 'Home':\n                if (!event.shiftKey) {\n                    this.onTabHomeKey(event);\n                }\n                break;\n            case 'End':\n                if (!event.shiftKey) {\n                    this.onTabEndKey(event);\n                }\n                break;\n        }\n    }\n    onTabArrowDownKey(event) {\n        const nextHeaderAction = this.findNextHeaderAction(event.target.parentElement);\n        nextHeaderAction ? this.changeFocusedTab(nextHeaderAction) : this.onTabHomeKey(event);\n        event.preventDefault();\n    }\n    onTabArrowUpKey(event) {\n        const prevHeaderAction = this.findPrevHeaderAction(event.target.parentElement);\n        prevHeaderAction ? this.changeFocusedTab(prevHeaderAction) : this.onTabEndKey(event);\n        event.preventDefault();\n    }\n    onTabHomeKey(event) {\n        const firstHeaderAction = this.findFirstHeaderAction();\n        this.changeFocusedTab(firstHeaderAction);\n        event.preventDefault();\n    }\n    changeFocusedTab(element) {\n        if (element) {\n            focus(element);\n            if (this.selectOnFocus()) {\n                this.tabs.forEach((tab, i) => {\n                    let selected = this.multiple() ? this._activeIndex.includes(i) : i === this._activeIndex;\n                    if (this.multiple()) {\n                        if (!this._activeIndex) {\n                            this._activeIndex = [];\n                        }\n                        if (tab.id == element.id) {\n                            tab.selected = !tab.selected;\n                            if (!this._activeIndex.includes(i)) {\n                                this._activeIndex.push(i);\n                            }\n                            else {\n                                this._activeIndex = this._activeIndex.filter((ind) => ind !== i);\n                            }\n                        }\n                    }\n                    else {\n                        if (tab.id == element.id) {\n                            tab.selected = !tab.selected;\n                            this._activeIndex = i;\n                        }\n                        else {\n                            tab.selected = false;\n                        }\n                    }\n                    tab.selectedChange.emit(selected);\n                    this.activeIndexChange.emit(this._activeIndex);\n                    tab.cd.markForCheck();\n                });\n            }\n        }\n    }\n    findNextHeaderAction(tabElement, selfCheck = false) {\n        const nextTabElement = selfCheck ? tabElement : tabElement.nextElementSibling;\n        const headerElement = findSingle(nextTabElement, '[data-pc-section=\"accordionheader\"]');\n        return headerElement ? (getAttribute(headerElement, 'data-p-disabled') ? this.findNextHeaderAction(headerElement.parentElement) : findSingle(headerElement.parentElement, '[data-pc-section=\"accordionheader\"]')) : null;\n    }\n    findPrevHeaderAction(tabElement, selfCheck = false) {\n        const prevTabElement = selfCheck ? tabElement : tabElement.previousElementSibling;\n        const headerElement = findSingle(prevTabElement, '[data-pc-section=\"accordionheader\"]');\n        return headerElement ? (getAttribute(headerElement, 'data-p-disabled') ? this.findPrevHeaderAction(headerElement.parentElement) : findSingle(headerElement.parentElement, '[data-pc-section=\"accordionheader\"]')) : null;\n    }\n    findFirstHeaderAction() {\n        const firstEl = this.el.nativeElement.firstElementChild;\n        return this.findNextHeaderAction(firstEl, true);\n    }\n    findLastHeaderAction() {\n        const lastEl = this.el.nativeElement.lastElementChild;\n        return this.findPrevHeaderAction(lastEl, true);\n    }\n    onTabEndKey(event) {\n        const lastHeaderAction = this.findLastHeaderAction();\n        this.changeFocusedTab(lastHeaderAction);\n        event.preventDefault();\n    }\n    ngAfterContentInit() {\n        this.initTabs();\n        this.tabListSubscription = this.tabList.changes.subscribe((_) => {\n            this.initTabs();\n        });\n    }\n    initTabs() {\n        this.tabs = this.tabList.toArray();\n        this.tabs.forEach((tab) => {\n            tab.headerAriaLevel = this._headerAriaLevel;\n        });\n        this.updateSelectionState();\n        this.cd.markForCheck();\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    updateSelectionState() {\n        if (this.tabs && this.tabs.length && this._activeIndex != null) {\n            for (let i = 0; i < this.tabs.length; i++) {\n                let selected = this.multiple() ? this._activeIndex.includes(i) : i === this._activeIndex;\n                let changed = selected !== this.tabs[i].selected;\n                if (changed) {\n                    this.tabs[i].selected = selected;\n                    this.tabs[i].selectedChange.emit(selected);\n                    this.tabs[i].cd.markForCheck();\n                }\n            }\n        }\n    }\n    isTabActive(index) {\n        return this.multiple() ? this._activeIndex && this._activeIndex.includes(index) : this._activeIndex === index;\n    }\n    getTabProp(tab, name) {\n        return tab.props ? tab.props[name] : undefined;\n    }\n    updateActiveIndex() {\n        let index = this.multiple() ? [] : null;\n        this.tabs.forEach((tab, i) => {\n            if (tab.selected) {\n                if (this.multiple()) {\n                    index.push(i);\n                }\n                else {\n                    index = i;\n                    return;\n                }\n            }\n        });\n        this.preventActiveIndexPropagation = true;\n        this._activeIndex = index;\n        this.activeIndexChange.emit(index);\n    }\n    updateValue(value) {\n        const currentValue = this.value();\n        if (this.multiple()) {\n            const newValue = Array.isArray(currentValue) ? [...currentValue] : [];\n            const index = newValue.indexOf(value);\n            if (index !== -1) {\n                newValue.splice(index, 1);\n            }\n            else {\n                newValue.push(value);\n            }\n            this.value.set(newValue);\n        }\n        else {\n            if (currentValue === value) {\n                this.value.set(undefined);\n            }\n            else {\n                this.value.set(value);\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.tabListSubscription) {\n            this.tabListSubscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Accordion, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.1.0\", version: \"19.2.10\", type: Accordion, isStandalone: true, selector: \"p-accordion\", inputs: { value: { classPropertyName: \"value\", publicName: \"value\", isSignal: true, isRequired: false, transformFunction: null }, multiple: { classPropertyName: \"multiple\", publicName: \"multiple\", isSignal: true, isRequired: false, transformFunction: null }, style: { classPropertyName: \"style\", publicName: \"style\", isSignal: false, isRequired: false, transformFunction: null }, styleClass: { classPropertyName: \"styleClass\", publicName: \"styleClass\", isSignal: false, isRequired: false, transformFunction: null }, expandIcon: { classPropertyName: \"expandIcon\", publicName: \"expandIcon\", isSignal: false, isRequired: false, transformFunction: null }, collapseIcon: { classPropertyName: \"collapseIcon\", publicName: \"collapseIcon\", isSignal: false, isRequired: false, transformFunction: null }, selectOnFocus: { classPropertyName: \"selectOnFocus\", publicName: \"selectOnFocus\", isSignal: true, isRequired: false, transformFunction: null }, transitionOptions: { classPropertyName: \"transitionOptions\", publicName: \"transitionOptions\", isSignal: false, isRequired: false, transformFunction: null }, activeIndex: { classPropertyName: \"activeIndex\", publicName: \"activeIndex\", isSignal: false, isRequired: false, transformFunction: null }, headerAriaLevel: { classPropertyName: \"headerAriaLevel\", publicName: \"headerAriaLevel\", isSignal: false, isRequired: false, transformFunction: null } }, outputs: { value: \"valueChange\", activeIndexChange: \"activeIndexChange\", onClose: \"onClose\", onOpen: \"onOpen\" }, host: { listeners: { \"keydown\": \"onKeydown($event)\" }, properties: { \"class.p-accordion\": \"true\", \"class.p-component\": \"true\", \"class\": \"this.hostClass\", \"style\": \"this.hostStyle\" } }, providers: [AccordionStyle], queries: [{ propertyName: \"tabList\", predicate: AccordionTab, descendants: true }], usesInheritance: true, ngImport: i0, template: ` <ng-content /> `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"ngmodule\", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: Accordion, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-accordion',\n                    standalone: true,\n                    imports: [CommonModule, SharedModule],\n                    template: ` <ng-content /> `,\n                    host: {\n                        '[class.p-accordion]': 'true',\n                        '[class.p-component]': 'true'\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [AccordionStyle]\n                }]\n        }], propDecorators: { hostClass: [{\n                type: HostBinding,\n                args: ['class']\n            }], hostStyle: [{\n                type: HostBinding,\n                args: ['style']\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], expandIcon: [{\n                type: Input\n            }], collapseIcon: [{\n                type: Input\n            }], transitionOptions: [{\n                type: Input\n            }], activeIndexChange: [{\n                type: Output\n            }], onClose: [{\n                type: Output\n            }], onOpen: [{\n                type: Output\n            }], tabList: [{\n                type: ContentChildren,\n                args: [AccordionTab, { descendants: true }]\n            }], activeIndex: [{\n                type: Input\n            }], headerAriaLevel: [{\n                type: Input\n            }], onKeydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\nclass AccordionModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionModule, imports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent], exports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionModule, imports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent, SharedModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.10\", ngImport: i0, type: AccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent],\n                    exports: [Accordion, AccordionTab, SharedModule, AccordionPanel, AccordionHeader, AccordionContent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Accordion, AccordionClasses, AccordionContent, AccordionHeader, AccordionModule, AccordionPanel, AccordionStyle, AccordionTab };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}